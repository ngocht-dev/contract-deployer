{"id":"8fab7fdf42611ecba6f4fbe88ffe9646","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"@openzeppelin/contracts/access/IAccessControl.sol\";\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {ERC165Upgradeable} from \"../utils/introspection/ERC165Upgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControl, ERC165Upgradeable {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.AccessControl\n    struct AccessControlStorage {\n        mapping(bytes32 role => RoleData) _roles;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.AccessControl\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant AccessControlStorageLocation = 0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800;\n\n    function _getAccessControlStorage() private pure returns (AccessControlStorage storage $) {\n        assembly {\n            $.slot := AccessControlStorageLocation\n        }\n    }\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        $._roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (!hasRole(role, account)) {\n            $._roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (hasRole(role, account)) {\n            $._roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165 {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/interfaces/IERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"../token/ERC1155/IERC1155.sol\";\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[ERC].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"abstract/AbstractRole.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\n\nabstract contract AbstractRole is AccessControlUpgradeable {\n  bytes32 public constant OPERATOR_ROLE = keccak256(\"OPERATOR_ROLE\");\n  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n}\n"},"contracts/DmtpTech.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/interfaces/IERC1155.sol\";\nimport \"../abstract/AbstractRole.sol\";\nimport \"../interfaces/IKey.sol\";\nimport \"../libs/Signature.sol\";\n\ncontract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {\n    using Signature for bytes32;\n\n    uint256 public constant A_HUNDRED_PERCENT = 10_000; // 100%\n\n    event KeyBought(uint256 keyId, address buyer, uint256 price);\n    event KeySold(uint256 keyId, address seller, uint256 price);\n    event KeyGenerated(uint256 keyId, address kol);\n    event SignerSet(address signer);\n    event KeyContractUpdated(address key);\n    event CommissionUpdated(\n        uint256 rate,\n        address receiver_,\n        uint256 keyGeneratorRate\n    );\n\n    struct Commission {\n        uint256 rate;\n        address receiver;\n        uint256 keyGeneratorRate;\n    }\n\n    uint256 private _keyIdCounter;\n    IKey public key;\n    address public signer;\n\n    mapping(address => uint256) public generated;\n    Commission public commission;\n\n    mapping(uint256 => address) public keyGenerators;\n    bool public needToCheckWhitelist;\n\n    function __init(\n        address key_,\n        address signer_,\n        uint256 commissionRate_,\n        address commissionReceiver_,\n        uint256 commissionKeyGeneratorRate_\n    ) private {\n        __Context_init();\n\n        key = IKey(key_);\n\n        address sender = _msgSender();\n        _grantRole(DEFAULT_ADMIN_ROLE, sender);\n        _grantRole(OPERATOR_ROLE, sender);\n\n        signer = signer_;\n\n        commission.rate = commissionRate_;\n        commission.receiver = commissionReceiver_;\n        commission.keyGeneratorRate = commissionKeyGeneratorRate_;\n    }\n\n    function initialize(\n        address key_,\n        address signer_,\n        uint256 commissionRate_,\n        address commissionReceiver_,\n        uint256 commissionKeyGeneratorRate_\n    ) external initializer {\n        __init(\n            key_,\n            signer_,\n            commissionRate_,\n            commissionReceiver_,\n            commissionKeyGeneratorRate_\n        );\n    }\n\n    function setSigner(address signer_) external onlyRole(OPERATOR_ROLE) {\n        require(signer_ != address(0), \"DMTP_TECH_PARAM_ADDRESS_INVALID\");\n\n        signer = signer_;\n\n        emit SignerSet(signer_);\n    }\n\n    function buyKey(uint256 id_) external payable nonReentrant {\n        require(id_ <= _keyIdCounter, \"DMTP_TECH_PARAM_KEY_INVALID\");\n\n        uint256 price = key.priceOf(id_);\n\n        uint256 fee = (price * commission.rate) / A_HUNDRED_PERCENT;\n        uint256 payout = price + fee;\n\n        require(msg.value == payout, \"DMTP_TECH_PRICE_CHANGED\");\n\n        key.mint(_msgSender(), id_, 1, \"\");\n\n        uint256 keyGeneratorFee = (price * commission.keyGeneratorRate) /\n            A_HUNDRED_PERCENT;\n        if (keyGeneratorFee > 0) {\n            payable(keyGenerators[id_]).transfer(keyGeneratorFee);\n        }\n\n        if (commission.receiver != address(0)) {\n            payable(commission.receiver).transfer(fee - keyGeneratorFee);\n        }\n\n        emit KeyBought(id_, _msgSender(), price);\n    }\n\n    function sellKey(uint256 id_, uint256 price_) external nonReentrant {\n        address seller = _msgSender();\n\n        require(\n            allowToSellKey(seller, id_),\n            \"DMTP_TECH_NOT_ALLOW_TO_SELL_KEYS\"\n        );\n\n        uint256 price = key.sellPriceOf(id_);\n        require(price_ == price, \"DMTP_TECH_PRICE_CHANGED\");\n\n        uint256 fee = (price * commission.rate) / A_HUNDRED_PERCENT;\n        uint256 payout = price - fee;\n\n        key.burn(seller, id_, 1);\n\n        payable(seller).transfer(payout);\n\n        uint256 keyGeneratorFee = (price * commission.keyGeneratorRate) /\n            A_HUNDRED_PERCENT;\n        if (keyGeneratorFee > 0) {\n            payable(keyGenerators[id_]).transfer(keyGeneratorFee);\n        }\n\n        if (commission.receiver != address(0)) {\n            payable(commission.receiver).transfer(fee - keyGeneratorFee);\n        }\n\n        emit KeySold(id_, seller, price);\n    }\n\n    function generateKey(bytes memory signature_) external nonReentrant {\n        address sender = _msgSender();\n        require(generated[sender] == 0, \"DMTP_TECH_ALREADY_ISSUED_KEY\");\n\n        if (needToCheckWhitelist) {\n            bytes32 message = keccak256(\n                abi.encodePacked(sender, block.chainid, address(this))\n            ).prefixed();\n\n            require(\n                message.recoverSigner(signature_) == signer,\n                \"DMTP_TECH_PARAM_SIGNATURE_INVALID\"\n            );\n        }\n\n        uint256 id = _keyIdCounter + 1;\n\n        key.mint(_msgSender(), id, 1, \"\");\n\n        _keyIdCounter = id;\n        generated[sender] = id;\n        keyGenerators[id] = sender;\n\n        emit KeyGenerated(id, sender);\n    }\n\n    function setKeyContract(address key_) external onlyRole(OPERATOR_ROLE) {\n        require(key_ != address(0), \"DMTP_TECH_PARAM_ADDRESS_INVALID\");\n\n        key = IKey(key_);\n\n        emit KeyContractUpdated(key_);\n    }\n\n    function setCommission(\n        uint256 rate_,\n        address receiver_,\n        uint256 keyGeneratorRate_\n    ) external onlyRole(OPERATOR_ROLE) {\n        commission.receiver = receiver_;\n        commission.rate = rate_;\n        commission.keyGeneratorRate = keyGeneratorRate_;\n\n        emit CommissionUpdated(rate_, receiver_, keyGeneratorRate_);\n    }\n\n    function priceWithCommission(\n        uint256 id_\n    ) external view returns (uint256 price, uint256 fee, uint256 payout) {\n        price = key.priceOf(id_);\n        fee = (price * commission.rate) / A_HUNDRED_PERCENT;\n        payout = price + fee;\n        return (price, fee, payout);\n    }\n\n    function sellPriceWithCommission(\n        uint256 id_\n    ) external view returns (uint256 price, uint256 fee, uint256 payout) {\n        price = key.sellPriceOf(id_);\n        fee = (price * commission.rate) / A_HUNDRED_PERCENT;\n        payout = price - fee;\n        return (price, fee, payout);\n    }\n\n    function setKeyGeneratos(\n        uint256 keyId_,\n        address account_\n    ) external onlyRole(OPERATOR_ROLE) {\n        require(\n            keyId_ > 0 && keyId_ <= _keyIdCounter,\n            \"DMTP_TECH_PARAM_KEY_INVALID\"\n        );\n        require(account_ != address(0), \"DMTP_TECH_PARAM_ADDRESS_INVALID\");\n\n        keyGenerators[keyId_] = account_;\n    }\n\n    function allowToSellKey(\n        address seller_,\n        uint256 id_\n    ) public view returns (bool) {\n        if (generated[seller_] != id_) {\n            return true;\n        }\n\n        uint256 balances = IERC1155(address(key)).balanceOf(seller_, id_);\n        if (balances > 1) {\n            return true;\n        }\n\n        return false;\n    }\n\n    function setNeedToCheckWhitelist(\n        bool check_\n    ) external onlyRole(OPERATOR_ROLE) {\n        require(check_ != needToCheckWhitelist, \"DMTP_TECH_CONFIG_HAS_SET\");\n\n        needToCheckWhitelist = !check_;\n    }\n\n    function buyKeyFor(\n        uint256 id_,\n        address receiver_\n    ) external payable nonReentrant {\n        require(id_ <= _keyIdCounter, \"DMTP_TECH_PARAM_KEY_INVALID\");\n\n        uint256 price = key.priceOf(id_);\n\n        uint256 fee = (price * commission.rate) / A_HUNDRED_PERCENT;\n        uint256 payout = price + fee;\n\n        require(msg.value == payout, \"DMTP_TECH_PRICE_CHANGED\");\n\n        key.mint(receiver_, id_, 1, \"\");\n\n        uint256 keyGeneratorFee = (price * commission.keyGeneratorRate) /\n            A_HUNDRED_PERCENT;\n        if (keyGeneratorFee > 0) {\n            payable(keyGenerators[id_]).transfer(keyGeneratorFee);\n        }\n\n        if (commission.receiver != address(0)) {\n            payable(commission.receiver).transfer(fee - keyGeneratorFee);\n        }\n\n        emit KeyBought(id_, receiver_, price);\n    }\n}\n"},"interfaces/IKey.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\ninterface IKey {\n  function mint(\n    address to,\n    uint256 id,\n    uint256 amount,\n    bytes memory data\n  ) external;\n\n  function burn(address to, uint256 id, uint256 amount) external;\n\n  function priceOf(uint256 id) external view returns (uint256);\n\n  function priceOfBatch(\n    uint256[] memory ids\n  ) external view returns (uint256[] memory);\n\n  function sellPriceOf(uint256 id) external view returns (uint256);\n\n  function sellPriceOfBatch(\n    uint256[] memory ids\n  ) external view returns (uint256[] memory);\n}\n"},"libs/Signature.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nlibrary Signature {\n\n    function splitSignature(bytes memory sig) private pure returns (uint8 v, bytes32 r, bytes32 s) {\n        require(sig.length == 65);\n\n        assembly {\n            // first 32 bytes, after the length prefix.\n            r := mload(add(sig, 32))\n            // second 32 bytes.\n            s := mload(add(sig, 64))\n            // final byte (first byte of the next 32 bytes).\n            v := byte(0, mload(add(sig, 96)))\n        }\n\n        return (v, r, s);\n    }\n\n    function recoverSigner(bytes32 message, bytes memory sig) internal pure returns (address) {\n        (uint8 v, bytes32 r, bytes32 s) = splitSignature(sig);\n\n        return ecrecover(message, v, r, s);\n    }\n\n    function prefixed(bytes32 hash) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash));\n    }\n\n}"}},"settings":{"viaIR":true,"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"none"},"outputSelection":{"*":{"*":["evm.assembly","irOptimized","devdoc","abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}},"evmVersion":"paris"}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","exportedSymbols":{"AccessControlUpgradeable":[362],"ContextUpgradeable":[662],"ERC165Upgradeable":[702],"IAccessControl":[785],"Initializable":[616]},"id":363,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"@openzeppelin/contracts/access/IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":786,"src":"134:81:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":663,"src":"216:67:0","symbolAliases":[{"foreign":{"id":4,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"224:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"../utils/introspection/ERC165Upgradeable.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":703,"src":"284:79:0","symbolAliases":[{"foreign":{"id":6,"name":"ERC165Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"292:17:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":9,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":617,"src":"364:63:0","symbolAliases":[{"foreign":{"id":8,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"372:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":11,"name":"Initializable","nameLocations":["2136:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":616,"src":"2136:13:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"2136:13:0"},{"baseName":{"id":13,"name":"ContextUpgradeable","nameLocations":["2151:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":662,"src":"2151:18:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"2151:18:0"},{"baseName":{"id":15,"name":"IAccessControl","nameLocations":["2171:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":785,"src":"2171:14:0"},"id":16,"nodeType":"InheritanceSpecifier","src":"2171:14:0"},{"baseName":{"id":17,"name":"ERC165Upgradeable","nameLocations":["2187:17:0"],"nodeType":"IdentifierPath","referencedDeclaration":702,"src":"2187:17:0"},"id":18,"nodeType":"InheritanceSpecifier","src":"2187:17:0"}],"canonicalName":"AccessControlUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":10,"nodeType":"StructuredDocumentation","src":"429:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":362,"linearizedBaseContracts":[362,702,993,785,662,616],"name":"AccessControlUpgradeable","nameLocation":"2108:24:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControlUpgradeable.RoleData","id":25,"members":[{"constant":false,"id":22,"mutability":"mutable","name":"hasRole","nameLocation":"2270:7:0","nodeType":"VariableDeclaration","scope":25,"src":"2237:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":21,"keyName":"account","keyNameLocation":"2253:7:0","keyType":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"2245:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2237:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":20,"name":"bool","nodeType":"ElementaryTypeName","src":"2264:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":24,"mutability":"mutable","name":"adminRole","nameLocation":"2295:9:0","nodeType":"VariableDeclaration","scope":25,"src":"2287:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":23,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2287:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2218:8:0","nodeType":"StructDefinition","scope":362,"src":"2211:100:0","visibility":"public"},{"constant":true,"functionSelector":"a217fddf","id":28,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2341:18:0","nodeType":"VariableDeclaration","scope":362,"src":"2317:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":26,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2317:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":27,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2362:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"canonicalName":"AccessControlUpgradeable.AccessControlStorage","documentation":{"id":29,"nodeType":"StructuredDocumentation","src":"2374:71:0","text":"@custom:storage-location erc7201:openzeppelin.storage.AccessControl"},"id":35,"members":[{"constant":false,"id":34,"mutability":"mutable","name":"_roles","nameLocation":"2522:6:0","nodeType":"VariableDeclaration","scope":35,"src":"2488:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"typeName":{"id":33,"keyName":"role","keyNameLocation":"2504:4:0","keyType":{"id":30,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2496:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2488:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":32,"nodeType":"UserDefinedTypeName","pathNode":{"id":31,"name":"RoleData","nameLocations":["2512:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":25,"src":"2512:8:0"},"referencedDeclaration":25,"src":"2512:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage_ptr","typeString":"struct AccessControlUpgradeable.RoleData"}}},"visibility":"internal"}],"name":"AccessControlStorage","nameLocation":"2457:20:0","nodeType":"StructDefinition","scope":362,"src":"2450:85:0","visibility":"public"},{"constant":true,"id":38,"mutability":"constant","name":"AccessControlStorageLocation","nameLocation":"2683:28:0","nodeType":"VariableDeclaration","scope":362,"src":"2658:122:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":36,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2658:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830326464376263376465633464636565646461373735653538646435343165303861313136633663353338313563306264303238313932663762363236383030","id":37,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2714:66:0","typeDescriptions":{"typeIdentifier":"t_rational_1295953201772911215391058989745868821651057887752387839782086074958115661824_by_1","typeString":"int_const 1295...(68 digits omitted)...1824"},"value":"0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800"},"visibility":"private"},{"body":{"id":45,"nodeType":"Block","src":"2877:87:0","statements":[{"AST":{"nativeSrc":"2896:62:0","nodeType":"YulBlock","src":"2896:62:0","statements":[{"nativeSrc":"2910:38:0","nodeType":"YulAssignment","src":"2910:38:0","value":{"name":"AccessControlStorageLocation","nativeSrc":"2920:28:0","nodeType":"YulIdentifier","src":"2920:28:0"},"variableNames":[{"name":"$.slot","nativeSrc":"2910:6:0","nodeType":"YulIdentifier","src":"2910:6:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":42,"isOffset":false,"isSlot":true,"src":"2910:6:0","suffix":"slot","valueSize":1},{"declaration":38,"isOffset":false,"isSlot":false,"src":"2920:28:0","valueSize":1}],"id":44,"nodeType":"InlineAssembly","src":"2887:71:0"}]},"id":46,"implemented":true,"kind":"function","modifiers":[],"name":"_getAccessControlStorage","nameLocation":"2796:24:0","nodeType":"FunctionDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[],"src":"2820:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42,"mutability":"mutable","name":"$","nameLocation":"2874:1:0","nodeType":"VariableDeclaration","scope":46,"src":"2845:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":41,"nodeType":"UserDefinedTypeName","pathNode":{"id":40,"name":"AccessControlStorage","nameLocations":["2845:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"2845:20:0"},"referencedDeclaration":35,"src":"2845:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"src":"2844:32:0"},"scope":362,"src":"2787:177:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":56,"nodeType":"Block","src":"3181:44:0","statements":[{"expression":{"arguments":[{"id":52,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"3202:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":51,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[129,150],"referencedDeclaration":129,"src":"3191:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":53,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3191:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":54,"nodeType":"ExpressionStatement","src":"3191:16:0"},{"id":55,"nodeType":"PlaceholderStatement","src":"3217:1:0"}]},"documentation":{"id":47,"nodeType":"StructuredDocumentation","src":"2970:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":57,"name":"onlyRole","nameLocation":"3158:8:0","nodeType":"ModifierDefinition","parameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"role","nameLocation":"3175:4:0","nodeType":"VariableDeclaration","scope":57,"src":"3167:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":48,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3167:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3166:14:0"},"src":"3149:76:0","virtual":false,"visibility":"internal"},{"body":{"id":62,"nodeType":"Block","src":"3289:7:0","statements":[]},"id":63,"implemented":true,"kind":"function","modifiers":[{"id":60,"kind":"modifierInvocation","modifierName":{"id":59,"name":"onlyInitializing","nameLocations":["3272:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"3272:16:0"},"nodeType":"ModifierInvocation","src":"3272:16:0"}],"name":"__AccessControl_init","nameLocation":"3240:20:0","nodeType":"FunctionDefinition","parameters":{"id":58,"nodeType":"ParameterList","parameters":[],"src":"3260:2:0"},"returnParameters":{"id":61,"nodeType":"ParameterList","parameters":[],"src":"3289:0:0"},"scope":362,"src":"3231:65:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":68,"nodeType":"Block","src":"3370:7:0","statements":[]},"id":69,"implemented":true,"kind":"function","modifiers":[{"id":66,"kind":"modifierInvocation","modifierName":{"id":65,"name":"onlyInitializing","nameLocations":["3353:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"3353:16:0"},"nodeType":"ModifierInvocation","src":"3353:16:0"}],"name":"__AccessControl_init_unchained","nameLocation":"3311:30:0","nodeType":"FunctionDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[],"src":"3341:2:0"},"returnParameters":{"id":67,"nodeType":"ParameterList","parameters":[],"src":"3370:0:0"},"scope":362,"src":"3302:75:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[701],"body":{"id":90,"nodeType":"Block","src":"3534:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":83,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":78,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"3551:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":80,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"3571:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$785_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$785_$","typeString":"type(contract IAccessControl)"}],"id":79,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3566:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3566:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$785","typeString":"type(contract IAccessControl)"}},"id":82,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3587:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"3566:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"3551:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":86,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"3626:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":84,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3602:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlUpgradeable_$362_$","typeString":"type(contract super AccessControlUpgradeable)"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3608:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":701,"src":"3602:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":87,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3602:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3551:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":77,"id":89,"nodeType":"Return","src":"3544:94:0"}]},"documentation":{"id":70,"nodeType":"StructuredDocumentation","src":"3382:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":91,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"3452:17:0","nodeType":"FunctionDefinition","overrides":{"id":74,"nodeType":"OverrideSpecifier","overrides":[],"src":"3510:8:0"},"parameters":{"id":73,"nodeType":"ParameterList","parameters":[{"constant":false,"id":72,"mutability":"mutable","name":"interfaceId","nameLocation":"3477:11:0","nodeType":"VariableDeclaration","scope":91,"src":"3470:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":71,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3470:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3469:20:0"},"returnParameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":76,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":91,"src":"3528:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":75,"name":"bool","nodeType":"ElementaryTypeName","src":"3528:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3527:6:0"},"scope":362,"src":"3443:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[752],"body":{"id":115,"nodeType":"Block","src":"3815:124:0","statements":[{"assignments":[103],"declarations":[{"constant":false,"id":103,"mutability":"mutable","name":"$","nameLocation":"3854:1:0","nodeType":"VariableDeclaration","scope":115,"src":"3825:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":102,"nodeType":"UserDefinedTypeName","pathNode":{"id":101,"name":"AccessControlStorage","nameLocations":["3825:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"3825:20:0"},"referencedDeclaration":35,"src":"3825:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":106,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":104,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"3858:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3858:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3825:59:0"},{"expression":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":107,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"3901:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":108,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3903:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"3901:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":110,"indexExpression":{"id":109,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"3910:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":111,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3916:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":22,"src":"3901:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":113,"indexExpression":{"id":112,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3924:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":100,"id":114,"nodeType":"Return","src":"3894:38:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"3651:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":116,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"3741:7:0","nodeType":"FunctionDefinition","parameters":{"id":97,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"role","nameLocation":"3757:4:0","nodeType":"VariableDeclaration","scope":116,"src":"3749:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":93,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3749:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":96,"mutability":"mutable","name":"account","nameLocation":"3771:7:0","nodeType":"VariableDeclaration","scope":116,"src":"3763:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":95,"name":"address","nodeType":"ElementaryTypeName","src":"3763:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3748:31:0"},"returnParameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":99,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":116,"src":"3809:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":98,"name":"bool","nodeType":"ElementaryTypeName","src":"3809:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3808:6:0"},"scope":362,"src":"3732:207:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":128,"nodeType":"Block","src":"4204:47:0","statements":[{"expression":{"arguments":[{"id":123,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"4225:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":124,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"4231:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4231:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":122,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[129,150],"referencedDeclaration":150,"src":"4214:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":127,"nodeType":"ExpressionStatement","src":"4214:30:0"}]},"documentation":{"id":117,"nodeType":"StructuredDocumentation","src":"3945:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":129,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"4157:10:0","nodeType":"FunctionDefinition","parameters":{"id":120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":119,"mutability":"mutable","name":"role","nameLocation":"4176:4:0","nodeType":"VariableDeclaration","scope":129,"src":"4168:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":118,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:14:0"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[],"src":"4204:0:0"},"scope":362,"src":"4148:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":149,"nodeType":"Block","src":"4454:124:0","statements":[{"condition":{"id":141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4468:23:0","subExpression":{"arguments":[{"id":138,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4477:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":139,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4483:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":137,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"4469:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4469:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":148,"nodeType":"IfStatement","src":"4464:108:0","trueBody":{"id":147,"nodeType":"Block","src":"4493:79:0","statements":[{"errorCall":{"arguments":[{"id":143,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4547:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":144,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4556:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":142,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"4514:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$","typeString":"function (address,bytes32) pure returns (error)"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4514:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":146,"nodeType":"RevertStatement","src":"4507:54:0"}]}}]},"documentation":{"id":130,"nodeType":"StructuredDocumentation","src":"4257:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":150,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"4390:10:0","nodeType":"FunctionDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"role","nameLocation":"4409:4:0","nodeType":"VariableDeclaration","scope":150,"src":"4401:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4401:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":134,"mutability":"mutable","name":"account","nameLocation":"4423:7:0","nodeType":"VariableDeclaration","scope":150,"src":"4415:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"4415:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4400:31:0"},"returnParameters":{"id":136,"nodeType":"ParameterList","parameters":[],"src":"4454:0:0"},"scope":362,"src":"4381:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[760],"body":{"id":170,"nodeType":"Block","src":"4833:117:0","statements":[{"assignments":[160],"declarations":[{"constant":false,"id":160,"mutability":"mutable","name":"$","nameLocation":"4872:1:0","nodeType":"VariableDeclaration","scope":170,"src":"4843:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":159,"nodeType":"UserDefinedTypeName","pathNode":{"id":158,"name":"AccessControlStorage","nameLocations":["4843:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"4843:20:0"},"referencedDeclaration":35,"src":"4843:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":163,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":161,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"4876:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4876:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4843:59:0"},{"expression":{"expression":{"baseExpression":{"expression":{"id":164,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"4919:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":165,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4921:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"4919:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":167,"indexExpression":{"id":166,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4928:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4919:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4934:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":24,"src":"4919:24:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":157,"id":169,"nodeType":"Return","src":"4912:31:0"}]},"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"4584:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":171,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4768:12:0","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"role","nameLocation":"4789:4:0","nodeType":"VariableDeclaration","scope":171,"src":"4781:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4781:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4780:14:0"},"returnParameters":{"id":157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":171,"src":"4824:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":155,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4824:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4823:9:0"},"scope":362,"src":"4759:191:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[768],"body":{"id":189,"nodeType":"Block","src":"5340:42:0","statements":[{"expression":{"arguments":[{"id":185,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"5361:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":186,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"5367:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":184,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"5350:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5350:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":188,"nodeType":"ExpressionStatement","src":"5350:25:0"}]},"documentation":{"id":172,"nodeType":"StructuredDocumentation","src":"4956:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":190,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":180,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"5333:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":179,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5320:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":182,"kind":"modifierInvocation","modifierName":{"id":178,"name":"onlyRole","nameLocations":["5311:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"5311:8:0"},"nodeType":"ModifierInvocation","src":"5311:28:0"}],"name":"grantRole","nameLocation":"5255:9:0","nodeType":"FunctionDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":174,"mutability":"mutable","name":"role","nameLocation":"5273:4:0","nodeType":"VariableDeclaration","scope":190,"src":"5265:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":173,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5265:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"account","nameLocation":"5287:7:0","nodeType":"VariableDeclaration","scope":190,"src":"5279:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":175,"name":"address","nodeType":"ElementaryTypeName","src":"5279:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5264:31:0"},"returnParameters":{"id":183,"nodeType":"ParameterList","parameters":[],"src":"5340:0:0"},"scope":362,"src":"5246:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[776],"body":{"id":208,"nodeType":"Block","src":"5757:43:0","statements":[{"expression":{"arguments":[{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5779:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":205,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5785:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":203,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"5767:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5767:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":207,"nodeType":"ExpressionStatement","src":"5767:26:0"}]},"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"5388:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":209,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":199,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5750:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":198,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5737:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5737:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":201,"kind":"modifierInvocation","modifierName":{"id":197,"name":"onlyRole","nameLocations":["5728:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"5728:8:0"},"nodeType":"ModifierInvocation","src":"5728:28:0"}],"name":"revokeRole","nameLocation":"5671:10:0","nodeType":"FunctionDefinition","parameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"role","nameLocation":"5690:4:0","nodeType":"VariableDeclaration","scope":209,"src":"5682:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5682:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"account","nameLocation":"5704:7:0","nodeType":"VariableDeclaration","scope":209,"src":"5696:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"5696:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5681:31:0"},"returnParameters":{"id":202,"nodeType":"ParameterList","parameters":[],"src":"5757:0:0"},"scope":362,"src":"5662:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[784],"body":{"id":231,"nodeType":"Block","src":"6427:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":217,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"6441:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":218,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"6463:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6463:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6441:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":225,"nodeType":"IfStatement","src":"6437:102:0","trueBody":{"id":224,"nodeType":"Block","src":"6477:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":221,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"6498:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":223,"nodeType":"RevertStatement","src":"6491:37:0"}]}},{"expression":{"arguments":[{"id":227,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"6561:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":228,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"6567:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":226,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"6549:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6549:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":230,"nodeType":"ExpressionStatement","src":"6549:37:0"}]},"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"5806:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":232,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"6357:12:0","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"role","nameLocation":"6378:4:0","nodeType":"VariableDeclaration","scope":232,"src":"6370:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6370:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"callerConfirmation","nameLocation":"6392:18:0","nodeType":"VariableDeclaration","scope":232,"src":"6384:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"6384:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6369:42:0"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[],"src":"6427:0:0"},"scope":362,"src":"6348:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":267,"nodeType":"Block","src":"6791:245:0","statements":[{"assignments":[242],"declarations":[{"constant":false,"id":242,"mutability":"mutable","name":"$","nameLocation":"6830:1:0","nodeType":"VariableDeclaration","scope":267,"src":"6801:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":241,"nodeType":"UserDefinedTypeName","pathNode":{"id":240,"name":"AccessControlStorage","nameLocations":["6801:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"6801:20:0"},"referencedDeclaration":35,"src":"6801:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":245,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":243,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"6834:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6834:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6801:59:0"},{"assignments":[247],"declarations":[{"constant":false,"id":247,"mutability":"mutable","name":"previousAdminRole","nameLocation":"6878:17:0","nodeType":"VariableDeclaration","scope":267,"src":"6870:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6870:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":251,"initialValue":{"arguments":[{"id":249,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"6911:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":248,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"6898:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6898:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6870:46:0"},{"expression":{"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":252,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"6926:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":255,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6928:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"6926:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":256,"indexExpression":{"id":254,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"6935:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6926:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":257,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6941:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":24,"src":"6926:24:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":258,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"6953:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6926:36:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":260,"nodeType":"ExpressionStatement","src":"6926:36:0"},{"eventCall":{"arguments":[{"id":262,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"6994:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":263,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"7000:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":264,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"7019:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":261,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"6977:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6977:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":266,"nodeType":"EmitStatement","src":"6972:57:0"}]},"documentation":{"id":233,"nodeType":"StructuredDocumentation","src":"6599:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":268,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"6727:13:0","nodeType":"FunctionDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":235,"mutability":"mutable","name":"role","nameLocation":"6749:4:0","nodeType":"VariableDeclaration","scope":268,"src":"6741:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":234,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6741:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":237,"mutability":"mutable","name":"adminRole","nameLocation":"6763:9:0","nodeType":"VariableDeclaration","scope":268,"src":"6755:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6755:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6740:33:0"},"returnParameters":{"id":239,"nodeType":"ParameterList","parameters":[],"src":"6791:0:0"},"scope":362,"src":"6718:318:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":314,"nodeType":"Block","src":"7353:304:0","statements":[{"assignments":[280],"declarations":[{"constant":false,"id":280,"mutability":"mutable","name":"$","nameLocation":"7392:1:0","nodeType":"VariableDeclaration","scope":314,"src":"7363:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":279,"nodeType":"UserDefinedTypeName","pathNode":{"id":278,"name":"AccessControlStorage","nameLocations":["7363:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"7363:20:0"},"referencedDeclaration":35,"src":"7363:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":283,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":281,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"7396:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7396:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7363:59:0"},{"condition":{"id":288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7436:23:0","subExpression":{"arguments":[{"id":285,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"7445:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":286,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7451:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":284,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"7437:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7437:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":312,"nodeType":"Block","src":"7614:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7635:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":277,"id":311,"nodeType":"Return","src":"7628:12:0"}]},"id":313,"nodeType":"IfStatement","src":"7432:219:0","trueBody":{"id":309,"nodeType":"Block","src":"7461:147:0","statements":[{"expression":{"id":298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":289,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"7475:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":292,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7477:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"7475:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":293,"indexExpression":{"id":291,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"7484:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7475:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":294,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7490:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":22,"src":"7475:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":296,"indexExpression":{"id":295,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7498:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7475:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7509:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7475:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":299,"nodeType":"ExpressionStatement","src":"7475:38:0"},{"eventCall":{"arguments":[{"id":301,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"7544:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":302,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7550:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":303,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"7559:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7559:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":300,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"7532:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7532:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":306,"nodeType":"EmitStatement","src":"7527:45:0"},{"expression":{"hexValue":"74727565","id":307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7593:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":277,"id":308,"nodeType":"Return","src":"7586:11:0"}]}}]},"documentation":{"id":269,"nodeType":"StructuredDocumentation","src":"7042:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":315,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7279:10:0","nodeType":"FunctionDefinition","parameters":{"id":274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":271,"mutability":"mutable","name":"role","nameLocation":"7298:4:0","nodeType":"VariableDeclaration","scope":315,"src":"7290:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":270,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7290:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":273,"mutability":"mutable","name":"account","nameLocation":"7312:7:0","nodeType":"VariableDeclaration","scope":315,"src":"7304:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":272,"name":"address","nodeType":"ElementaryTypeName","src":"7304:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7289:31:0"},"returnParameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":315,"src":"7347:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":275,"name":"bool","nodeType":"ElementaryTypeName","src":"7347:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7346:6:0"},"scope":362,"src":"7270:387:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":360,"nodeType":"Block","src":"7976:304:0","statements":[{"assignments":[327],"declarations":[{"constant":false,"id":327,"mutability":"mutable","name":"$","nameLocation":"8015:1:0","nodeType":"VariableDeclaration","scope":360,"src":"7986:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":326,"nodeType":"UserDefinedTypeName","pathNode":{"id":325,"name":"AccessControlStorage","nameLocations":["7986:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"7986:20:0"},"referencedDeclaration":35,"src":"7986:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":330,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":328,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"8019:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8019:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7986:59:0"},{"condition":{"arguments":[{"id":332,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"8067:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":333,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8073:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":331,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"8059:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8059:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":358,"nodeType":"Block","src":"8237:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8258:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":324,"id":357,"nodeType":"Return","src":"8251:12:0"}]},"id":359,"nodeType":"IfStatement","src":"8055:219:0","trueBody":{"id":355,"nodeType":"Block","src":"8083:148:0","statements":[{"expression":{"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":335,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"8097:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":338,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8099:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"8097:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":339,"indexExpression":{"id":337,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"8106:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8097:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8112:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":22,"src":"8097:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":342,"indexExpression":{"id":341,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8120:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8097:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8131:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8097:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":345,"nodeType":"ExpressionStatement","src":"8097:39:0"},{"eventCall":{"arguments":[{"id":347,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"8167:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":348,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8173:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":349,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"8182:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8182:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":346,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"8155:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8155:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":352,"nodeType":"EmitStatement","src":"8150:45:0"},{"expression":{"hexValue":"74727565","id":353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8216:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":324,"id":354,"nodeType":"Return","src":"8209:11:0"}]}}]},"documentation":{"id":316,"nodeType":"StructuredDocumentation","src":"7663:224:0","text":" @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":361,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"7901:11:0","nodeType":"FunctionDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"mutability":"mutable","name":"role","nameLocation":"7921:4:0","nodeType":"VariableDeclaration","scope":361,"src":"7913:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":317,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7913:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":320,"mutability":"mutable","name":"account","nameLocation":"7935:7:0","nodeType":"VariableDeclaration","scope":361,"src":"7927:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":319,"name":"address","nodeType":"ElementaryTypeName","src":"7927:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7912:31:0"},"returnParameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":361,"src":"7970:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":322,"name":"bool","nodeType":"ElementaryTypeName","src":"7970:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7969:6:0"},"scope":362,"src":"7892:388:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":363,"src":"2090:6192:0","usedErrors":[379,382,712,715],"usedEvents":[387,724,733,742]}],"src":"108:8175:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[616]},"id":617,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":364,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":365,"nodeType":"StructuredDocumentation","src":"139:2209:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":616,"linearizedBaseContracts":[616],"name":"Initializable","nameLocation":"2367:13:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":366,"nodeType":"StructuredDocumentation","src":"2387:293:1","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":373,"members":[{"constant":false,"id":369,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:1","nodeType":"VariableDeclaration","scope":373,"src":"2813:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":368,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":372,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:1","nodeType":"VariableDeclaration","scope":373,"src":"2950:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":371,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:1","nodeType":"StructDefinition","scope":616,"src":"2685:290:1","visibility":"public"},{"constant":true,"id":376,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:1","nodeType":"VariableDeclaration","scope":616,"src":"3098:115:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":374,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:1","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":377,"nodeType":"StructuredDocumentation","src":"3220:60:1","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":379,"name":"InvalidInitialization","nameLocation":"3291:21:1","nodeType":"ErrorDefinition","parameters":{"id":378,"nodeType":"ParameterList","parameters":[],"src":"3312:2:1"},"src":"3285:30:1"},{"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"3321:57:1","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":382,"name":"NotInitializing","nameLocation":"3389:15:1","nodeType":"ErrorDefinition","parameters":{"id":381,"nodeType":"ParameterList","parameters":[],"src":"3404:2:1"},"src":"3383:24:1"},{"anonymous":false,"documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"3413:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":387,"name":"Initialized","nameLocation":"3514:11:1","nodeType":"EventDefinition","parameters":{"id":386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":385,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:1","nodeType":"VariableDeclaration","scope":387,"src":"3526:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":384,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:1"},"src":"3508:34:1"},{"body":{"id":469,"nodeType":"Block","src":"4092:1081:1","statements":[{"assignments":[392],"declarations":[{"constant":false,"id":392,"mutability":"mutable","name":"$","nameLocation":"4187:1:1","nodeType":"VariableDeclaration","scope":469,"src":"4158:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":391,"nodeType":"UserDefinedTypeName","pathNode":{"id":390,"name":"InitializableStorage","nameLocations":["4158:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":373,"src":"4158:20:1"},"referencedDeclaration":373,"src":"4158:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":395,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":393,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"4191:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:1"},{"assignments":[397],"declarations":[{"constant":false,"id":397,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:1","nodeType":"VariableDeclaration","scope":469,"src":"4279:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":396,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":401,"initialValue":{"id":400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:1","subExpression":{"expression":{"id":398,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"4302:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":399,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"4302:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:1"},{"assignments":[403],"declarations":[{"constant":false,"id":403,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:1","nodeType":"VariableDeclaration","scope":469,"src":"4327:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":402,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":406,"initialValue":{"expression":{"id":404,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"4348:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":405,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"4348:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:1"},{"assignments":[408],"declarations":[{"constant":false,"id":408,"mutability":"mutable","name":"initialSetup","nameLocation":"4711:12:1","nodeType":"VariableDeclaration","scope":469,"src":"4706:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":407,"name":"bool","nodeType":"ElementaryTypeName","src":"4706:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":414,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":409,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"4726:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4741:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4726:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":412,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"4746:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4726:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4706:54:1"},{"assignments":[416],"declarations":[{"constant":false,"id":416,"mutability":"mutable","name":"construction","nameLocation":"4775:12:1","nodeType":"VariableDeclaration","scope":469,"src":"4770:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":415,"name":"bool","nodeType":"ElementaryTypeName","src":"4770:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":429,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":417,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"4790:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4805:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4790:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":422,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4818:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$616","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$616","typeString":"contract Initializable"}],"id":421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4810:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":420,"name":"address","nodeType":"ElementaryTypeName","src":"4810:7:1","typeDescriptions":{}}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4810:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4824:4:1","memberName":"code","nodeType":"MemberAccess","src":"4810:18:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4829:6:1","memberName":"length","nodeType":"MemberAccess","src":"4810:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4839:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4810:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4790:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4770:70:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4855:13:1","subExpression":{"id":430,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"4856:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4872:13:1","subExpression":{"id":432,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"4873:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4855:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":439,"nodeType":"IfStatement","src":"4851:91:1","trueBody":{"id":438,"nodeType":"Block","src":"4887:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":435,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"4908:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4908:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":437,"nodeType":"RevertStatement","src":"4901:30:1"}]}},{"expression":{"id":444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":440,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"4951:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":442,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4953:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"4951:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4968:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4951:18:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":445,"nodeType":"ExpressionStatement","src":"4951:18:1"},{"condition":{"id":446,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"4983:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":454,"nodeType":"IfStatement","src":"4979:67:1","trueBody":{"id":453,"nodeType":"Block","src":"4999:47:1","statements":[{"expression":{"id":451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":447,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"5013:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":449,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5015:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"5013:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5031:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5013:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":452,"nodeType":"ExpressionStatement","src":"5013:22:1"}]}},{"id":455,"nodeType":"PlaceholderStatement","src":"5055:1:1"},{"condition":{"id":456,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"5070:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":468,"nodeType":"IfStatement","src":"5066:101:1","trueBody":{"id":467,"nodeType":"Block","src":"5086:81:1","statements":[{"expression":{"id":461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":457,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"5100:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":459,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5102:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"5100:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5118:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5100:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":462,"nodeType":"ExpressionStatement","src":"5100:23:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5154:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":463,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"5142:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":466,"nodeType":"EmitStatement","src":"5137:19:1"}]}}]},"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"3548:516:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":470,"name":"initializer","nameLocation":"4078:11:1","nodeType":"ModifierDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[],"src":"4089:2:1"},"src":"4069:1104:1","virtual":false,"visibility":"internal"},{"body":{"id":516,"nodeType":"Block","src":"6291:392:1","statements":[{"assignments":[477],"declarations":[{"constant":false,"id":477,"mutability":"mutable","name":"$","nameLocation":"6386:1:1","nodeType":"VariableDeclaration","scope":516,"src":"6357:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":476,"nodeType":"UserDefinedTypeName","pathNode":{"id":475,"name":"InitializableStorage","nameLocations":["6357:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":373,"src":"6357:20:1"},"referencedDeclaration":373,"src":"6357:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":480,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":478,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"6390:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6357:59:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":481,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6431:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":482,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6433:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"6431:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":483,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6450:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":484,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6452:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"6450:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":485,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"6468:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6450:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6431:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":492,"nodeType":"IfStatement","src":"6427:105:1","trueBody":{"id":491,"nodeType":"Block","src":"6477:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":488,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"6498:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":490,"nodeType":"RevertStatement","src":"6491:30:1"}]}},{"expression":{"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":493,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6541:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":495,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6543:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"6541:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":496,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"6558:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6541:24:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":498,"nodeType":"ExpressionStatement","src":"6541:24:1"},{"expression":{"id":503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":499,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6575:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":501,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6577:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"6575:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6575:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":504,"nodeType":"ExpressionStatement","src":"6575:22:1"},{"id":505,"nodeType":"PlaceholderStatement","src":"6607:1:1"},{"expression":{"id":510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":506,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6618:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":508,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6620:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"6618:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6636:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6618:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":511,"nodeType":"ExpressionStatement","src":"6618:23:1"},{"eventCall":{"arguments":[{"id":513,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"6668:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":512,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"6656:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6656:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":515,"nodeType":"EmitStatement","src":"6651:25:1"}]},"documentation":{"id":471,"nodeType":"StructuredDocumentation","src":"5179:1068:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":517,"name":"reinitializer","nameLocation":"6261:13:1","nodeType":"ModifierDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":473,"mutability":"mutable","name":"version","nameLocation":"6282:7:1","nodeType":"VariableDeclaration","scope":517,"src":"6275:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":472,"name":"uint64","nodeType":"ElementaryTypeName","src":"6275:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6274:16:1"},"src":"6252:431:1","virtual":false,"visibility":"internal"},{"body":{"id":524,"nodeType":"Block","src":"6921:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":520,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"6931:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6931:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":522,"nodeType":"ExpressionStatement","src":"6931:20:1"},{"id":523,"nodeType":"PlaceholderStatement","src":"6961:1:1"}]},"documentation":{"id":518,"nodeType":"StructuredDocumentation","src":"6689:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":525,"name":"onlyInitializing","nameLocation":"6902:16:1","nodeType":"ModifierDefinition","parameters":{"id":519,"nodeType":"ParameterList","parameters":[],"src":"6918:2:1"},"src":"6893:76:1","virtual":false,"visibility":"internal"},{"body":{"id":537,"nodeType":"Block","src":"7136:89:1","statements":[{"condition":{"id":531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7150:18:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":529,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"7151:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7151:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":536,"nodeType":"IfStatement","src":"7146:73:1","trueBody":{"id":535,"nodeType":"Block","src":"7170:49:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":532,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"7191:15:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7191:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":534,"nodeType":"RevertStatement","src":"7184:24:1"}]}}]},"documentation":{"id":526,"nodeType":"StructuredDocumentation","src":"6975:104:1","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":538,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7093:18:1","nodeType":"FunctionDefinition","parameters":{"id":527,"nodeType":"ParameterList","parameters":[],"src":"7111:2:1"},"returnParameters":{"id":528,"nodeType":"ParameterList","parameters":[],"src":"7136:0:1"},"scope":616,"src":"7084:141:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":583,"nodeType":"Block","src":"7760:373:1","statements":[{"assignments":[544],"declarations":[{"constant":false,"id":544,"mutability":"mutable","name":"$","nameLocation":"7855:1:1","nodeType":"VariableDeclaration","scope":583,"src":"7826:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":543,"nodeType":"UserDefinedTypeName","pathNode":{"id":542,"name":"InitializableStorage","nameLocations":["7826:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":373,"src":"7826:20:1"},"referencedDeclaration":373,"src":"7826:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":547,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":545,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"7859:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7859:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7826:59:1"},{"condition":{"expression":{"id":548,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"7900:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":549,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7902:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"7900:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":554,"nodeType":"IfStatement","src":"7896:76:1","trueBody":{"id":553,"nodeType":"Block","src":"7917:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":550,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"7938:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7938:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":552,"nodeType":"RevertStatement","src":"7931:30:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":555,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"7985:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":556,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7987:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"7985:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8008:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":558,"name":"uint64","nodeType":"ElementaryTypeName","src":"8008:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":557,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8003:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8003:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8016:3:1","memberName":"max","nodeType":"MemberAccess","src":"8003:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7985:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":582,"nodeType":"IfStatement","src":"7981:146:1","trueBody":{"id":581,"nodeType":"Block","src":"8021:106:1","statements":[{"expression":{"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":563,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"8035:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":565,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8037:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"8035:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8057:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":567,"name":"uint64","nodeType":"ElementaryTypeName","src":"8057:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":566,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8052:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8065:3:1","memberName":"max","nodeType":"MemberAccess","src":"8052:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8035:33:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":572,"nodeType":"ExpressionStatement","src":"8035:33:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8104:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":575,"name":"uint64","nodeType":"ElementaryTypeName","src":"8104:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":574,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8099:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8099:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8112:3:1","memberName":"max","nodeType":"MemberAccess","src":"8099:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":573,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"8087:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8087:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":580,"nodeType":"EmitStatement","src":"8082:34:1"}]}}]},"documentation":{"id":539,"nodeType":"StructuredDocumentation","src":"7231:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":584,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7720:20:1","nodeType":"FunctionDefinition","parameters":{"id":540,"nodeType":"ParameterList","parameters":[],"src":"7740:2:1"},"returnParameters":{"id":541,"nodeType":"ParameterList","parameters":[],"src":"7760:0:1"},"scope":616,"src":"7711:422:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":594,"nodeType":"Block","src":"8308:63:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":590,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"8325:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8325:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":592,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8352:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"8325:39:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":589,"id":593,"nodeType":"Return","src":"8318:46:1"}]},"documentation":{"id":585,"nodeType":"StructuredDocumentation","src":"8139:99:1","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":595,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8252:22:1","nodeType":"FunctionDefinition","parameters":{"id":586,"nodeType":"ParameterList","parameters":[],"src":"8274:2:1"},"returnParameters":{"id":589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":595,"src":"8300:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":587,"name":"uint64","nodeType":"ElementaryTypeName","src":"8300:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8299:8:1"},"scope":616,"src":"8243:128:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":605,"nodeType":"Block","src":"8543:64:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":601,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"8560:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":603,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8587:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"8560:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":600,"id":604,"nodeType":"Return","src":"8553:47:1"}]},"documentation":{"id":596,"nodeType":"StructuredDocumentation","src":"8377:105:1","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":606,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8496:15:1","nodeType":"FunctionDefinition","parameters":{"id":597,"nodeType":"ParameterList","parameters":[],"src":"8511:2:1"},"returnParameters":{"id":600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":606,"src":"8537:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":598,"name":"bool","nodeType":"ElementaryTypeName","src":"8537:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8536:6:1"},"scope":616,"src":"8487:120:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":614,"nodeType":"Block","src":"8827:80:1","statements":[{"AST":{"nativeSrc":"8846:55:1","nodeType":"YulBlock","src":"8846:55:1","statements":[{"nativeSrc":"8860:31:1","nodeType":"YulAssignment","src":"8860:31:1","value":{"name":"INITIALIZABLE_STORAGE","nativeSrc":"8870:21:1","nodeType":"YulIdentifier","src":"8870:21:1"},"variableNames":[{"name":"$.slot","nativeSrc":"8860:6:1","nodeType":"YulIdentifier","src":"8860:6:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":611,"isOffset":false,"isSlot":true,"src":"8860:6:1","suffix":"slot","valueSize":1},{"declaration":376,"isOffset":false,"isSlot":false,"src":"8870:21:1","valueSize":1}],"id":613,"nodeType":"InlineAssembly","src":"8837:64:1"}]},"documentation":{"id":607,"nodeType":"StructuredDocumentation","src":"8613:67:1","text":" @dev Returns a pointer to the storage namespace."},"id":615,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"8746:24:1","nodeType":"FunctionDefinition","parameters":{"id":608,"nodeType":"ParameterList","parameters":[],"src":"8770:2:1"},"returnParameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"mutability":"mutable","name":"$","nameLocation":"8824:1:1","nodeType":"VariableDeclaration","scope":615,"src":"8795:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":610,"nodeType":"UserDefinedTypeName","pathNode":{"id":609,"name":"InitializableStorage","nameLocations":["8795:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":373,"src":"8795:20:1"},"referencedDeclaration":373,"src":"8795:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"8794:32:1"},"scope":616,"src":"8737:170:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":617,"src":"2349:6560:1","usedErrors":[379,382],"usedEvents":[387]}],"src":"113:8797:1"},"id":1},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[662],"Initializable":[616]},"id":663,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":618,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:2"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":620,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":663,"sourceUnit":617,"src":"126:63:2","symbolAliases":[{"foreign":{"id":619,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"134:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":622,"name":"Initializable","nameLocations":["728:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":616,"src":"728:13:2"},"id":623,"nodeType":"InheritanceSpecifier","src":"728:13:2"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":621,"nodeType":"StructuredDocumentation","src":"191:496:2","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":662,"linearizedBaseContracts":[662,616],"name":"ContextUpgradeable","nameLocation":"706:18:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":628,"nodeType":"Block","src":"800:7:2","statements":[]},"id":629,"implemented":true,"kind":"function","modifiers":[{"id":626,"kind":"modifierInvocation","modifierName":{"id":625,"name":"onlyInitializing","nameLocations":["783:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"783:16:2"},"nodeType":"ModifierInvocation","src":"783:16:2"}],"name":"__Context_init","nameLocation":"757:14:2","nodeType":"FunctionDefinition","parameters":{"id":624,"nodeType":"ParameterList","parameters":[],"src":"771:2:2"},"returnParameters":{"id":627,"nodeType":"ParameterList","parameters":[],"src":"800:0:2"},"scope":662,"src":"748:59:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":634,"nodeType":"Block","src":"875:7:2","statements":[]},"id":635,"implemented":true,"kind":"function","modifiers":[{"id":632,"kind":"modifierInvocation","modifierName":{"id":631,"name":"onlyInitializing","nameLocations":["858:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"858:16:2"},"nodeType":"ModifierInvocation","src":"858:16:2"}],"name":"__Context_init_unchained","nameLocation":"822:24:2","nodeType":"FunctionDefinition","parameters":{"id":630,"nodeType":"ParameterList","parameters":[],"src":"846:2:2"},"returnParameters":{"id":633,"nodeType":"ParameterList","parameters":[],"src":"875:0:2"},"scope":662,"src":"813:69:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":643,"nodeType":"Block","src":"949:34:2","statements":[{"expression":{"expression":{"id":640,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:2","memberName":"sender","nodeType":"MemberAccess","src":"966:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":639,"id":642,"nodeType":"Return","src":"959:17:2"}]},"id":644,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:2","nodeType":"FunctionDefinition","parameters":{"id":636,"nodeType":"ParameterList","parameters":[],"src":"906:2:2"},"returnParameters":{"id":639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":644,"src":"940:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":637,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:2"},"scope":662,"src":"887:96:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":652,"nodeType":"Block","src":"1056:32:2","statements":[{"expression":{"expression":{"id":649,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:2","memberName":"data","nodeType":"MemberAccess","src":"1073:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":648,"id":651,"nodeType":"Return","src":"1066:15:2"}]},"id":653,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:2","nodeType":"FunctionDefinition","parameters":{"id":645,"nodeType":"ParameterList","parameters":[],"src":"1006:2:2"},"returnParameters":{"id":648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":647,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":653,"src":"1040:14:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":646,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:2"},"scope":662,"src":"989:99:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":660,"nodeType":"Block","src":"1166:25:2","statements":[{"expression":{"hexValue":"30","id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":657,"id":659,"nodeType":"Return","src":"1176:8:2"}]},"id":661,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:2","nodeType":"FunctionDefinition","parameters":{"id":654,"nodeType":"ParameterList","parameters":[],"src":"1123:2:2"},"returnParameters":{"id":657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":656,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":661,"src":"1157:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":655,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:2"},"scope":662,"src":"1094:97:2","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":663,"src":"688:505:2","usedErrors":[379,382],"usedEvents":[387]}],"src":"101:1093:2"},"id":2},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","exportedSymbols":{"ERC165Upgradeable":[702],"IERC165":[993],"Initializable":[616]},"id":703,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":664,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:3"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":666,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":703,"sourceUnit":994,"src":"140:80:3","symbolAliases":[{"foreign":{"id":665,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"148:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":668,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":703,"sourceUnit":617,"src":"221:66:3","symbolAliases":[{"foreign":{"id":667,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"229:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":670,"name":"Initializable","nameLocations":["808:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":616,"src":"808:13:3"},"id":671,"nodeType":"InheritanceSpecifier","src":"808:13:3"},{"baseName":{"id":672,"name":"IERC165","nameLocations":["823:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":993,"src":"823:7:3"},"id":673,"nodeType":"InheritanceSpecifier","src":"823:7:3"}],"canonicalName":"ERC165Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":669,"nodeType":"StructuredDocumentation","src":"289:479:3","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":702,"linearizedBaseContracts":[702,993,616],"name":"ERC165Upgradeable","nameLocation":"787:17:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":678,"nodeType":"Block","src":"888:7:3","statements":[]},"id":679,"implemented":true,"kind":"function","modifiers":[{"id":676,"kind":"modifierInvocation","modifierName":{"id":675,"name":"onlyInitializing","nameLocations":["871:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"871:16:3"},"nodeType":"ModifierInvocation","src":"871:16:3"}],"name":"__ERC165_init","nameLocation":"846:13:3","nodeType":"FunctionDefinition","parameters":{"id":674,"nodeType":"ParameterList","parameters":[],"src":"859:2:3"},"returnParameters":{"id":677,"nodeType":"ParameterList","parameters":[],"src":"888:0:3"},"scope":702,"src":"837:58:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":684,"nodeType":"Block","src":"962:7:3","statements":[]},"id":685,"implemented":true,"kind":"function","modifiers":[{"id":682,"kind":"modifierInvocation","modifierName":{"id":681,"name":"onlyInitializing","nameLocations":["945:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"945:16:3"},"nodeType":"ModifierInvocation","src":"945:16:3"}],"name":"__ERC165_init_unchained","nameLocation":"910:23:3","nodeType":"FunctionDefinition","parameters":{"id":680,"nodeType":"ParameterList","parameters":[],"src":"933:2:3"},"returnParameters":{"id":683,"nodeType":"ParameterList","parameters":[],"src":"962:0:3"},"scope":702,"src":"901:68:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[992],"body":{"id":700,"nodeType":"Block","src":"1117:64:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":693,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"1134:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":695,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"1154:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$993_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$993_$","typeString":"type(contract IERC165)"}],"id":694,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1149:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1149:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$993","typeString":"type(contract IERC165)"}},"id":697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1163:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"1149:25:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1134:40:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":692,"id":699,"nodeType":"Return","src":"1127:47:3"}]},"documentation":{"id":686,"nodeType":"StructuredDocumentation","src":"974:56:3","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":701,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1044:17:3","nodeType":"FunctionDefinition","parameters":{"id":689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":688,"mutability":"mutable","name":"interfaceId","nameLocation":"1069:11:3","nodeType":"VariableDeclaration","scope":701,"src":"1062:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":687,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1062:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1061:20:3"},"returnParameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":701,"src":"1111:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":690,"name":"bool","nodeType":"ElementaryTypeName","src":"1111:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1110:6:3"},"scope":702,"src":"1035:146:3","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":703,"src":"769:414:3","usedErrors":[379,382],"usedEvents":[387]}],"src":"114:1070:3"},"id":3},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[785]},"id":786,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":704,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":705,"nodeType":"StructuredDocumentation","src":"135:90:4","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":785,"linearizedBaseContracts":[785],"name":"IAccessControl","nameLocation":"236:14:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":706,"nodeType":"StructuredDocumentation","src":"257:56:4","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":712,"name":"AccessControlUnauthorizedAccount","nameLocation":"324:32:4","nodeType":"ErrorDefinition","parameters":{"id":711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":708,"mutability":"mutable","name":"account","nameLocation":"365:7:4","nodeType":"VariableDeclaration","scope":712,"src":"357:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":707,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":710,"mutability":"mutable","name":"neededRole","nameLocation":"382:10:4","nodeType":"VariableDeclaration","scope":712,"src":"374:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":709,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"356:37:4"},"src":"318:76:4"},{"documentation":{"id":713,"nodeType":"StructuredDocumentation","src":"400:148:4","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":715,"name":"AccessControlBadConfirmation","nameLocation":"559:28:4","nodeType":"ErrorDefinition","parameters":{"id":714,"nodeType":"ParameterList","parameters":[],"src":"587:2:4"},"src":"553:37:4"},{"anonymous":false,"documentation":{"id":716,"nodeType":"StructuredDocumentation","src":"596:254:4","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":724,"name":"RoleAdminChanged","nameLocation":"861:16:4","nodeType":"EventDefinition","parameters":{"id":723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":718,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"894:4:4","nodeType":"VariableDeclaration","scope":724,"src":"878:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":717,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":720,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"916:17:4","nodeType":"VariableDeclaration","scope":724,"src":"900:33:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":719,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":722,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"951:12:4","nodeType":"VariableDeclaration","scope":724,"src":"935:28:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":721,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:87:4"},"src":"855:110:4"},{"anonymous":false,"documentation":{"id":725,"nodeType":"StructuredDocumentation","src":"971:295:4","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":733,"name":"RoleGranted","nameLocation":"1277:11:4","nodeType":"EventDefinition","parameters":{"id":732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":727,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1305:4:4","nodeType":"VariableDeclaration","scope":733,"src":"1289:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":726,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1289:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":729,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1327:7:4","nodeType":"VariableDeclaration","scope":733,"src":"1311:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":731,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1352:6:4","nodeType":"VariableDeclaration","scope":733,"src":"1336:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":730,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:71:4"},"src":"1271:89:4"},{"anonymous":false,"documentation":{"id":734,"nodeType":"StructuredDocumentation","src":"1366:275:4","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":742,"name":"RoleRevoked","nameLocation":"1652:11:4","nodeType":"EventDefinition","parameters":{"id":741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":736,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1680:4:4","nodeType":"VariableDeclaration","scope":742,"src":"1664:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":735,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1664:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":738,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1702:7:4","nodeType":"VariableDeclaration","scope":742,"src":"1686:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":737,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":740,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1727:6:4","nodeType":"VariableDeclaration","scope":742,"src":"1711:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":739,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:71:4"},"src":"1646:89:4"},{"documentation":{"id":743,"nodeType":"StructuredDocumentation","src":"1741:76:4","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":752,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1831:7:4","nodeType":"FunctionDefinition","parameters":{"id":748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":745,"mutability":"mutable","name":"role","nameLocation":"1847:4:4","nodeType":"VariableDeclaration","scope":752,"src":"1839:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":744,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1839:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":747,"mutability":"mutable","name":"account","nameLocation":"1861:7:4","nodeType":"VariableDeclaration","scope":752,"src":"1853:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":746,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:31:4"},"returnParameters":{"id":751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":750,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":752,"src":"1893:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":749,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1892:6:4"},"scope":785,"src":"1822:77:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":753,"nodeType":"StructuredDocumentation","src":"1905:184:4","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":760,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2103:12:4","nodeType":"FunctionDefinition","parameters":{"id":756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":755,"mutability":"mutable","name":"role","nameLocation":"2124:4:4","nodeType":"VariableDeclaration","scope":760,"src":"2116:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":754,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2116:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2115:14:4"},"returnParameters":{"id":759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":760,"src":"2153:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":757,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2152:9:4"},"scope":785,"src":"2094:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":761,"nodeType":"StructuredDocumentation","src":"2168:239:4","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":768,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2421:9:4","nodeType":"FunctionDefinition","parameters":{"id":766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":763,"mutability":"mutable","name":"role","nameLocation":"2439:4:4","nodeType":"VariableDeclaration","scope":768,"src":"2431:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":762,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2431:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":765,"mutability":"mutable","name":"account","nameLocation":"2453:7:4","nodeType":"VariableDeclaration","scope":768,"src":"2445:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":764,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:31:4"},"returnParameters":{"id":767,"nodeType":"ParameterList","parameters":[],"src":"2470:0:4"},"scope":785,"src":"2412:59:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":769,"nodeType":"StructuredDocumentation","src":"2477:223:4","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":776,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2714:10:4","nodeType":"FunctionDefinition","parameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"mutability":"mutable","name":"role","nameLocation":"2733:4:4","nodeType":"VariableDeclaration","scope":776,"src":"2725:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":770,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2725:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":773,"mutability":"mutable","name":"account","nameLocation":"2747:7:4","nodeType":"VariableDeclaration","scope":776,"src":"2739:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":772,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2724:31:4"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[],"src":"2764:0:4"},"scope":785,"src":"2705:60:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":777,"nodeType":"StructuredDocumentation","src":"2771:491:4","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":784,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3276:12:4","nodeType":"FunctionDefinition","parameters":{"id":782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":779,"mutability":"mutable","name":"role","nameLocation":"3297:4:4","nodeType":"VariableDeclaration","scope":784,"src":"3289:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":778,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3289:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":781,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3311:18:4","nodeType":"VariableDeclaration","scope":784,"src":"3303:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":780,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3288:42:4"},"returnParameters":{"id":783,"nodeType":"ParameterList","parameters":[],"src":"3339:0:4"},"scope":785,"src":"3267:73:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":786,"src":"226:3116:4","usedErrors":[712,715],"usedEvents":[724,733,742]}],"src":"109:3234:4"},"id":4},"@openzeppelin/contracts/interfaces/IERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1155.sol","exportedSymbols":{"IERC1155":[912]},"id":790,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":787,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"../token/ERC1155/IERC1155.sol","id":789,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":790,"sourceUnit":913,"src":"133:55:5","symbolAliases":[{"foreign":{"id":788,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"141:8:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"107:82:5"},"id":5},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","exportedSymbols":{"IERC1155":[912],"IERC165":[993]},"id":913,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":791,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"110:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":793,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":913,"sourceUnit":994,"src":"136:62:6","symbolAliases":[{"foreign":{"id":792,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"144:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":795,"name":"IERC165","nameLocations":["359:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":993,"src":"359:7:6"},"id":796,"nodeType":"InheritanceSpecifier","src":"359:7:6"}],"canonicalName":"IERC1155","contractDependencies":[],"contractKind":"interface","documentation":{"id":794,"nodeType":"StructuredDocumentation","src":"200:136:6","text":" @dev Required interface of an ERC-1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[ERC]."},"fullyImplemented":false,"id":912,"linearizedBaseContracts":[912,993],"name":"IERC1155","nameLocation":"347:8:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":797,"nodeType":"StructuredDocumentation","src":"373:125:6","text":" @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."},"eventSelector":"c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62","id":809,"name":"TransferSingle","nameLocation":"509:14:6","nodeType":"EventDefinition","parameters":{"id":808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":799,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"540:8:6","nodeType":"VariableDeclaration","scope":809,"src":"524:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":798,"name":"address","nodeType":"ElementaryTypeName","src":"524:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":801,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"566:4:6","nodeType":"VariableDeclaration","scope":809,"src":"550:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":800,"name":"address","nodeType":"ElementaryTypeName","src":"550:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":803,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"588:2:6","nodeType":"VariableDeclaration","scope":809,"src":"572:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":802,"name":"address","nodeType":"ElementaryTypeName","src":"572:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":805,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"600:2:6","nodeType":"VariableDeclaration","scope":809,"src":"592:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":804,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":807,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"612:5:6","nodeType":"VariableDeclaration","scope":809,"src":"604:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":806,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"523:95:6"},"src":"503:116:6"},{"anonymous":false,"documentation":{"id":810,"nodeType":"StructuredDocumentation","src":"625:144:6","text":" @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."},"eventSelector":"4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb","id":824,"name":"TransferBatch","nameLocation":"780:13:6","nodeType":"EventDefinition","parameters":{"id":823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":812,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"819:8:6","nodeType":"VariableDeclaration","scope":824,"src":"803:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":811,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":814,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"853:4:6","nodeType":"VariableDeclaration","scope":824,"src":"837:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":813,"name":"address","nodeType":"ElementaryTypeName","src":"837:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":816,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"883:2:6","nodeType":"VariableDeclaration","scope":824,"src":"867:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":815,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":819,"indexed":false,"mutability":"mutable","name":"ids","nameLocation":"905:3:6","nodeType":"VariableDeclaration","scope":824,"src":"895:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":817,"name":"uint256","nodeType":"ElementaryTypeName","src":"895:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":818,"nodeType":"ArrayTypeName","src":"895:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":822,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"928:6:6","nodeType":"VariableDeclaration","scope":824,"src":"918:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":820,"name":"uint256","nodeType":"ElementaryTypeName","src":"918:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":821,"nodeType":"ArrayTypeName","src":"918:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"793:147:6"},"src":"774:167:6"},{"anonymous":false,"documentation":{"id":825,"nodeType":"StructuredDocumentation","src":"947:147:6","text":" @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":833,"name":"ApprovalForAll","nameLocation":"1105:14:6","nodeType":"EventDefinition","parameters":{"id":832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":827,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1136:7:6","nodeType":"VariableDeclaration","scope":833,"src":"1120:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":826,"name":"address","nodeType":"ElementaryTypeName","src":"1120:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":829,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1161:8:6","nodeType":"VariableDeclaration","scope":833,"src":"1145:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":828,"name":"address","nodeType":"ElementaryTypeName","src":"1145:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":831,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"1176:8:6","nodeType":"VariableDeclaration","scope":833,"src":"1171:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":830,"name":"bool","nodeType":"ElementaryTypeName","src":"1171:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1119:66:6"},"src":"1099:87:6"},{"anonymous":false,"documentation":{"id":834,"nodeType":"StructuredDocumentation","src":"1192:343:6","text":" @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."},"eventSelector":"6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b","id":840,"name":"URI","nameLocation":"1546:3:6","nodeType":"EventDefinition","parameters":{"id":839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":836,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1557:5:6","nodeType":"VariableDeclaration","scope":840,"src":"1550:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":835,"name":"string","nodeType":"ElementaryTypeName","src":"1550:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":838,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1580:2:6","nodeType":"VariableDeclaration","scope":840,"src":"1564:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":837,"name":"uint256","nodeType":"ElementaryTypeName","src":"1564:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:34:6"},"src":"1540:44:6"},{"documentation":{"id":841,"nodeType":"StructuredDocumentation","src":"1590:90:6","text":" @dev Returns the value of tokens of token type `id` owned by `account`."},"functionSelector":"00fdd58e","id":850,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1694:9:6","nodeType":"FunctionDefinition","parameters":{"id":846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":843,"mutability":"mutable","name":"account","nameLocation":"1712:7:6","nodeType":"VariableDeclaration","scope":850,"src":"1704:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":842,"name":"address","nodeType":"ElementaryTypeName","src":"1704:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":845,"mutability":"mutable","name":"id","nameLocation":"1729:2:6","nodeType":"VariableDeclaration","scope":850,"src":"1721:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":844,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1703:29:6"},"returnParameters":{"id":849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":850,"src":"1756:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":847,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1755:9:6"},"scope":912,"src":"1685:80:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":851,"nodeType":"StructuredDocumentation","src":"1771:188:6","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":863,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"1973:14:6","nodeType":"FunctionDefinition","parameters":{"id":858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":854,"mutability":"mutable","name":"accounts","nameLocation":"2016:8:6","nodeType":"VariableDeclaration","scope":863,"src":"1997:27:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":852,"name":"address","nodeType":"ElementaryTypeName","src":"1997:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":853,"nodeType":"ArrayTypeName","src":"1997:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":857,"mutability":"mutable","name":"ids","nameLocation":"2053:3:6","nodeType":"VariableDeclaration","scope":863,"src":"2034:22:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":855,"name":"uint256","nodeType":"ElementaryTypeName","src":"2034:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":856,"nodeType":"ArrayTypeName","src":"2034:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1987:75:6"},"returnParameters":{"id":862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":863,"src":"2086:16:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":859,"name":"uint256","nodeType":"ElementaryTypeName","src":"2086:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":860,"nodeType":"ArrayTypeName","src":"2086:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2085:18:6"},"scope":912,"src":"1964:140:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":864,"nodeType":"StructuredDocumentation","src":"2110:254:6","text":" @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"functionSelector":"a22cb465","id":871,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2378:17:6","nodeType":"FunctionDefinition","parameters":{"id":869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":866,"mutability":"mutable","name":"operator","nameLocation":"2404:8:6","nodeType":"VariableDeclaration","scope":871,"src":"2396:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":865,"name":"address","nodeType":"ElementaryTypeName","src":"2396:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":868,"mutability":"mutable","name":"approved","nameLocation":"2419:8:6","nodeType":"VariableDeclaration","scope":871,"src":"2414:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":867,"name":"bool","nodeType":"ElementaryTypeName","src":"2414:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2395:33:6"},"returnParameters":{"id":870,"nodeType":"ParameterList","parameters":[],"src":"2437:0:6"},"scope":912,"src":"2369:69:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":872,"nodeType":"StructuredDocumentation","src":"2444:135:6","text":" @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":881,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"2593:16:6","nodeType":"FunctionDefinition","parameters":{"id":877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":874,"mutability":"mutable","name":"account","nameLocation":"2618:7:6","nodeType":"VariableDeclaration","scope":881,"src":"2610:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":873,"name":"address","nodeType":"ElementaryTypeName","src":"2610:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":876,"mutability":"mutable","name":"operator","nameLocation":"2635:8:6","nodeType":"VariableDeclaration","scope":881,"src":"2627:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":875,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2609:35:6"},"returnParameters":{"id":880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":881,"src":"2668:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":878,"name":"bool","nodeType":"ElementaryTypeName","src":"2668:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2667:6:6"},"scope":912,"src":"2584:90:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":882,"nodeType":"StructuredDocumentation","src":"2680:910:6","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"functionSelector":"f242432a","id":895,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3604:16:6","nodeType":"FunctionDefinition","parameters":{"id":893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":884,"mutability":"mutable","name":"from","nameLocation":"3629:4:6","nodeType":"VariableDeclaration","scope":895,"src":"3621:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":883,"name":"address","nodeType":"ElementaryTypeName","src":"3621:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":886,"mutability":"mutable","name":"to","nameLocation":"3643:2:6","nodeType":"VariableDeclaration","scope":895,"src":"3635:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":885,"name":"address","nodeType":"ElementaryTypeName","src":"3635:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":888,"mutability":"mutable","name":"id","nameLocation":"3655:2:6","nodeType":"VariableDeclaration","scope":895,"src":"3647:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":887,"name":"uint256","nodeType":"ElementaryTypeName","src":"3647:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":890,"mutability":"mutable","name":"value","nameLocation":"3667:5:6","nodeType":"VariableDeclaration","scope":895,"src":"3659:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":889,"name":"uint256","nodeType":"ElementaryTypeName","src":"3659:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":892,"mutability":"mutable","name":"data","nameLocation":"3689:4:6","nodeType":"VariableDeclaration","scope":895,"src":"3674:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":891,"name":"bytes","nodeType":"ElementaryTypeName","src":"3674:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3620:74:6"},"returnParameters":{"id":894,"nodeType":"ParameterList","parameters":[],"src":"3703:0:6"},"scope":912,"src":"3595:109:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":896,"nodeType":"StructuredDocumentation","src":"3710:814:6","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"functionSelector":"2eb2c2d6","id":911,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4538:21:6","nodeType":"FunctionDefinition","parameters":{"id":909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":898,"mutability":"mutable","name":"from","nameLocation":"4577:4:6","nodeType":"VariableDeclaration","scope":911,"src":"4569:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":897,"name":"address","nodeType":"ElementaryTypeName","src":"4569:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":900,"mutability":"mutable","name":"to","nameLocation":"4599:2:6","nodeType":"VariableDeclaration","scope":911,"src":"4591:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":899,"name":"address","nodeType":"ElementaryTypeName","src":"4591:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":903,"mutability":"mutable","name":"ids","nameLocation":"4630:3:6","nodeType":"VariableDeclaration","scope":911,"src":"4611:22:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":901,"name":"uint256","nodeType":"ElementaryTypeName","src":"4611:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":902,"nodeType":"ArrayTypeName","src":"4611:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":906,"mutability":"mutable","name":"values","nameLocation":"4662:6:6","nodeType":"VariableDeclaration","scope":911,"src":"4643:25:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":904,"name":"uint256","nodeType":"ElementaryTypeName","src":"4643:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":905,"nodeType":"ArrayTypeName","src":"4643:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":908,"mutability":"mutable","name":"data","nameLocation":"4693:4:6","nodeType":"VariableDeclaration","scope":911,"src":"4678:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":907,"name":"bytes","nodeType":"ElementaryTypeName","src":"4678:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4559:144:6"},"returnParameters":{"id":910,"nodeType":"ParameterList","parameters":[],"src":"4712:0:6"},"scope":912,"src":"4529:184:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":913,"src":"337:4378:6","usedErrors":[],"usedEvents":[809,824,833,840]}],"src":"110:4606:6"},"id":6},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[981]},"id":982,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":914,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:7"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":915,"nodeType":"StructuredDocumentation","src":"135:894:7","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":981,"linearizedBaseContracts":[981],"name":"ReentrancyGuard","nameLocation":"1048:15:7","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":918,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:7","nodeType":"VariableDeclaration","scope":981,"src":"1818:40:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":916,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":921,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:7","nodeType":"VariableDeclaration","scope":981,"src":"1864:36:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":919,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":923,"mutability":"mutable","name":"_status","nameLocation":"1923:7:7","nodeType":"VariableDeclaration","scope":981,"src":"1907:23:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":922,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":924,"nodeType":"StructuredDocumentation","src":"1937:52:7","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":926,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:7","nodeType":"ErrorDefinition","parameters":{"id":925,"nodeType":"ParameterList","parameters":[],"src":"2028:2:7"},"src":"1994:37:7"},{"body":{"id":933,"nodeType":"Block","src":"2051:38:7","statements":[{"expression":{"id":931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":929,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"2061:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":930,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"2071:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":932,"nodeType":"ExpressionStatement","src":"2061:21:7"}]},"id":934,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":927,"nodeType":"ParameterList","parameters":[],"src":"2048:2:7"},"returnParameters":{"id":928,"nodeType":"ParameterList","parameters":[],"src":"2051:0:7"},"scope":981,"src":"2037:52:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":944,"nodeType":"Block","src":"2490:79:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":937,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"2500:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":939,"nodeType":"ExpressionStatement","src":"2500:21:7"},{"id":940,"nodeType":"PlaceholderStatement","src":"2531:1:7"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":941,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"2542:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":943,"nodeType":"ExpressionStatement","src":"2542:20:7"}]},"documentation":{"id":935,"nodeType":"StructuredDocumentation","src":"2095:366:7","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":945,"name":"nonReentrant","nameLocation":"2475:12:7","nodeType":"ModifierDefinition","parameters":{"id":936,"nodeType":"ParameterList","parameters":[],"src":"2487:2:7"},"src":"2466:103:7","virtual":false,"visibility":"internal"},{"body":{"id":960,"nodeType":"Block","src":"2614:268:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":948,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"2702:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":949,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"2713:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":955,"nodeType":"IfStatement","src":"2698:86:7","trueBody":{"id":954,"nodeType":"Block","src":"2722:62:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":951,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"2743:28:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":953,"nodeType":"RevertStatement","src":"2736:37:7"}]}},{"expression":{"id":958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":956,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"2858:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":957,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"2868:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":959,"nodeType":"ExpressionStatement","src":"2858:17:7"}]},"id":961,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:7","nodeType":"FunctionDefinition","parameters":{"id":946,"nodeType":"ParameterList","parameters":[],"src":"2603:2:7"},"returnParameters":{"id":947,"nodeType":"ParameterList","parameters":[],"src":"2614:0:7"},"scope":981,"src":"2575:307:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":968,"nodeType":"Block","src":"2926:170:7","statements":[{"expression":{"id":966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":964,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"3068:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":965,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"3078:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":967,"nodeType":"ExpressionStatement","src":"3068:21:7"}]},"id":969,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:7","nodeType":"FunctionDefinition","parameters":{"id":962,"nodeType":"ParameterList","parameters":[],"src":"2915:2:7"},"returnParameters":{"id":963,"nodeType":"ParameterList","parameters":[],"src":"2926:0:7"},"scope":981,"src":"2888:208:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":979,"nodeType":"Block","src":"3339:42:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":975,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"3356:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":976,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"3367:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":974,"id":978,"nodeType":"Return","src":"3349:25:7"}]},"documentation":{"id":970,"nodeType":"StructuredDocumentation","src":"3102:168:7","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":980,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:7","nodeType":"FunctionDefinition","parameters":{"id":971,"nodeType":"ParameterList","parameters":[],"src":"3307:2:7"},"returnParameters":{"id":974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":980,"src":"3333:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":972,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:7"},"scope":981,"src":"3275:106:7","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":982,"src":"1030:2353:7","usedErrors":[926],"usedEvents":[]}],"src":"109:3275:7"},"id":7},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[993]},"id":994,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":983,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":984,"nodeType":"StructuredDocumentation","src":"141:280:8","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":993,"linearizedBaseContracts":[993],"name":"IERC165","nameLocation":"432:7:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":985,"nodeType":"StructuredDocumentation","src":"446:340:8","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":992,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:8","nodeType":"FunctionDefinition","parameters":{"id":988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":987,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:8","nodeType":"VariableDeclaration","scope":992,"src":"818:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":986,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:8"},"returnParameters":{"id":991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":990,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":992,"src":"861:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":989,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:8"},"scope":993,"src":"791:76:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":994,"src":"422:447:8","usedErrors":[],"usedEvents":[]}],"src":"115:755:8"},"id":8},"abstract/AbstractRole.sol":{"ast":{"absolutePath":"abstract/AbstractRole.sol","exportedSymbols":{"AbstractRole":[1009],"AccessControlUpgradeable":[362],"ContextUpgradeable":[662],"ERC165Upgradeable":[702],"IAccessControl":[785],"Initializable":[616]},"id":1010,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":995,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:9"},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","id":996,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1010,"sourceUnit":363,"src":"57:81:9","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":997,"name":"AccessControlUpgradeable","nameLocations":["174:24:9"],"nodeType":"IdentifierPath","referencedDeclaration":362,"src":"174:24:9"},"id":998,"nodeType":"InheritanceSpecifier","src":"174:24:9"}],"canonicalName":"AbstractRole","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1009,"linearizedBaseContracts":[1009,362,702,993,785,662,616],"name":"AbstractRole","nameLocation":"158:12:9","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"f5b541a6","id":1003,"mutability":"constant","name":"OPERATOR_ROLE","nameLocation":"227:13:9","nodeType":"VariableDeclaration","scope":1009,"src":"203:66:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":999,"name":"bytes32","nodeType":"ElementaryTypeName","src":"203:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4f50455241544f525f524f4c45","id":1001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"253:15:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929","typeString":"literal_string \"OPERATOR_ROLE\""},"value":"OPERATOR_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929","typeString":"literal_string \"OPERATOR_ROLE\""}],"id":1000,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"243:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"243:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"d5391393","id":1008,"mutability":"constant","name":"MINTER_ROLE","nameLocation":"297:11:9","nodeType":"VariableDeclaration","scope":1009,"src":"273:62:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1004,"name":"bytes32","nodeType":"ElementaryTypeName","src":"273:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d494e5445525f524f4c45","id":1006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"321:13:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""},"value":"MINTER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""}],"id":1005,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"311:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"311:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"}],"scope":1010,"src":"140:198:9","usedErrors":[379,382,712,715],"usedEvents":[387,724,733,742]}],"src":"32:307:9"},"id":9},"contracts/DmtpTech.sol":{"ast":{"absolutePath":"contracts/DmtpTech.sol","exportedSymbols":{"AbstractRole":[1009],"AccessControlUpgradeable":[362],"ContextUpgradeable":[662],"DmtpTech":[1877],"ERC165Upgradeable":[702],"IAccessControl":[785],"IERC1155":[912],"IKey":[1932],"Initializable":[616],"ReentrancyGuard":[981],"Signature":[2003]},"id":1878,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1011,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:10"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","id":1012,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1878,"sourceUnit":663,"src":"57:74:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":1013,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1878,"sourceUnit":982,"src":"132:59:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1155.sol","file":"@openzeppelin/contracts/interfaces/IERC1155.sol","id":1014,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1878,"sourceUnit":790,"src":"192:57:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"abstract/AbstractRole.sol","file":"../abstract/AbstractRole.sol","id":1015,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1878,"sourceUnit":1010,"src":"250:38:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"interfaces/IKey.sol","file":"../interfaces/IKey.sol","id":1016,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1878,"sourceUnit":1933,"src":"289:32:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"libs/Signature.sol","file":"../libs/Signature.sol","id":1017,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1878,"sourceUnit":2004,"src":"322:31:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1018,"name":"ContextUpgradeable","nameLocations":["376:18:10"],"nodeType":"IdentifierPath","referencedDeclaration":662,"src":"376:18:10"},"id":1019,"nodeType":"InheritanceSpecifier","src":"376:18:10"},{"baseName":{"id":1020,"name":"AbstractRole","nameLocations":["396:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":1009,"src":"396:12:10"},"id":1021,"nodeType":"InheritanceSpecifier","src":"396:12:10"},{"baseName":{"id":1022,"name":"ReentrancyGuard","nameLocations":["410:15:10"],"nodeType":"IdentifierPath","referencedDeclaration":981,"src":"410:15:10"},"id":1023,"nodeType":"InheritanceSpecifier","src":"410:15:10"}],"canonicalName":"DmtpTech","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1877,"linearizedBaseContracts":[1877,981,1009,362,702,993,785,662,616],"name":"DmtpTech","nameLocation":"364:8:10","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1026,"libraryName":{"id":1024,"name":"Signature","nameLocations":["438:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":2003,"src":"438:9:10"},"nodeType":"UsingForDirective","src":"432:28:10","typeName":{"id":1025,"name":"bytes32","nodeType":"ElementaryTypeName","src":"452:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"constant":true,"functionSelector":"81803632","id":1029,"mutability":"constant","name":"A_HUNDRED_PERCENT","nameLocation":"490:17:10","nodeType":"VariableDeclaration","scope":1877,"src":"466:50:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1027,"name":"uint256","nodeType":"ElementaryTypeName","src":"466:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31305f303030","id":1028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"510:6:10","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10_000"},"visibility":"public"},{"anonymous":false,"eventSelector":"ced28ea7ef5f4276044389e457757e3f21ca4368040c3b864e3890bcd56a9988","id":1037,"name":"KeyBought","nameLocation":"537:9:10","nodeType":"EventDefinition","parameters":{"id":1036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1031,"indexed":false,"mutability":"mutable","name":"keyId","nameLocation":"555:5:10","nodeType":"VariableDeclaration","scope":1037,"src":"547:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1030,"name":"uint256","nodeType":"ElementaryTypeName","src":"547:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1033,"indexed":false,"mutability":"mutable","name":"buyer","nameLocation":"570:5:10","nodeType":"VariableDeclaration","scope":1037,"src":"562:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1032,"name":"address","nodeType":"ElementaryTypeName","src":"562:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1035,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"585:5:10","nodeType":"VariableDeclaration","scope":1037,"src":"577:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1034,"name":"uint256","nodeType":"ElementaryTypeName","src":"577:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"546:45:10"},"src":"531:61:10"},{"anonymous":false,"eventSelector":"76bf686fc9ca17368677b445c3982fe5bdba241b5b1ec5a879739a52e1620376","id":1045,"name":"KeySold","nameLocation":"603:7:10","nodeType":"EventDefinition","parameters":{"id":1044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1039,"indexed":false,"mutability":"mutable","name":"keyId","nameLocation":"619:5:10","nodeType":"VariableDeclaration","scope":1045,"src":"611:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1038,"name":"uint256","nodeType":"ElementaryTypeName","src":"611:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1041,"indexed":false,"mutability":"mutable","name":"seller","nameLocation":"634:6:10","nodeType":"VariableDeclaration","scope":1045,"src":"626:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1040,"name":"address","nodeType":"ElementaryTypeName","src":"626:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1043,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"650:5:10","nodeType":"VariableDeclaration","scope":1045,"src":"642:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1042,"name":"uint256","nodeType":"ElementaryTypeName","src":"642:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"610:46:10"},"src":"597:60:10"},{"anonymous":false,"eventSelector":"21f36f1ce7fe044293979690e893402c51515f757aa4e48b13bcfb269a9b6410","id":1051,"name":"KeyGenerated","nameLocation":"668:12:10","nodeType":"EventDefinition","parameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1047,"indexed":false,"mutability":"mutable","name":"keyId","nameLocation":"689:5:10","nodeType":"VariableDeclaration","scope":1051,"src":"681:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1046,"name":"uint256","nodeType":"ElementaryTypeName","src":"681:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1049,"indexed":false,"mutability":"mutable","name":"kol","nameLocation":"704:3:10","nodeType":"VariableDeclaration","scope":1051,"src":"696:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1048,"name":"address","nodeType":"ElementaryTypeName","src":"696:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"680:28:10"},"src":"662:47:10"},{"anonymous":false,"eventSelector":"9eaa897564d022fb8c5efaf0acdb5d9d27b440b2aad44400b6e1c702e65b9ed3","id":1055,"name":"SignerSet","nameLocation":"720:9:10","nodeType":"EventDefinition","parameters":{"id":1054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1053,"indexed":false,"mutability":"mutable","name":"signer","nameLocation":"738:6:10","nodeType":"VariableDeclaration","scope":1055,"src":"730:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1052,"name":"address","nodeType":"ElementaryTypeName","src":"730:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"729:16:10"},"src":"714:32:10"},{"anonymous":false,"eventSelector":"9c421f75c1b2cd6cdf5bd68ae0986ad4518d273a5c59745ac6454392b0b709a5","id":1059,"name":"KeyContractUpdated","nameLocation":"757:18:10","nodeType":"EventDefinition","parameters":{"id":1058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1057,"indexed":false,"mutability":"mutable","name":"key","nameLocation":"784:3:10","nodeType":"VariableDeclaration","scope":1059,"src":"776:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1056,"name":"address","nodeType":"ElementaryTypeName","src":"776:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"775:13:10"},"src":"751:38:10"},{"anonymous":false,"eventSelector":"827988aa1b695ab4719b95a49399fb75159954cc25d5b37c53cf23e8a6a58d36","id":1067,"name":"CommissionUpdated","nameLocation":"800:17:10","nodeType":"EventDefinition","parameters":{"id":1066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1061,"indexed":false,"mutability":"mutable","name":"rate","nameLocation":"835:4:10","nodeType":"VariableDeclaration","scope":1067,"src":"827:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1060,"name":"uint256","nodeType":"ElementaryTypeName","src":"827:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1063,"indexed":false,"mutability":"mutable","name":"receiver_","nameLocation":"857:9:10","nodeType":"VariableDeclaration","scope":1067,"src":"849:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1062,"name":"address","nodeType":"ElementaryTypeName","src":"849:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1065,"indexed":false,"mutability":"mutable","name":"keyGeneratorRate","nameLocation":"884:16:10","nodeType":"VariableDeclaration","scope":1067,"src":"876:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1064,"name":"uint256","nodeType":"ElementaryTypeName","src":"876:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"817:89:10"},"src":"794:113:10"},{"canonicalName":"DmtpTech.Commission","id":1074,"members":[{"constant":false,"id":1069,"mutability":"mutable","name":"rate","nameLocation":"949:4:10","nodeType":"VariableDeclaration","scope":1074,"src":"941:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1068,"name":"uint256","nodeType":"ElementaryTypeName","src":"941:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1071,"mutability":"mutable","name":"receiver","nameLocation":"971:8:10","nodeType":"VariableDeclaration","scope":1074,"src":"963:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1070,"name":"address","nodeType":"ElementaryTypeName","src":"963:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1073,"mutability":"mutable","name":"keyGeneratorRate","nameLocation":"997:16:10","nodeType":"VariableDeclaration","scope":1074,"src":"989:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1072,"name":"uint256","nodeType":"ElementaryTypeName","src":"989:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Commission","nameLocation":"920:10:10","nodeType":"StructDefinition","scope":1877,"src":"913:107:10","visibility":"public"},{"constant":false,"id":1076,"mutability":"mutable","name":"_keyIdCounter","nameLocation":"1042:13:10","nodeType":"VariableDeclaration","scope":1877,"src":"1026:29:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1075,"name":"uint256","nodeType":"ElementaryTypeName","src":"1026:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"functionSelector":"3943380c","id":1079,"mutability":"mutable","name":"key","nameLocation":"1073:3:10","nodeType":"VariableDeclaration","scope":1877,"src":"1061:15:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IKey_$1932","typeString":"contract IKey"},"typeName":{"id":1078,"nodeType":"UserDefinedTypeName","pathNode":{"id":1077,"name":"IKey","nameLocations":["1061:4:10"],"nodeType":"IdentifierPath","referencedDeclaration":1932,"src":"1061:4:10"},"referencedDeclaration":1932,"src":"1061:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_IKey_$1932","typeString":"contract IKey"}},"visibility":"public"},{"constant":false,"functionSelector":"238ac933","id":1081,"mutability":"mutable","name":"signer","nameLocation":"1097:6:10","nodeType":"VariableDeclaration","scope":1877,"src":"1082:21:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1080,"name":"address","nodeType":"ElementaryTypeName","src":"1082:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"62bea295","id":1085,"mutability":"mutable","name":"generated","nameLocation":"1145:9:10","nodeType":"VariableDeclaration","scope":1877,"src":"1110:44:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1084,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1082,"name":"address","nodeType":"ElementaryTypeName","src":"1118:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1110:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1083,"name":"uint256","nodeType":"ElementaryTypeName","src":"1129:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"e1489191","id":1088,"mutability":"mutable","name":"commission","nameLocation":"1178:10:10","nodeType":"VariableDeclaration","scope":1877,"src":"1160:28:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Commission_$1074_storage","typeString":"struct DmtpTech.Commission"},"typeName":{"id":1087,"nodeType":"UserDefinedTypeName","pathNode":{"id":1086,"name":"Commission","nameLocations":["1160:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":1074,"src":"1160:10:10"},"referencedDeclaration":1074,"src":"1160:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Commission_$1074_storage_ptr","typeString":"struct DmtpTech.Commission"}},"visibility":"public"},{"constant":false,"functionSelector":"b77c0f00","id":1092,"mutability":"mutable","name":"keyGenerators","nameLocation":"1230:13:10","nodeType":"VariableDeclaration","scope":1877,"src":"1195:48:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1091,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1089,"name":"uint256","nodeType":"ElementaryTypeName","src":"1203:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1195:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1090,"name":"address","nodeType":"ElementaryTypeName","src":"1214:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"constant":false,"functionSelector":"8fd7c568","id":1094,"mutability":"mutable","name":"needToCheckWhitelist","nameLocation":"1261:20:10","nodeType":"VariableDeclaration","scope":1877,"src":"1249:32:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1093,"name":"bool","nodeType":"ElementaryTypeName","src":"1249:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"body":{"id":1153,"nodeType":"Block","src":"1480:380:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1107,"name":"__Context_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"1490:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1490:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1109,"nodeType":"ExpressionStatement","src":"1490:16:10"},{"expression":{"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1110,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"1517:3:10","typeDescriptions":{"typeIdentifier":"t_contract$_IKey_$1932","typeString":"contract IKey"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1112,"name":"key_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"1528:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1111,"name":"IKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"1523:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IKey_$1932_$","typeString":"type(contract IKey)"}},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1523:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IKey_$1932","typeString":"contract IKey"}},"src":"1517:16:10","typeDescriptions":{"typeIdentifier":"t_contract$_IKey_$1932","typeString":"contract IKey"}},"id":1115,"nodeType":"ExpressionStatement","src":"1517:16:10"},{"assignments":[1117],"declarations":[{"constant":false,"id":1117,"mutability":"mutable","name":"sender","nameLocation":"1552:6:10","nodeType":"VariableDeclaration","scope":1153,"src":"1544:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1116,"name":"address","nodeType":"ElementaryTypeName","src":"1544:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1120,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1118,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"1561:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1561:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1544:29:10"},{"expression":{"arguments":[{"id":1122,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"1594:18:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1123,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"1614:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1121,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"1583:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1583:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1125,"nodeType":"ExpressionStatement","src":"1583:38:10"},{"expression":{"arguments":[{"id":1127,"name":"OPERATOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"1642:13:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1128,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"1657:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1126,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"1631:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":1129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1631:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1130,"nodeType":"ExpressionStatement","src":"1631:33:10"},{"expression":{"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1131,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"1675:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1132,"name":"signer_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"1684:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1675:16:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1134,"nodeType":"ExpressionStatement","src":"1675:16:10"},{"expression":{"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1135,"name":"commission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"1702:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Commission_$1074_storage","typeString":"struct DmtpTech.Commission storage ref"}},"id":1137,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1713:4:10","memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":1069,"src":"1702:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1138,"name":"commissionRate_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"1720:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1702:33:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1140,"nodeType":"ExpressionStatement","src":"1702:33:10"},{"expression":{"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1141,"name":"commission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"1745:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Commission_$1074_storage","typeString":"struct DmtpTech.Commission storage ref"}},"id":1143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1756:8:10","memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":1071,"src":"1745:19:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1144,"name":"commissionReceiver_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"1767:19:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1745:41:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1146,"nodeType":"ExpressionStatement","src":"1745:41:10"},{"expression":{"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1147,"name":"commission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"1796:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Commission_$1074_storage","typeString":"struct DmtpTech.Commission storage ref"}},"id":1149,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1807:16:10","memberName":"keyGeneratorRate","nodeType":"MemberAccess","referencedDeclaration":1073,"src":"1796:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1150,"name":"commissionKeyGeneratorRate_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"1826:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1796:57:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1152,"nodeType":"ExpressionStatement","src":"1796:57:10"}]},"id":1154,"implemented":true,"kind":"function","modifiers":[],"name":"__init","nameLocation":"1297:6:10","nodeType":"FunctionDefinition","parameters":{"id":1105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1096,"mutability":"mutable","name":"key_","nameLocation":"1321:4:10","nodeType":"VariableDeclaration","scope":1154,"src":"1313:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1095,"name":"address","nodeType":"ElementaryTypeName","src":"1313:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1098,"mutability":"mutable","name":"signer_","nameLocation":"1343:7:10","nodeType":"VariableDeclaration","scope":1154,"src":"1335:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1097,"name":"address","nodeType":"ElementaryTypeName","src":"1335:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1100,"mutability":"mutable","name":"commissionRate_","nameLocation":"1368:15:10","nodeType":"VariableDeclaration","scope":1154,"src":"1360:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1099,"name":"uint256","nodeType":"ElementaryTypeName","src":"1360:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1102,"mutability":"mutable","name":"commissionReceiver_","nameLocation":"1401:19:10","nodeType":"VariableDeclaration","scope":1154,"src":"1393:27:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1101,"name":"address","nodeType":"ElementaryTypeName","src":"1393:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1104,"mutability":"mutable","name":"commissionKeyGeneratorRate_","nameLocation":"1438:27:10","nodeType":"VariableDeclaration","scope":1154,"src":"1430:35:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1103,"name":"uint256","nodeType":"ElementaryTypeName","src":"1430:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1303:168:10"},"returnParameters":{"id":1106,"nodeType":"ParameterList","parameters":[],"src":"1480:0:10"},"scope":1877,"src":"1288:572:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1177,"nodeType":"Block","src":"2075:175:10","statements":[{"expression":{"arguments":[{"id":1170,"name":"key_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"2105:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1171,"name":"signer_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"2123:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1172,"name":"commissionRate_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"2144:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1173,"name":"commissionReceiver_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"2173:19:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1174,"name":"commissionKeyGeneratorRate_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"2206:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1169,"name":"__init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"2085:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,address,uint256)"}},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2085:158:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1176,"nodeType":"ExpressionStatement","src":"2085:158:10"}]},"functionSelector":"f7c00e63","id":1178,"implemented":true,"kind":"function","modifiers":[{"id":1167,"kind":"modifierInvocation","modifierName":{"id":1166,"name":"initializer","nameLocations":["2063:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":470,"src":"2063:11:10"},"nodeType":"ModifierInvocation","src":"2063:11:10"}],"name":"initialize","nameLocation":"1875:10:10","nodeType":"FunctionDefinition","parameters":{"id":1165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1156,"mutability":"mutable","name":"key_","nameLocation":"1903:4:10","nodeType":"VariableDeclaration","scope":1178,"src":"1895:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1155,"name":"address","nodeType":"ElementaryTypeName","src":"1895:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1158,"mutability":"mutable","name":"signer_","nameLocation":"1925:7:10","nodeType":"VariableDeclaration","scope":1178,"src":"1917:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1157,"name":"address","nodeType":"ElementaryTypeName","src":"1917:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1160,"mutability":"mutable","name":"commissionRate_","nameLocation":"1950:15:10","nodeType":"VariableDeclaration","scope":1178,"src":"1942:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1159,"name":"uint256","nodeType":"ElementaryTypeName","src":"1942:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1162,"mutability":"mutable","name":"commissionReceiver_","nameLocation":"1983:19:10","nodeType":"VariableDeclaration","scope":1178,"src":"1975:27:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1161,"name":"address","nodeType":"ElementaryTypeName","src":"1975:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1164,"mutability":"mutable","name":"commissionKeyGeneratorRate_","nameLocation":"2020:27:10","nodeType":"VariableDeclaration","scope":1178,"src":"2012:35:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1163,"name":"uint256","nodeType":"ElementaryTypeName","src":"2012:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1885:168:10"},"returnParameters":{"id":1168,"nodeType":"ParameterList","parameters":[],"src":"2075:0:10"},"scope":1877,"src":"1866:384:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1204,"nodeType":"Block","src":"2325:143:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1187,"name":"signer_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"2343:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2362:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2354:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1188,"name":"address","nodeType":"ElementaryTypeName","src":"2354:7:10","typeDescriptions":{}}},"id":1191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2354:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2343:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"444d54505f544543485f504152414d5f414444524553535f494e56414c4944","id":1193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2366:33:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c363a232e45742d6f872a60d7a1a3cdcff28aa4aa3f01c9343d96ec5fa910567","typeString":"literal_string \"DMTP_TECH_PARAM_ADDRESS_INVALID\""},"value":"DMTP_TECH_PARAM_ADDRESS_INVALID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c363a232e45742d6f872a60d7a1a3cdcff28aa4aa3f01c9343d96ec5fa910567","typeString":"literal_string \"DMTP_TECH_PARAM_ADDRESS_INVALID\""}],"id":1186,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2335:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:65:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1195,"nodeType":"ExpressionStatement","src":"2335:65:10"},{"expression":{"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1196,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"2411:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1197,"name":"signer_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"2420:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2411:16:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1199,"nodeType":"ExpressionStatement","src":"2411:16:10"},{"eventCall":{"arguments":[{"id":1201,"name":"signer_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"2453:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1200,"name":"SignerSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"2443:9:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2443:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1203,"nodeType":"EmitStatement","src":"2438:23:10"}]},"functionSelector":"6c19e783","id":1205,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1183,"name":"OPERATOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"2310:13:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1184,"kind":"modifierInvocation","modifierName":{"id":1182,"name":"onlyRole","nameLocations":["2301:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"2301:8:10"},"nodeType":"ModifierInvocation","src":"2301:23:10"}],"name":"setSigner","nameLocation":"2265:9:10","nodeType":"FunctionDefinition","parameters":{"id":1181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1180,"mutability":"mutable","name":"signer_","nameLocation":"2283:7:10","nodeType":"VariableDeclaration","scope":1205,"src":"2275:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1179,"name":"address","nodeType":"ElementaryTypeName","src":"2275:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2274:17:10"},"returnParameters":{"id":1185,"nodeType":"ParameterList","parameters":[],"src":"2325:0:10"},"scope":1877,"src":"2256:212:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1312,"nodeType":"Block","src":"2533:742:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1213,"name":"id_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"2551:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1214,"name":"_keyIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"2558:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"444d54505f544543485f504152414d5f4b45595f494e56414c4944","id":1216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2573:29:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_6f606490f657dbcffebf55c6e66410c624fbd744584fe32efe5c7af91805ea29","typeString":"literal_string \"DMTP_TECH_PARAM_KEY_INVALID\""},"value":"DMTP_TECH_PARAM_KEY_INVALID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f606490f657dbcffebf55c6e66410c624fbd744584fe32efe5c7af91805ea29","typeString":"literal_string \"DMTP_TECH_PARAM_KEY_INVALID\""}],"id":1212,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2543:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2543:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1218,"nodeType":"ExpressionStatement","src":"2543:60:10"},{"assignments":[1220],"declarations":[{"constant":false,"id":1220,"mutability":"mutable","name":"price","nameLocation":"2622:5:10","nodeType":"VariableDeclaration","scope":1312,"src":"2614:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1219,"name":"uint256","nodeType":"ElementaryTypeName","src":"2614:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1225,"initialValue":{"arguments":[{"id":1223,"name":"id_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"2642:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1221,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"2630:3:10","typeDescriptions":{"typeIdentifier":"t_contract$_IKey_$1932","typeString":"contract IKey"}},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2634:7:10","memberName":"priceOf","nodeType":"MemberAccess","referencedDeclaration":1906,"src":"2630:11:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2630:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2614:32:10"},{"assignments":[1227],"declarations":[{"constant":false,"id":1227,"mutability":"mutable","name":"fee","nameLocation":"2665:3:10","nodeType":"VariableDeclaration","scope":1312,"src":"2657:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1226,"name":"uint256","nodeType":"ElementaryTypeName","src":"2657:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1235,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1228,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"2672:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":1229,"name":"commission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"2680:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Commission_$1074_storage","typeString":"struct DmtpTech.Commission storage ref"}},"id":1230,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2691:4:10","memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":1069,"src":"2680:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2672:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1232,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2671:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1233,"name":"A_HUNDRED_PERCENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"2699:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2671:45:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2657:59:10"},{"assignments":[1237],"declarations":[{"constant":false,"id":1237,"mutability":"mutable","name":"payout","nameLocation":"2734:6:10","nodeType":"VariableDeclaration","scope":1312,"src":"2726:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1236,"name":"uint256","nodeType":"ElementaryTypeName","src":"2726:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1241,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1238,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"2743:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1239,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"2751:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2743:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2726:28:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1243,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2773:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2777:5:10","memberName":"value","nodeType":"MemberAccess","src":"2773:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1245,"name":"payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"2786:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2773:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"444d54505f544543485f50524943455f4348414e474544","id":1247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2794:25:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_896721b5e23c3112acc97b4fd2e0be963d1bb68c60cda1413d94ea367dfeff61","typeString":"literal_string \"DMTP_TECH_PRICE_CHANGED\""},"value":"DMTP_TECH_PRICE_CHANGED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_896721b5e23c3112acc97b4fd2e0be963d1bb68c60cda1413d94ea367dfeff61","typeString":"literal_string \"DMTP_TECH_PRICE_CHANGED\""}],"id":1242,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2765:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2765:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1249,"nodeType":"ExpressionStatement","src":"2765:55:10"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1253,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"2840:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2840:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1255,"name":"id_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"2854:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2859:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"","id":1257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2862:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1250,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"2831:3:10","typeDescriptions":{"typeIdentifier":"t_contract$_IKey_$1932","typeString":"contract IKey"}},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2835:4:10","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":1890,"src":"2831:8:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory) external"}},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1259,"nodeType":"ExpressionStatement","src":"2831:34:10"},{"assignments":[1261],"declarations":[{"constant":false,"id":1261,"mutability":"mutable","name":"keyGeneratorFee","nameLocation":"2884:15:10","nodeType":"VariableDeclaration","scope":1312,"src":"2876:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1260,"name":"uint256","nodeType":"ElementaryTypeName","src":"2876:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1269,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1262,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"2903:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":1263,"name":"commission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"2911:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Commission_$1074_storage","typeString":"struct DmtpTech.Commission storage ref"}},"id":1264,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2922:16:10","memberName":"keyGeneratorRate","nodeType":"MemberAccess","referencedDeclaration":1073,"src":"2911:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2903:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1266,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2902:37:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1267,"name":"A_HUNDRED_PERCENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"2954:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2902:69:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2876:95:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1270,"name":"keyGeneratorFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"2985:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3003:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2985:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1284,"nodeType":"IfStatement","src":"2981:103:10","trueBody":{"id":1283,"nodeType":"Block","src":"3006:78:10","statements":[{"expression":{"arguments":[{"id":1280,"name":"keyGeneratorFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"3057:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"baseExpression":{"id":1275,"name":"keyGenerators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"3028:13:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1277,"indexExpression":{"id":1276,"name":"id_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"3042:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3028:18:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3020:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1273,"name":"address","nodeType":"ElementaryTypeName","src":"3020:8:10","stateMutability":"payable","typeDescriptions":{}}},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3020:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3048:8:10","memberName":"transfer","nodeType":"MemberAccess","src":"3020:36:10","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3020:53:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1282,"nodeType":"ExpressionStatement","src":"3020:53:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1285,"name":"commission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"3098:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Commission_$1074_storage","typeString":"struct DmtpTech.Commission storage ref"}},"id":1286,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3109:8:10","memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":1071,"src":"3098:19:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3129:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3121:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1287,"name":"address","nodeType":"ElementaryTypeName","src":"3121:7:10","typeDescriptions":{}}},"id":1290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3121:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3098:33:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1304,"nodeType":"IfStatement","src":"3094:124:10","trueBody":{"id":1303,"nodeType":"Block","src":"3133:85:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1298,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"3185:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1299,"name":"keyGeneratorFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"3191:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3185:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":1294,"name":"commission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"3155:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Commission_$1074_storage","typeString":"struct DmtpTech.Commission storage ref"}},"id":1295,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3166:8:10","memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":1071,"src":"3155:19:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3147:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1292,"name":"address","nodeType":"ElementaryTypeName","src":"3147:8:10","stateMutability":"payable","typeDescriptions":{}}},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3147:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3176:8:10","memberName":"transfer","nodeType":"MemberAccess","src":"3147:37:10","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3147:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1302,"nodeType":"ExpressionStatement","src":"3147:60:10"}]}},{"eventCall":{"arguments":[{"id":1306,"name":"id_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"3243:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1307,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"3248:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3248:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1309,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"3262:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1305,"name":"KeyBought","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"3233:9:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3233:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1311,"nodeType":"EmitStatement","src":"3228:40:10"}]},"functionSelector":"9fef93f8","id":1313,"implemented":true,"kind":"function","modifiers":[{"id":1210,"kind":"modifierInvocation","modifierName":{"id":1209,"name":"nonReentrant","nameLocations":["2520:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":945,"src":"2520:12:10"},"nodeType":"ModifierInvocation","src":"2520:12:10"}],"name":"buyKey","nameLocation":"2483:6:10","nodeType":"FunctionDefinition","parameters":{"id":1208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1207,"mutability":"mutable","name":"id_","nameLocation":"2498:3:10","nodeType":"VariableDeclaration","scope":1313,"src":"2490:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1206,"name":"uint256","nodeType":"ElementaryTypeName","src":"2490:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2489:13:10"},"returnParameters":{"id":1211,"nodeType":"ParameterList","parameters":[],"src":"2533:0:10"},"scope":1877,"src":"2474:801:10","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1432,"nodeType":"Block","src":"3349:852:10","statements":[{"assignments":[1323],"declarations":[{"constant":false,"id":1323,"mutability":"mutable","name":"seller","nameLocation":"3367:6:10","nodeType":"VariableDeclaration","scope":1432,"src":"3359:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1322,"name":"address","nodeType":"ElementaryTypeName","src":"3359:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1326,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1324,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"3376:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3376:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3359:29:10"},{"expression":{"arguments":[{"arguments":[{"id":1329,"name":"seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"3435:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1330,"name":"id_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"3443:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1328,"name":"allowToSellKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"3420:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3420:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"444d54505f544543485f4e4f545f414c4c4f575f544f5f53454c4c5f4b455953","id":1332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3461:34:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_a02c8f8090000debef3e144753c0fd607bdb39a8d2a151d4c14b96d7f6b791c8","typeString":"literal_string \"DMTP_TECH_NOT_ALLOW_TO_SELL_KEYS\""},"value":"DMTP_TECH_NOT_ALLOW_TO_SELL_KEYS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a02c8f8090000debef3e144753c0fd607bdb39a8d2a151d4c14b96d7f6b791c8","typeString":"literal_string \"DMTP_TECH_NOT_ALLOW_TO_SELL_KEYS\""}],"id":1327,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3399:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3399:106:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1334,"nodeType":"ExpressionStatement","src":"3399:106:10"},{"assignments":[1336],"declarations":[{"constant":false,"id":1336,"mutability":"mutable","name":"price","nameLocation":"3524:5:10","nodeType":"VariableDeclaration","scope":1432,"src":"3516:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1335,"name":"uint256","nodeType":"ElementaryTypeName","src":"3516:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1341,"initialValue":{"arguments":[{"id":1339,"name":"id_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"3548:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1337,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"3532:3:10","typeDescriptions":{"typeIdentifier":"t_contract$_IKey_$1932","typeString":"contract IKey"}},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3536:11:10","memberName":"sellPriceOf","nodeType":"MemberAccess","referencedDeclaration":1922,"src":"3532:15:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3532:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3516:36:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1343,"name":"price_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"3570:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1344,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"3580:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3570:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"444d54505f544543485f50524943455f4348414e474544","id":1346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3587:25:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_896721b5e23c3112acc97b4fd2e0be963d1bb68c60cda1413d94ea367dfeff61","typeString":"literal_string \"DMTP_TECH_PRICE_CHANGED\""},"value":"DMTP_TECH_PRICE_CHANGED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_896721b5e23c3112acc97b4fd2e0be963d1bb68c60cda1413d94ea367dfeff61","typeString":"literal_string \"DMTP_TECH_PRICE_CHANGED\""}],"id":1342,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3562:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3562:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1348,"nodeType":"ExpressionStatement","src":"3562:51:10"},{"assignments":[1350],"declarations":[{"constant":false,"id":1350,"mutability":"mutable","name":"fee","nameLocation":"3632:3:10","nodeType":"VariableDeclaration","scope":1432,"src":"3624:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1349,"name":"uint256","nodeType":"ElementaryTypeName","src":"3624:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1358,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1351,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"3639:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":1352,"name":"commission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"3647:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Commission_$1074_storage","typeString":"struct DmtpTech.Commission storage ref"}},"id":1353,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3658:4:10","memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":1069,"src":"3647:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3639:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1355,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3638:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1356,"name":"A_HUNDRED_PERCENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"3666:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3638:45:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3624:59:10"},{"assignments":[1360],"declarations":[{"constant":false,"id":1360,"mutability":"mutable","name":"payout","nameLocation":"3701:6:10","nodeType":"VariableDeclaration","scope":1432,"src":"3693:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1359,"name":"uint256","nodeType":"ElementaryTypeName","src":"3693:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1364,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1361,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"3710:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1362,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"3718:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3710:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3693:28:10"},{"expression":{"arguments":[{"id":1368,"name":"seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"3741:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1369,"name":"id_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"3749:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3754:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":1365,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"3732:3:10","typeDescriptions":{"typeIdentifier":"t_contract$_IKey_$1932","typeString":"contract IKey"}},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3736:4:10","memberName":"burn","nodeType":"MemberAccess","referencedDeclaration":1899,"src":"3732:8:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) external"}},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3732:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1372,"nodeType":"ExpressionStatement","src":"3732:24:10"},{"expression":{"arguments":[{"id":1378,"name":"payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"3792:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1375,"name":"seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"3775:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3767:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1373,"name":"address","nodeType":"ElementaryTypeName","src":"3767:8:10","stateMutability":"payable","typeDescriptions":{}}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3767:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3783:8:10","memberName":"transfer","nodeType":"MemberAccess","src":"3767:24:10","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3767:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1380,"nodeType":"ExpressionStatement","src":"3767:32:10"},{"assignments":[1382],"declarations":[{"constant":false,"id":1382,"mutability":"mutable","name":"keyGeneratorFee","nameLocation":"3818:15:10","nodeType":"VariableDeclaration","scope":1432,"src":"3810:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1381,"name":"uint256","nodeType":"ElementaryTypeName","src":"3810:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1390,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1383,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"3837:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":1384,"name":"commission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"3845:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Commission_$1074_storage","typeString":"struct DmtpTech.Commission storage ref"}},"id":1385,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3856:16:10","memberName":"keyGeneratorRate","nodeType":"MemberAccess","referencedDeclaration":1073,"src":"3845:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3837:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1387,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3836:37:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1388,"name":"A_HUNDRED_PERCENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"3888:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3836:69:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3810:95:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1391,"name":"keyGeneratorFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"3919:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3937:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3919:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1405,"nodeType":"IfStatement","src":"3915:103:10","trueBody":{"id":1404,"nodeType":"Block","src":"3940:78:10","statements":[{"expression":{"arguments":[{"id":1401,"name":"keyGeneratorFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"3991:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"baseExpression":{"id":1396,"name":"keyGenerators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"3962:13:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1398,"indexExpression":{"id":1397,"name":"id_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"3976:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3962:18:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3954:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1394,"name":"address","nodeType":"ElementaryTypeName","src":"3954:8:10","stateMutability":"payable","typeDescriptions":{}}},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3954:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3982:8:10","memberName":"transfer","nodeType":"MemberAccess","src":"3954:36:10","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3954:53:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1403,"nodeType":"ExpressionStatement","src":"3954:53:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1406,"name":"commission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"4032:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Commission_$1074_storage","typeString":"struct DmtpTech.Commission storage ref"}},"id":1407,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4043:8:10","memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":1071,"src":"4032:19:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4063:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4055:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1408,"name":"address","nodeType":"ElementaryTypeName","src":"4055:7:10","typeDescriptions":{}}},"id":1411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4055:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4032:33:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1425,"nodeType":"IfStatement","src":"4028:124:10","trueBody":{"id":1424,"nodeType":"Block","src":"4067:85:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1419,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"4119:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1420,"name":"keyGeneratorFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"4125:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4119:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":1415,"name":"commission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"4089:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Commission_$1074_storage","typeString":"struct DmtpTech.Commission storage ref"}},"id":1416,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4100:8:10","memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":1071,"src":"4089:19:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4081:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1413,"name":"address","nodeType":"ElementaryTypeName","src":"4081:8:10","stateMutability":"payable","typeDescriptions":{}}},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4081:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4110:8:10","memberName":"transfer","nodeType":"MemberAccess","src":"4081:37:10","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4081:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1423,"nodeType":"ExpressionStatement","src":"4081:60:10"}]}},{"eventCall":{"arguments":[{"id":1427,"name":"id_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"4175:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1428,"name":"seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"4180:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1429,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"4188:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1426,"name":"KeySold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"4167:7:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4167:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1431,"nodeType":"EmitStatement","src":"4162:32:10"}]},"functionSelector":"0d54a882","id":1433,"implemented":true,"kind":"function","modifiers":[{"id":1320,"kind":"modifierInvocation","modifierName":{"id":1319,"name":"nonReentrant","nameLocations":["3336:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":945,"src":"3336:12:10"},"nodeType":"ModifierInvocation","src":"3336:12:10"}],"name":"sellKey","nameLocation":"3290:7:10","nodeType":"FunctionDefinition","parameters":{"id":1318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1315,"mutability":"mutable","name":"id_","nameLocation":"3306:3:10","nodeType":"VariableDeclaration","scope":1433,"src":"3298:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1314,"name":"uint256","nodeType":"ElementaryTypeName","src":"3298:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1317,"mutability":"mutable","name":"price_","nameLocation":"3319:6:10","nodeType":"VariableDeclaration","scope":1433,"src":"3311:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1316,"name":"uint256","nodeType":"ElementaryTypeName","src":"3311:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3297:29:10"},"returnParameters":{"id":1321,"nodeType":"ParameterList","parameters":[],"src":"3349:0:10"},"scope":1877,"src":"3281:920:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1521,"nodeType":"Block","src":"4275:676:10","statements":[{"assignments":[1441],"declarations":[{"constant":false,"id":1441,"mutability":"mutable","name":"sender","nameLocation":"4293:6:10","nodeType":"VariableDeclaration","scope":1521,"src":"4285:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1440,"name":"address","nodeType":"ElementaryTypeName","src":"4285:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1444,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1442,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"4302:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4285:29:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1446,"name":"generated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"4332:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1448,"indexExpression":{"id":1447,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"4342:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4332:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4353:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4332:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"444d54505f544543485f414c52454144595f4953535545445f4b4559","id":1451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4356:30:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_88baa15af26653fc21689f85e495d82fad9b43b5c3bfc02e7fbf76a48448e623","typeString":"literal_string \"DMTP_TECH_ALREADY_ISSUED_KEY\""},"value":"DMTP_TECH_ALREADY_ISSUED_KEY"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_88baa15af26653fc21689f85e495d82fad9b43b5c3bfc02e7fbf76a48448e623","typeString":"literal_string \"DMTP_TECH_ALREADY_ISSUED_KEY\""}],"id":1445,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4324:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4324:63:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1453,"nodeType":"ExpressionStatement","src":"4324:63:10"},{"condition":{"id":1454,"name":"needToCheckWhitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"4402:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1483,"nodeType":"IfStatement","src":"4398:325:10","trueBody":{"id":1482,"nodeType":"Block","src":"4424:299:10","statements":[{"assignments":[1456],"declarations":[{"constant":false,"id":1456,"mutability":"mutable","name":"message","nameLocation":"4446:7:10","nodeType":"VariableDeclaration","scope":1482,"src":"4438:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1455,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4438:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1471,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"arguments":[{"id":1460,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"4500:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1461,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4508:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4514:7:10","memberName":"chainid","nodeType":"MemberAccess","src":"4508:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1465,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4531:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_DmtpTech_$1877","typeString":"contract DmtpTech"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DmtpTech_$1877","typeString":"contract DmtpTech"}],"id":1464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4523:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1463,"name":"address","nodeType":"ElementaryTypeName","src":"4523:7:10","typeDescriptions":{}}},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4523:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1458,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4483:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4487:12:10","memberName":"encodePacked","nodeType":"MemberAccess","src":"4483:16:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4483:54:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1457,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4456:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4456:95:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4552:8:10","memberName":"prefixed","nodeType":"MemberAccess","referencedDeclaration":2002,"src":"4456:104:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4456:106:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4438:124:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1475,"name":"signature_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"4624:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1473,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"4602:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4610:13:10","memberName":"recoverSigner","nodeType":"MemberAccess","referencedDeclaration":1986,"src":"4602:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$attached_to$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1477,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"4639:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4602:43:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"444d54505f544543485f504152414d5f5349474e41545552455f494e56414c4944","id":1479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4663:35:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_07436f413c412c73cfd5e1d5be62933bde7b76594a2ead8cc4a6651d83e7915e","typeString":"literal_string \"DMTP_TECH_PARAM_SIGNATURE_INVALID\""},"value":"DMTP_TECH_PARAM_SIGNATURE_INVALID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_07436f413c412c73cfd5e1d5be62933bde7b76594a2ead8cc4a6651d83e7915e","typeString":"literal_string \"DMTP_TECH_PARAM_SIGNATURE_INVALID\""}],"id":1472,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4577:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4577:135:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1481,"nodeType":"ExpressionStatement","src":"4577:135:10"}]}},{"assignments":[1485],"declarations":[{"constant":false,"id":1485,"mutability":"mutable","name":"id","nameLocation":"4741:2:10","nodeType":"VariableDeclaration","scope":1521,"src":"4733:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1484,"name":"uint256","nodeType":"ElementaryTypeName","src":"4733:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1489,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1486,"name":"_keyIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"4746:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4762:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4746:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4733:30:10"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1493,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"4783:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4783:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1495,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"4797:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4801:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"","id":1497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4804:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1490,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"4774:3:10","typeDescriptions":{"typeIdentifier":"t_contract$_IKey_$1932","typeString":"contract IKey"}},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4778:4:10","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":1890,"src":"4774:8:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory) external"}},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4774:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1499,"nodeType":"ExpressionStatement","src":"4774:33:10"},{"expression":{"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1500,"name":"_keyIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"4818:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1501,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"4834:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4818:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1503,"nodeType":"ExpressionStatement","src":"4818:18:10"},{"expression":{"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1504,"name":"generated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"4846:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1506,"indexExpression":{"id":1505,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"4856:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4846:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1507,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"4866:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4846:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1509,"nodeType":"ExpressionStatement","src":"4846:22:10"},{"expression":{"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1510,"name":"keyGenerators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"4878:13:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1512,"indexExpression":{"id":1511,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"4892:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4878:17:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1513,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"4898:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4878:26:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1515,"nodeType":"ExpressionStatement","src":"4878:26:10"},{"eventCall":{"arguments":[{"id":1517,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"4933:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1518,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"4937:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1516,"name":"KeyGenerated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"4920:12:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4920:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1520,"nodeType":"EmitStatement","src":"4915:29:10"}]},"functionSelector":"8d5ea68b","id":1522,"implemented":true,"kind":"function","modifiers":[{"id":1438,"kind":"modifierInvocation","modifierName":{"id":1437,"name":"nonReentrant","nameLocations":["4262:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":945,"src":"4262:12:10"},"nodeType":"ModifierInvocation","src":"4262:12:10"}],"name":"generateKey","nameLocation":"4216:11:10","nodeType":"FunctionDefinition","parameters":{"id":1436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1435,"mutability":"mutable","name":"signature_","nameLocation":"4241:10:10","nodeType":"VariableDeclaration","scope":1522,"src":"4228:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1434,"name":"bytes","nodeType":"ElementaryTypeName","src":"4228:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4227:25:10"},"returnParameters":{"id":1439,"nodeType":"ParameterList","parameters":[],"src":"4275:0:10"},"scope":1877,"src":"4207:744:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1550,"nodeType":"Block","src":"5028:146:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1531,"name":"key_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"5046:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5062:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5054:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1532,"name":"address","nodeType":"ElementaryTypeName","src":"5054:7:10","typeDescriptions":{}}},"id":1535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5054:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5046:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"444d54505f544543485f504152414d5f414444524553535f494e56414c4944","id":1537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5066:33:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c363a232e45742d6f872a60d7a1a3cdcff28aa4aa3f01c9343d96ec5fa910567","typeString":"literal_string \"DMTP_TECH_PARAM_ADDRESS_INVALID\""},"value":"DMTP_TECH_PARAM_ADDRESS_INVALID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c363a232e45742d6f872a60d7a1a3cdcff28aa4aa3f01c9343d96ec5fa910567","typeString":"literal_string \"DMTP_TECH_PARAM_ADDRESS_INVALID\""}],"id":1530,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5038:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5038:62:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1539,"nodeType":"ExpressionStatement","src":"5038:62:10"},{"expression":{"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1540,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"5111:3:10","typeDescriptions":{"typeIdentifier":"t_contract$_IKey_$1932","typeString":"contract IKey"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1542,"name":"key_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"5122:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1541,"name":"IKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"5117:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IKey_$1932_$","typeString":"type(contract IKey)"}},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5117:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IKey_$1932","typeString":"contract IKey"}},"src":"5111:16:10","typeDescriptions":{"typeIdentifier":"t_contract$_IKey_$1932","typeString":"contract IKey"}},"id":1545,"nodeType":"ExpressionStatement","src":"5111:16:10"},{"eventCall":{"arguments":[{"id":1547,"name":"key_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"5162:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1546,"name":"KeyContractUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"5143:18:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5143:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1549,"nodeType":"EmitStatement","src":"5138:29:10"}]},"functionSelector":"7d9edc96","id":1551,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1527,"name":"OPERATOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"5013:13:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1528,"kind":"modifierInvocation","modifierName":{"id":1526,"name":"onlyRole","nameLocations":["5004:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"5004:8:10"},"nodeType":"ModifierInvocation","src":"5004:23:10"}],"name":"setKeyContract","nameLocation":"4966:14:10","nodeType":"FunctionDefinition","parameters":{"id":1525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1524,"mutability":"mutable","name":"key_","nameLocation":"4989:4:10","nodeType":"VariableDeclaration","scope":1551,"src":"4981:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1523,"name":"address","nodeType":"ElementaryTypeName","src":"4981:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4980:14:10"},"returnParameters":{"id":1529,"nodeType":"ParameterList","parameters":[],"src":"5028:0:10"},"scope":1877,"src":"4957:217:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1587,"nodeType":"Block","src":"5327:208:10","statements":[{"expression":{"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1563,"name":"commission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"5337:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Commission_$1074_storage","typeString":"struct DmtpTech.Commission storage ref"}},"id":1565,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5348:8:10","memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":1071,"src":"5337:19:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1566,"name":"receiver_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"5359:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5337:31:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1568,"nodeType":"ExpressionStatement","src":"5337:31:10"},{"expression":{"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1569,"name":"commission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"5378:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Commission_$1074_storage","typeString":"struct DmtpTech.Commission storage ref"}},"id":1571,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5389:4:10","memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":1069,"src":"5378:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1572,"name":"rate_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"5396:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5378:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1574,"nodeType":"ExpressionStatement","src":"5378:23:10"},{"expression":{"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1575,"name":"commission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"5411:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Commission_$1074_storage","typeString":"struct DmtpTech.Commission storage ref"}},"id":1577,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5422:16:10","memberName":"keyGeneratorRate","nodeType":"MemberAccess","referencedDeclaration":1073,"src":"5411:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1578,"name":"keyGeneratorRate_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"5441:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5411:47:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1580,"nodeType":"ExpressionStatement","src":"5411:47:10"},{"eventCall":{"arguments":[{"id":1582,"name":"rate_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"5492:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1583,"name":"receiver_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"5499:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1584,"name":"keyGeneratorRate_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"5510:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1581,"name":"CommissionUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"5474:17:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5474:54:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1586,"nodeType":"EmitStatement","src":"5469:59:10"}]},"functionSelector":"79894f96","id":1588,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1560,"name":"OPERATOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"5312:13:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1561,"kind":"modifierInvocation","modifierName":{"id":1559,"name":"onlyRole","nameLocations":["5303:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"5303:8:10"},"nodeType":"ModifierInvocation","src":"5303:23:10"}],"name":"setCommission","nameLocation":"5189:13:10","nodeType":"FunctionDefinition","parameters":{"id":1558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1553,"mutability":"mutable","name":"rate_","nameLocation":"5220:5:10","nodeType":"VariableDeclaration","scope":1588,"src":"5212:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1552,"name":"uint256","nodeType":"ElementaryTypeName","src":"5212:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1555,"mutability":"mutable","name":"receiver_","nameLocation":"5243:9:10","nodeType":"VariableDeclaration","scope":1588,"src":"5235:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1554,"name":"address","nodeType":"ElementaryTypeName","src":"5235:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1557,"mutability":"mutable","name":"keyGeneratorRate_","nameLocation":"5270:17:10","nodeType":"VariableDeclaration","scope":1588,"src":"5262:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1556,"name":"uint256","nodeType":"ElementaryTypeName","src":"5262:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5202:91:10"},"returnParameters":{"id":1562,"nodeType":"ParameterList","parameters":[],"src":"5327:0:10"},"scope":1877,"src":"5180:355:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1627,"nodeType":"Block","src":"5664:169:10","statements":[{"expression":{"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1599,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"5674:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1602,"name":"id_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"5694:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1600,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"5682:3:10","typeDescriptions":{"typeIdentifier":"t_contract$_IKey_$1932","typeString":"contract IKey"}},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5686:7:10","memberName":"priceOf","nodeType":"MemberAccess","referencedDeclaration":1906,"src":"5682:11:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5682:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5674:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1605,"nodeType":"ExpressionStatement","src":"5674:24:10"},{"expression":{"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1606,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"5708:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1607,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"5715:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":1608,"name":"commission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"5723:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Commission_$1074_storage","typeString":"struct DmtpTech.Commission storage ref"}},"id":1609,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5734:4:10","memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":1069,"src":"5723:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5715:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1611,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5714:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1612,"name":"A_HUNDRED_PERCENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"5742:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5714:45:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5708:51:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1615,"nodeType":"ExpressionStatement","src":"5708:51:10"},{"expression":{"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1616,"name":"payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"5769:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1617,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"5778:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1618,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"5786:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5778:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5769:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1621,"nodeType":"ExpressionStatement","src":"5769:20:10"},{"expression":{"components":[{"id":1622,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"5807:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1623,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"5814:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1624,"name":"payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"5819:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1625,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5806:20:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256)"}},"functionReturnParameters":1598,"id":1626,"nodeType":"Return","src":"5799:27:10"}]},"functionSelector":"5ba906c0","id":1628,"implemented":true,"kind":"function","modifiers":[],"name":"priceWithCommission","nameLocation":"5550:19:10","nodeType":"FunctionDefinition","parameters":{"id":1591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1590,"mutability":"mutable","name":"id_","nameLocation":"5587:3:10","nodeType":"VariableDeclaration","scope":1628,"src":"5579:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1589,"name":"uint256","nodeType":"ElementaryTypeName","src":"5579:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5569:27:10"},"returnParameters":{"id":1598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1593,"mutability":"mutable","name":"price","nameLocation":"5628:5:10","nodeType":"VariableDeclaration","scope":1628,"src":"5620:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1592,"name":"uint256","nodeType":"ElementaryTypeName","src":"5620:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1595,"mutability":"mutable","name":"fee","nameLocation":"5643:3:10","nodeType":"VariableDeclaration","scope":1628,"src":"5635:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1594,"name":"uint256","nodeType":"ElementaryTypeName","src":"5635:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1597,"mutability":"mutable","name":"payout","nameLocation":"5656:6:10","nodeType":"VariableDeclaration","scope":1628,"src":"5648:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1596,"name":"uint256","nodeType":"ElementaryTypeName","src":"5648:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5619:44:10"},"scope":1877,"src":"5541:292:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1667,"nodeType":"Block","src":"5966:173:10","statements":[{"expression":{"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1639,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"5976:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1642,"name":"id_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"6000:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1640,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"5984:3:10","typeDescriptions":{"typeIdentifier":"t_contract$_IKey_$1932","typeString":"contract IKey"}},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5988:11:10","memberName":"sellPriceOf","nodeType":"MemberAccess","referencedDeclaration":1922,"src":"5984:15:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5984:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5976:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1645,"nodeType":"ExpressionStatement","src":"5976:28:10"},{"expression":{"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1646,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"6014:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1647,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"6021:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":1648,"name":"commission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"6029:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Commission_$1074_storage","typeString":"struct DmtpTech.Commission storage ref"}},"id":1649,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6040:4:10","memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":1069,"src":"6029:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6021:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1651,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6020:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1652,"name":"A_HUNDRED_PERCENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"6048:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6020:45:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6014:51:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1655,"nodeType":"ExpressionStatement","src":"6014:51:10"},{"expression":{"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1656,"name":"payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"6075:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1657,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"6084:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1658,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"6092:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6084:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6075:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1661,"nodeType":"ExpressionStatement","src":"6075:20:10"},{"expression":{"components":[{"id":1662,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"6113:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1663,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"6120:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1664,"name":"payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"6125:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1665,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6112:20:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256)"}},"functionReturnParameters":1638,"id":1666,"nodeType":"Return","src":"6105:27:10"}]},"functionSelector":"66c04491","id":1668,"implemented":true,"kind":"function","modifiers":[],"name":"sellPriceWithCommission","nameLocation":"5848:23:10","nodeType":"FunctionDefinition","parameters":{"id":1631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1630,"mutability":"mutable","name":"id_","nameLocation":"5889:3:10","nodeType":"VariableDeclaration","scope":1668,"src":"5881:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1629,"name":"uint256","nodeType":"ElementaryTypeName","src":"5881:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5871:27:10"},"returnParameters":{"id":1638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1633,"mutability":"mutable","name":"price","nameLocation":"5930:5:10","nodeType":"VariableDeclaration","scope":1668,"src":"5922:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1632,"name":"uint256","nodeType":"ElementaryTypeName","src":"5922:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1635,"mutability":"mutable","name":"fee","nameLocation":"5945:3:10","nodeType":"VariableDeclaration","scope":1668,"src":"5937:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1634,"name":"uint256","nodeType":"ElementaryTypeName","src":"5937:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1637,"mutability":"mutable","name":"payout","nameLocation":"5958:6:10","nodeType":"VariableDeclaration","scope":1668,"src":"5950:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1636,"name":"uint256","nodeType":"ElementaryTypeName","src":"5950:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5921:44:10"},"scope":1877,"src":"5839:300:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1705,"nodeType":"Block","src":"6259:247:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1679,"name":"keyId_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"6290:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6299:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6290:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1682,"name":"keyId_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"6304:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1683,"name":"_keyIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"6314:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6304:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6290:37:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"444d54505f544543485f504152414d5f4b45595f494e56414c4944","id":1686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6341:29:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_6f606490f657dbcffebf55c6e66410c624fbd744584fe32efe5c7af91805ea29","typeString":"literal_string \"DMTP_TECH_PARAM_KEY_INVALID\""},"value":"DMTP_TECH_PARAM_KEY_INVALID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f606490f657dbcffebf55c6e66410c624fbd744584fe32efe5c7af91805ea29","typeString":"literal_string \"DMTP_TECH_PARAM_KEY_INVALID\""}],"id":1678,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6269:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6269:111:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1688,"nodeType":"ExpressionStatement","src":"6269:111:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1690,"name":"account_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"6398:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6418:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6410:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1691,"name":"address","nodeType":"ElementaryTypeName","src":"6410:7:10","typeDescriptions":{}}},"id":1694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6410:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6398:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"444d54505f544543485f504152414d5f414444524553535f494e56414c4944","id":1696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6422:33:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c363a232e45742d6f872a60d7a1a3cdcff28aa4aa3f01c9343d96ec5fa910567","typeString":"literal_string \"DMTP_TECH_PARAM_ADDRESS_INVALID\""},"value":"DMTP_TECH_PARAM_ADDRESS_INVALID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c363a232e45742d6f872a60d7a1a3cdcff28aa4aa3f01c9343d96ec5fa910567","typeString":"literal_string \"DMTP_TECH_PARAM_ADDRESS_INVALID\""}],"id":1689,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6390:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:66:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1698,"nodeType":"ExpressionStatement","src":"6390:66:10"},{"expression":{"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1699,"name":"keyGenerators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"6467:13:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1701,"indexExpression":{"id":1700,"name":"keyId_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"6481:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6467:21:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1702,"name":"account_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"6491:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6467:32:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1704,"nodeType":"ExpressionStatement","src":"6467:32:10"}]},"functionSelector":"8dc9330f","id":1706,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1675,"name":"OPERATOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"6244:13:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1676,"kind":"modifierInvocation","modifierName":{"id":1674,"name":"onlyRole","nameLocations":["6235:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"6235:8:10"},"nodeType":"ModifierInvocation","src":"6235:23:10"}],"name":"setKeyGeneratos","nameLocation":"6154:15:10","nodeType":"FunctionDefinition","parameters":{"id":1673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1670,"mutability":"mutable","name":"keyId_","nameLocation":"6187:6:10","nodeType":"VariableDeclaration","scope":1706,"src":"6179:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1669,"name":"uint256","nodeType":"ElementaryTypeName","src":"6179:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1672,"mutability":"mutable","name":"account_","nameLocation":"6211:8:10","nodeType":"VariableDeclaration","scope":1706,"src":"6203:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1671,"name":"address","nodeType":"ElementaryTypeName","src":"6203:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6169:56:10"},"returnParameters":{"id":1677,"nodeType":"ParameterList","parameters":[],"src":"6259:0:10"},"scope":1877,"src":"6145:361:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1746,"nodeType":"Block","src":"6615:245:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1715,"name":"generated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"6629:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1717,"indexExpression":{"id":1716,"name":"seller_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"6639:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6629:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1718,"name":"id_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"6651:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6629:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1723,"nodeType":"IfStatement","src":"6625:67:10","trueBody":{"id":1722,"nodeType":"Block","src":"6656:36:10","statements":[{"expression":{"hexValue":"74727565","id":1720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6677:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1714,"id":1721,"nodeType":"Return","src":"6670:11:10"}]}},{"assignments":[1725],"declarations":[{"constant":false,"id":1725,"mutability":"mutable","name":"balances","nameLocation":"6710:8:10","nodeType":"VariableDeclaration","scope":1746,"src":"6702:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1724,"name":"uint256","nodeType":"ElementaryTypeName","src":"6702:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1736,"initialValue":{"arguments":[{"id":1733,"name":"seller_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"6754:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1734,"name":"id_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"6763:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[{"id":1729,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"6738:3:10","typeDescriptions":{"typeIdentifier":"t_contract$_IKey_$1932","typeString":"contract IKey"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IKey_$1932","typeString":"contract IKey"}],"id":1728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6730:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1727,"name":"address","nodeType":"ElementaryTypeName","src":"6730:7:10","typeDescriptions":{}}},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6730:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1726,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"6721:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155_$912_$","typeString":"type(contract IERC1155)"}},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6721:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155_$912","typeString":"contract IERC1155"}},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6744:9:10","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":850,"src":"6721:32:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view external returns (uint256)"}},"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6721:46:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6702:65:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1737,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"6781:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6792:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6781:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1743,"nodeType":"IfStatement","src":"6777:54:10","trueBody":{"id":1742,"nodeType":"Block","src":"6795:36:10","statements":[{"expression":{"hexValue":"74727565","id":1740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6816:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1714,"id":1741,"nodeType":"Return","src":"6809:11:10"}]}},{"expression":{"hexValue":"66616c7365","id":1744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6848:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1714,"id":1745,"nodeType":"Return","src":"6841:12:10"}]},"functionSelector":"882e9918","id":1747,"implemented":true,"kind":"function","modifiers":[],"name":"allowToSellKey","nameLocation":"6521:14:10","nodeType":"FunctionDefinition","parameters":{"id":1711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1708,"mutability":"mutable","name":"seller_","nameLocation":"6553:7:10","nodeType":"VariableDeclaration","scope":1747,"src":"6545:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1707,"name":"address","nodeType":"ElementaryTypeName","src":"6545:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1710,"mutability":"mutable","name":"id_","nameLocation":"6578:3:10","nodeType":"VariableDeclaration","scope":1747,"src":"6570:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1709,"name":"uint256","nodeType":"ElementaryTypeName","src":"6570:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6535:52:10"},"returnParameters":{"id":1714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1747,"src":"6609:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1712,"name":"bool","nodeType":"ElementaryTypeName","src":"6609:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6608:6:10"},"scope":1877,"src":"6512:348:10","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1767,"nodeType":"Block","src":"6959:125:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1756,"name":"check_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"6977:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1757,"name":"needToCheckWhitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"6987:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6977:30:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"444d54505f544543485f434f4e4649475f4841535f534554","id":1759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7009:26:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_0297ff2bc7a61b6ce395699660f5eef7143c3845ef907281d13d9243ccf3699c","typeString":"literal_string \"DMTP_TECH_CONFIG_HAS_SET\""},"value":"DMTP_TECH_CONFIG_HAS_SET"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0297ff2bc7a61b6ce395699660f5eef7143c3845ef907281d13d9243ccf3699c","typeString":"literal_string \"DMTP_TECH_CONFIG_HAS_SET\""}],"id":1755,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6969:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6969:67:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1761,"nodeType":"ExpressionStatement","src":"6969:67:10"},{"expression":{"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1762,"name":"needToCheckWhitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"7047:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7070:7:10","subExpression":{"id":1763,"name":"check_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"7071:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7047:30:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1766,"nodeType":"ExpressionStatement","src":"7047:30:10"}]},"functionSelector":"b0afbfd2","id":1768,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1752,"name":"OPERATOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"6944:13:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1753,"kind":"modifierInvocation","modifierName":{"id":1751,"name":"onlyRole","nameLocations":["6935:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"6935:8:10"},"nodeType":"ModifierInvocation","src":"6935:23:10"}],"name":"setNeedToCheckWhitelist","nameLocation":"6875:23:10","nodeType":"FunctionDefinition","parameters":{"id":1750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1749,"mutability":"mutable","name":"check_","nameLocation":"6913:6:10","nodeType":"VariableDeclaration","scope":1768,"src":"6908:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1748,"name":"bool","nodeType":"ElementaryTypeName","src":"6908:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6898:27:10"},"returnParameters":{"id":1754,"nodeType":"ParameterList","parameters":[],"src":"6959:0:10"},"scope":1877,"src":"6866:218:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1875,"nodeType":"Block","src":"7193:736:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1778,"name":"id_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"7211:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1779,"name":"_keyIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"7218:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7211:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"444d54505f544543485f504152414d5f4b45595f494e56414c4944","id":1781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7233:29:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_6f606490f657dbcffebf55c6e66410c624fbd744584fe32efe5c7af91805ea29","typeString":"literal_string \"DMTP_TECH_PARAM_KEY_INVALID\""},"value":"DMTP_TECH_PARAM_KEY_INVALID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f606490f657dbcffebf55c6e66410c624fbd744584fe32efe5c7af91805ea29","typeString":"literal_string \"DMTP_TECH_PARAM_KEY_INVALID\""}],"id":1777,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7203:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7203:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1783,"nodeType":"ExpressionStatement","src":"7203:60:10"},{"assignments":[1785],"declarations":[{"constant":false,"id":1785,"mutability":"mutable","name":"price","nameLocation":"7282:5:10","nodeType":"VariableDeclaration","scope":1875,"src":"7274:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1784,"name":"uint256","nodeType":"ElementaryTypeName","src":"7274:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1790,"initialValue":{"arguments":[{"id":1788,"name":"id_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"7302:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1786,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"7290:3:10","typeDescriptions":{"typeIdentifier":"t_contract$_IKey_$1932","typeString":"contract IKey"}},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7294:7:10","memberName":"priceOf","nodeType":"MemberAccess","referencedDeclaration":1906,"src":"7290:11:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7290:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7274:32:10"},{"assignments":[1792],"declarations":[{"constant":false,"id":1792,"mutability":"mutable","name":"fee","nameLocation":"7325:3:10","nodeType":"VariableDeclaration","scope":1875,"src":"7317:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1791,"name":"uint256","nodeType":"ElementaryTypeName","src":"7317:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1800,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1793,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"7332:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":1794,"name":"commission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"7340:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Commission_$1074_storage","typeString":"struct DmtpTech.Commission storage ref"}},"id":1795,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7351:4:10","memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":1069,"src":"7340:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7332:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1797,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7331:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1798,"name":"A_HUNDRED_PERCENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"7359:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7331:45:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7317:59:10"},{"assignments":[1802],"declarations":[{"constant":false,"id":1802,"mutability":"mutable","name":"payout","nameLocation":"7394:6:10","nodeType":"VariableDeclaration","scope":1875,"src":"7386:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1801,"name":"uint256","nodeType":"ElementaryTypeName","src":"7386:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1806,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1803,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"7403:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1804,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"7411:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7403:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7386:28:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1808,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7433:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7437:5:10","memberName":"value","nodeType":"MemberAccess","src":"7433:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1810,"name":"payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"7446:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7433:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"444d54505f544543485f50524943455f4348414e474544","id":1812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7454:25:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_896721b5e23c3112acc97b4fd2e0be963d1bb68c60cda1413d94ea367dfeff61","typeString":"literal_string \"DMTP_TECH_PRICE_CHANGED\""},"value":"DMTP_TECH_PRICE_CHANGED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_896721b5e23c3112acc97b4fd2e0be963d1bb68c60cda1413d94ea367dfeff61","typeString":"literal_string \"DMTP_TECH_PRICE_CHANGED\""}],"id":1807,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7425:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1814,"nodeType":"ExpressionStatement","src":"7425:55:10"},{"expression":{"arguments":[{"id":1818,"name":"receiver_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"7500:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1819,"name":"id_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"7511:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7516:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"","id":1821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7519:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1815,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"7491:3:10","typeDescriptions":{"typeIdentifier":"t_contract$_IKey_$1932","typeString":"contract IKey"}},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7495:4:10","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":1890,"src":"7491:8:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory) external"}},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7491:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1823,"nodeType":"ExpressionStatement","src":"7491:31:10"},{"assignments":[1825],"declarations":[{"constant":false,"id":1825,"mutability":"mutable","name":"keyGeneratorFee","nameLocation":"7541:15:10","nodeType":"VariableDeclaration","scope":1875,"src":"7533:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1824,"name":"uint256","nodeType":"ElementaryTypeName","src":"7533:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1833,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1826,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"7560:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":1827,"name":"commission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"7568:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Commission_$1074_storage","typeString":"struct DmtpTech.Commission storage ref"}},"id":1828,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7579:16:10","memberName":"keyGeneratorRate","nodeType":"MemberAccess","referencedDeclaration":1073,"src":"7568:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7560:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1830,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7559:37:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1831,"name":"A_HUNDRED_PERCENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"7611:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7559:69:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7533:95:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1834,"name":"keyGeneratorFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"7642:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7660:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7642:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1848,"nodeType":"IfStatement","src":"7638:103:10","trueBody":{"id":1847,"nodeType":"Block","src":"7663:78:10","statements":[{"expression":{"arguments":[{"id":1844,"name":"keyGeneratorFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"7714:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"baseExpression":{"id":1839,"name":"keyGenerators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"7685:13:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1841,"indexExpression":{"id":1840,"name":"id_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"7699:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7685:18:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7677:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1837,"name":"address","nodeType":"ElementaryTypeName","src":"7677:8:10","stateMutability":"payable","typeDescriptions":{}}},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7677:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7705:8:10","memberName":"transfer","nodeType":"MemberAccess","src":"7677:36:10","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7677:53:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1846,"nodeType":"ExpressionStatement","src":"7677:53:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1849,"name":"commission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"7755:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Commission_$1074_storage","typeString":"struct DmtpTech.Commission storage ref"}},"id":1850,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7766:8:10","memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":1071,"src":"7755:19:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7786:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7778:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1851,"name":"address","nodeType":"ElementaryTypeName","src":"7778:7:10","typeDescriptions":{}}},"id":1854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7778:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7755:33:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1868,"nodeType":"IfStatement","src":"7751:124:10","trueBody":{"id":1867,"nodeType":"Block","src":"7790:85:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1862,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"7842:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1863,"name":"keyGeneratorFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"7848:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7842:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":1858,"name":"commission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"7812:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Commission_$1074_storage","typeString":"struct DmtpTech.Commission storage ref"}},"id":1859,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7823:8:10","memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":1071,"src":"7812:19:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7804:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1856,"name":"address","nodeType":"ElementaryTypeName","src":"7804:8:10","stateMutability":"payable","typeDescriptions":{}}},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7804:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7833:8:10","memberName":"transfer","nodeType":"MemberAccess","src":"7804:37:10","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7804:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1866,"nodeType":"ExpressionStatement","src":"7804:60:10"}]}},{"eventCall":{"arguments":[{"id":1870,"name":"id_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"7900:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1871,"name":"receiver_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"7905:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1872,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"7916:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1869,"name":"KeyBought","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"7890:9:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7890:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1874,"nodeType":"EmitStatement","src":"7885:37:10"}]},"functionSelector":"15534028","id":1876,"implemented":true,"kind":"function","modifiers":[{"id":1775,"kind":"modifierInvocation","modifierName":{"id":1774,"name":"nonReentrant","nameLocations":["7180:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":945,"src":"7180:12:10"},"nodeType":"ModifierInvocation","src":"7180:12:10"}],"name":"buyKeyFor","nameLocation":"7099:9:10","nodeType":"FunctionDefinition","parameters":{"id":1773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1770,"mutability":"mutable","name":"id_","nameLocation":"7126:3:10","nodeType":"VariableDeclaration","scope":1876,"src":"7118:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1769,"name":"uint256","nodeType":"ElementaryTypeName","src":"7118:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1772,"mutability":"mutable","name":"receiver_","nameLocation":"7147:9:10","nodeType":"VariableDeclaration","scope":1876,"src":"7139:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1771,"name":"address","nodeType":"ElementaryTypeName","src":"7139:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7108:54:10"},"returnParameters":{"id":1776,"nodeType":"ParameterList","parameters":[],"src":"7193:0:10"},"scope":1877,"src":"7090:839:10","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":1878,"src":"355:7576:10","usedErrors":[379,382,712,715,926],"usedEvents":[387,724,733,742,1037,1045,1051,1055,1059,1067]}],"src":"32:7900:10"},"id":10},"interfaces/IKey.sol":{"ast":{"absolutePath":"interfaces/IKey.sol","exportedSymbols":{"IKey":[1932]},"id":1933,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1879,"literals":["solidity","^","0.8",".10"],"nodeType":"PragmaDirective","src":"32:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IKey","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1932,"linearizedBaseContracts":[1932],"name":"IKey","nameLocation":"68:4:11","nodeType":"ContractDefinition","nodes":[{"functionSelector":"731133e9","id":1890,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"86:4:11","nodeType":"FunctionDefinition","parameters":{"id":1888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1881,"mutability":"mutable","name":"to","nameLocation":"104:2:11","nodeType":"VariableDeclaration","scope":1890,"src":"96:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1880,"name":"address","nodeType":"ElementaryTypeName","src":"96:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1883,"mutability":"mutable","name":"id","nameLocation":"120:2:11","nodeType":"VariableDeclaration","scope":1890,"src":"112:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1882,"name":"uint256","nodeType":"ElementaryTypeName","src":"112:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1885,"mutability":"mutable","name":"amount","nameLocation":"136:6:11","nodeType":"VariableDeclaration","scope":1890,"src":"128:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1884,"name":"uint256","nodeType":"ElementaryTypeName","src":"128:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1887,"mutability":"mutable","name":"data","nameLocation":"161:4:11","nodeType":"VariableDeclaration","scope":1890,"src":"148:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1886,"name":"bytes","nodeType":"ElementaryTypeName","src":"148:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"90:79:11"},"returnParameters":{"id":1889,"nodeType":"ParameterList","parameters":[],"src":"178:0:11"},"scope":1932,"src":"77:102:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f5298aca","id":1899,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"192:4:11","nodeType":"FunctionDefinition","parameters":{"id":1897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1892,"mutability":"mutable","name":"to","nameLocation":"205:2:11","nodeType":"VariableDeclaration","scope":1899,"src":"197:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1891,"name":"address","nodeType":"ElementaryTypeName","src":"197:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1894,"mutability":"mutable","name":"id","nameLocation":"217:2:11","nodeType":"VariableDeclaration","scope":1899,"src":"209:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1893,"name":"uint256","nodeType":"ElementaryTypeName","src":"209:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1896,"mutability":"mutable","name":"amount","nameLocation":"229:6:11","nodeType":"VariableDeclaration","scope":1899,"src":"221:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1895,"name":"uint256","nodeType":"ElementaryTypeName","src":"221:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"196:40:11"},"returnParameters":{"id":1898,"nodeType":"ParameterList","parameters":[],"src":"245:0:11"},"scope":1932,"src":"183:63:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b9186d7d","id":1906,"implemented":false,"kind":"function","modifiers":[],"name":"priceOf","nameLocation":"259:7:11","nodeType":"FunctionDefinition","parameters":{"id":1902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1901,"mutability":"mutable","name":"id","nameLocation":"275:2:11","nodeType":"VariableDeclaration","scope":1906,"src":"267:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1900,"name":"uint256","nodeType":"ElementaryTypeName","src":"267:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"266:12:11"},"returnParameters":{"id":1905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1906,"src":"302:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1903,"name":"uint256","nodeType":"ElementaryTypeName","src":"302:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"301:9:11"},"scope":1932,"src":"250:61:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0e543d74","id":1915,"implemented":false,"kind":"function","modifiers":[],"name":"priceOfBatch","nameLocation":"324:12:11","nodeType":"FunctionDefinition","parameters":{"id":1910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1909,"mutability":"mutable","name":"ids","nameLocation":"359:3:11","nodeType":"VariableDeclaration","scope":1915,"src":"342:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1907,"name":"uint256","nodeType":"ElementaryTypeName","src":"342:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1908,"nodeType":"ArrayTypeName","src":"342:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"336:30:11"},"returnParameters":{"id":1914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1913,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1915,"src":"390:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1911,"name":"uint256","nodeType":"ElementaryTypeName","src":"390:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1912,"nodeType":"ArrayTypeName","src":"390:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"389:18:11"},"scope":1932,"src":"315:93:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a8f0e6e2","id":1922,"implemented":false,"kind":"function","modifiers":[],"name":"sellPriceOf","nameLocation":"421:11:11","nodeType":"FunctionDefinition","parameters":{"id":1918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1917,"mutability":"mutable","name":"id","nameLocation":"441:2:11","nodeType":"VariableDeclaration","scope":1922,"src":"433:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1916,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"432:12:11"},"returnParameters":{"id":1921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1920,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1922,"src":"468:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1919,"name":"uint256","nodeType":"ElementaryTypeName","src":"468:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"467:9:11"},"scope":1932,"src":"412:65:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c0eed2e0","id":1931,"implemented":false,"kind":"function","modifiers":[],"name":"sellPriceOfBatch","nameLocation":"490:16:11","nodeType":"FunctionDefinition","parameters":{"id":1926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1925,"mutability":"mutable","name":"ids","nameLocation":"529:3:11","nodeType":"VariableDeclaration","scope":1931,"src":"512:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1923,"name":"uint256","nodeType":"ElementaryTypeName","src":"512:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1924,"nodeType":"ArrayTypeName","src":"512:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"506:30:11"},"returnParameters":{"id":1930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1929,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1931,"src":"560:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1927,"name":"uint256","nodeType":"ElementaryTypeName","src":"560:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1928,"nodeType":"ArrayTypeName","src":"560:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"559:18:11"},"scope":1932,"src":"481:97:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1933,"src":"58:522:11","usedErrors":[],"usedEvents":[]}],"src":"32:549:11"},"id":11},"libs/Signature.sol":{"ast":{"absolutePath":"libs/Signature.sol","exportedSymbols":{"Signature":[2003]},"id":2004,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1934,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:12"},{"abstract":false,"baseContracts":[],"canonicalName":"Signature","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":2003,"linearizedBaseContracts":[2003],"name":"Signature","nameLocation":"65:9:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":1958,"nodeType":"Block","src":"177:368:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1946,"name":"sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"195:3:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"199:6:12","memberName":"length","nodeType":"MemberAccess","src":"195:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":1948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"209:2:12","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"195:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1945,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"187:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"187:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1951,"nodeType":"ExpressionStatement","src":"187:25:12"},{"AST":{"nativeSrc":"232:280:12","nodeType":"YulBlock","src":"232:280:12","statements":[{"nativeSrc":"302:24:12","nodeType":"YulAssignment","src":"302:24:12","value":{"arguments":[{"arguments":[{"name":"sig","nativeSrc":"317:3:12","nodeType":"YulIdentifier","src":"317:3:12"},{"kind":"number","nativeSrc":"322:2:12","nodeType":"YulLiteral","src":"322:2:12","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"313:3:12","nodeType":"YulIdentifier","src":"313:3:12"},"nativeSrc":"313:12:12","nodeType":"YulFunctionCall","src":"313:12:12"}],"functionName":{"name":"mload","nativeSrc":"307:5:12","nodeType":"YulIdentifier","src":"307:5:12"},"nativeSrc":"307:19:12","nodeType":"YulFunctionCall","src":"307:19:12"},"variableNames":[{"name":"r","nativeSrc":"302:1:12","nodeType":"YulIdentifier","src":"302:1:12"}]},{"nativeSrc":"371:24:12","nodeType":"YulAssignment","src":"371:24:12","value":{"arguments":[{"arguments":[{"name":"sig","nativeSrc":"386:3:12","nodeType":"YulIdentifier","src":"386:3:12"},{"kind":"number","nativeSrc":"391:2:12","nodeType":"YulLiteral","src":"391:2:12","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"382:3:12","nodeType":"YulIdentifier","src":"382:3:12"},"nativeSrc":"382:12:12","nodeType":"YulFunctionCall","src":"382:12:12"}],"functionName":{"name":"mload","nativeSrc":"376:5:12","nodeType":"YulIdentifier","src":"376:5:12"},"nativeSrc":"376:19:12","nodeType":"YulFunctionCall","src":"376:19:12"},"variableNames":[{"name":"s","nativeSrc":"371:1:12","nodeType":"YulIdentifier","src":"371:1:12"}]},{"nativeSrc":"469:33:12","nodeType":"YulAssignment","src":"469:33:12","value":{"arguments":[{"kind":"number","nativeSrc":"479:1:12","nodeType":"YulLiteral","src":"479:1:12","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"sig","nativeSrc":"492:3:12","nodeType":"YulIdentifier","src":"492:3:12"},{"kind":"number","nativeSrc":"497:2:12","nodeType":"YulLiteral","src":"497:2:12","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"488:3:12","nodeType":"YulIdentifier","src":"488:3:12"},"nativeSrc":"488:12:12","nodeType":"YulFunctionCall","src":"488:12:12"}],"functionName":{"name":"mload","nativeSrc":"482:5:12","nodeType":"YulIdentifier","src":"482:5:12"},"nativeSrc":"482:19:12","nodeType":"YulFunctionCall","src":"482:19:12"}],"functionName":{"name":"byte","nativeSrc":"474:4:12","nodeType":"YulIdentifier","src":"474:4:12"},"nativeSrc":"474:28:12","nodeType":"YulFunctionCall","src":"474:28:12"},"variableNames":[{"name":"v","nativeSrc":"469:1:12","nodeType":"YulIdentifier","src":"469:1:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1941,"isOffset":false,"isSlot":false,"src":"302:1:12","valueSize":1},{"declaration":1943,"isOffset":false,"isSlot":false,"src":"371:1:12","valueSize":1},{"declaration":1936,"isOffset":false,"isSlot":false,"src":"317:3:12","valueSize":1},{"declaration":1936,"isOffset":false,"isSlot":false,"src":"386:3:12","valueSize":1},{"declaration":1936,"isOffset":false,"isSlot":false,"src":"492:3:12","valueSize":1},{"declaration":1939,"isOffset":false,"isSlot":false,"src":"469:1:12","valueSize":1}],"id":1952,"nodeType":"InlineAssembly","src":"223:289:12"},{"expression":{"components":[{"id":1953,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"530:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1954,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"533:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1955,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"536:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1956,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"529:9:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint8_$_t_bytes32_$_t_bytes32_$","typeString":"tuple(uint8,bytes32,bytes32)"}},"functionReturnParameters":1944,"id":1957,"nodeType":"Return","src":"522:16:12"}]},"id":1959,"implemented":true,"kind":"function","modifiers":[],"name":"splitSignature","nameLocation":"91:14:12","nodeType":"FunctionDefinition","parameters":{"id":1937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1936,"mutability":"mutable","name":"sig","nameLocation":"119:3:12","nodeType":"VariableDeclaration","scope":1959,"src":"106:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1935,"name":"bytes","nodeType":"ElementaryTypeName","src":"106:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"105:18:12"},"returnParameters":{"id":1944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1939,"mutability":"mutable","name":"v","nameLocation":"152:1:12","nodeType":"VariableDeclaration","scope":1959,"src":"146:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1938,"name":"uint8","nodeType":"ElementaryTypeName","src":"146:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1941,"mutability":"mutable","name":"r","nameLocation":"163:1:12","nodeType":"VariableDeclaration","scope":1959,"src":"155:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1940,"name":"bytes32","nodeType":"ElementaryTypeName","src":"155:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1943,"mutability":"mutable","name":"s","nameLocation":"174:1:12","nodeType":"VariableDeclaration","scope":1959,"src":"166:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1942,"name":"bytes32","nodeType":"ElementaryTypeName","src":"166:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"145:31:12"},"scope":2003,"src":"82:463:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1985,"nodeType":"Block","src":"641:115:12","statements":[{"assignments":[1969,1971,1973],"declarations":[{"constant":false,"id":1969,"mutability":"mutable","name":"v","nameLocation":"658:1:12","nodeType":"VariableDeclaration","scope":1985,"src":"652:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1968,"name":"uint8","nodeType":"ElementaryTypeName","src":"652:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1971,"mutability":"mutable","name":"r","nameLocation":"669:1:12","nodeType":"VariableDeclaration","scope":1985,"src":"661:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1970,"name":"bytes32","nodeType":"ElementaryTypeName","src":"661:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1973,"mutability":"mutable","name":"s","nameLocation":"680:1:12","nodeType":"VariableDeclaration","scope":1985,"src":"672:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1972,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1977,"initialValue":{"arguments":[{"id":1975,"name":"sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"700:3:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1974,"name":"splitSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"685:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint8_$_t_bytes32_$_t_bytes32_$","typeString":"function (bytes memory) pure returns (uint8,bytes32,bytes32)"}},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"685:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint8_$_t_bytes32_$_t_bytes32_$","typeString":"tuple(uint8,bytes32,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"651:53:12"},{"expression":{"arguments":[{"id":1979,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"732:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1980,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"741:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1981,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"744:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1982,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"747:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1978,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"722:9:12","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"722:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1967,"id":1984,"nodeType":"Return","src":"715:34:12"}]},"id":1986,"implemented":true,"kind":"function","modifiers":[],"name":"recoverSigner","nameLocation":"560:13:12","nodeType":"FunctionDefinition","parameters":{"id":1964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1961,"mutability":"mutable","name":"message","nameLocation":"582:7:12","nodeType":"VariableDeclaration","scope":1986,"src":"574:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1960,"name":"bytes32","nodeType":"ElementaryTypeName","src":"574:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1963,"mutability":"mutable","name":"sig","nameLocation":"604:3:12","nodeType":"VariableDeclaration","scope":1986,"src":"591:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1962,"name":"bytes","nodeType":"ElementaryTypeName","src":"591:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"573:35:12"},"returnParameters":{"id":1967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1966,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1986,"src":"632:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1965,"name":"address","nodeType":"ElementaryTypeName","src":"632:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"631:9:12"},"scope":2003,"src":"551:205:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2001,"nodeType":"Block","src":"826:93:12","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","id":1996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"870:34:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},"value":"\u0019Ethereum Signed Message:\n32"},{"id":1997,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"906:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1994,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"853:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"857:12:12","memberName":"encodePacked","nodeType":"MemberAccess","src":"853:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"853:58:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1993,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"843:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"843:69:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1992,"id":2000,"nodeType":"Return","src":"836:76:12"}]},"id":2002,"implemented":true,"kind":"function","modifiers":[],"name":"prefixed","nameLocation":"771:8:12","nodeType":"FunctionDefinition","parameters":{"id":1989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1988,"mutability":"mutable","name":"hash","nameLocation":"788:4:12","nodeType":"VariableDeclaration","scope":2002,"src":"780:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1987,"name":"bytes32","nodeType":"ElementaryTypeName","src":"780:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"779:14:12"},"returnParameters":{"id":1992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1991,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2002,"src":"817:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1990,"name":"bytes32","nodeType":"ElementaryTypeName","src":"817:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"816:9:12"},"scope":2003,"src":"762:157:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2004,"src":"57:865:12","usedErrors":[],"usedEvents":[]}],"src":"32:890:12"},"id":12}},"contracts":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"AccessControlUpgradeable":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.","errors":{"AccessControlBadConfirmation()":[{"details":"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."}],"AccessControlUnauthorizedAccount(address,bytes32)":[{"details":"The `account` is missing a role."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"RoleAdminChanged(bytes32,bytes32,bytes32)":{"details":"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."},"RoleGranted(bytes32,address,address)":{"details":"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"RoleRevoked(bytes32,address,address)":{"details":"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"}},"kind":"dev","methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"assembly":"","bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"irOptimized":"","metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() {     _disableInitializers(); } ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"assembly":"","bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"irOptimized":"","metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"assembly":"","bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"irOptimized":"","metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ERC165Upgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"assembly":"","bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"irOptimized":"","metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"External interface of AccessControl declared to support ERC-165 detection.","errors":{"AccessControlBadConfirmation()":[{"details":"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."}],"AccessControlUnauthorizedAccount(address,bytes32)":[{"details":"The `account` is missing a role."}]},"events":{"RoleAdminChanged(bytes32,bytes32,bytes32)":{"details":"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."},"RoleGranted(bytes32,address,address)":{"details":"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"RoleRevoked(bytes32,address,address)":{"details":"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"}},"kind":"dev","methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."}},"version":1},"evm":{"assembly":"","bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"irOptimized":"","metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"IERC1155":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].","events":{"ApprovalForAll(address,address,bool)":{"details":"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."},"TransferBatch(address,address,address,uint256[],uint256[])":{"details":"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."},"TransferSingle(address,address,address,uint256,uint256)":{"details":"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."},"URI(string,uint256)":{"details":"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."}},"kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"Returns the value of tokens of token type `id` owned by `account`."},"balanceOfBatch(address[],uint256[])":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."},"isApprovedForAll(address,address)":{"details":"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."},"setApprovalForAll(address,bool)":{"details":"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"assembly":"","bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}},"irOptimized":"","metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","errors":{"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}]},"kind":"dev","methods":{},"version":1},"evm":{"assembly":"","bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"irOptimized":"","metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":923,"contract":"@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"assembly":"","bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"irOptimized":"","metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"abstract/AbstractRole.sol":{"AbstractRole":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"OPERATOR_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"errors":{"AccessControlBadConfirmation()":[{"details":"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."}],"AccessControlUnauthorizedAccount(address,bytes32)":[{"details":"The `account` is missing a role."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"RoleAdminChanged(bytes32,bytes32,bytes32)":{"details":"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."},"RoleGranted(bytes32,address,address)":{"details":"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"RoleRevoked(bytes32,address,address)":{"details":"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"}},"kind":"dev","methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"assembly":"","bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","MINTER_ROLE()":"d5391393","OPERATOR_ROLE()":"f5b541a6","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"irOptimized":"","metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OPERATOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"abstract/AbstractRole.sol\":\"AbstractRole\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"abstract/AbstractRole.sol\":{\"keccak256\":\"0x0bd61b6e65ed5b02d757d737340e218dcb36faed2ca04ddfcc2fdb02d9bf98e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7e481c800ec34dd321a9db890ed35f224e6c046978fee1186788a8fb93ab4e2\",\"dweb:/ipfs/QmQpy4UWpCiuGZiUzr52fP5ksUHJS1ud3Wubik7Bdt5Fus\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/DmtpTech.sol":{"DmtpTech":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"rate","type":"uint256"},{"indexed":false,"internalType":"address","name":"receiver_","type":"address"},{"indexed":false,"internalType":"uint256","name":"keyGeneratorRate","type":"uint256"}],"name":"CommissionUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"keyId","type":"uint256"},{"indexed":false,"internalType":"address","name":"buyer","type":"address"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"}],"name":"KeyBought","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"key","type":"address"}],"name":"KeyContractUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"keyId","type":"uint256"},{"indexed":false,"internalType":"address","name":"kol","type":"address"}],"name":"KeyGenerated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"keyId","type":"uint256"},{"indexed":false,"internalType":"address","name":"seller","type":"address"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"}],"name":"KeySold","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"signer","type":"address"}],"name":"SignerSet","type":"event"},{"inputs":[],"name":"A_HUNDRED_PERCENT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"OPERATOR_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"seller_","type":"address"},{"internalType":"uint256","name":"id_","type":"uint256"}],"name":"allowToSellKey","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id_","type":"uint256"}],"name":"buyKey","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id_","type":"uint256"},{"internalType":"address","name":"receiver_","type":"address"}],"name":"buyKeyFor","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"commission","outputs":[{"internalType":"uint256","name":"rate","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"keyGeneratorRate","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"signature_","type":"bytes"}],"name":"generateKey","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"generated","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"key_","type":"address"},{"internalType":"address","name":"signer_","type":"address"},{"internalType":"uint256","name":"commissionRate_","type":"uint256"},{"internalType":"address","name":"commissionReceiver_","type":"address"},{"internalType":"uint256","name":"commissionKeyGeneratorRate_","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"key","outputs":[{"internalType":"contract IKey","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"keyGenerators","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"needToCheckWhitelist","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id_","type":"uint256"}],"name":"priceWithCommission","outputs":[{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"fee","type":"uint256"},{"internalType":"uint256","name":"payout","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id_","type":"uint256"},{"internalType":"uint256","name":"price_","type":"uint256"}],"name":"sellKey","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id_","type":"uint256"}],"name":"sellPriceWithCommission","outputs":[{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"fee","type":"uint256"},{"internalType":"uint256","name":"payout","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"rate_","type":"uint256"},{"internalType":"address","name":"receiver_","type":"address"},{"internalType":"uint256","name":"keyGeneratorRate_","type":"uint256"}],"name":"setCommission","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"key_","type":"address"}],"name":"setKeyContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"keyId_","type":"uint256"},{"internalType":"address","name":"account_","type":"address"}],"name":"setKeyGeneratos","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"check_","type":"bool"}],"name":"setNeedToCheckWhitelist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"signer_","type":"address"}],"name":"setSigner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"signer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"errors":{"AccessControlBadConfirmation()":[{"details":"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."}],"AccessControlUnauthorizedAccount(address,bytes32)":[{"details":"The `account` is missing a role."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"RoleAdminChanged(bytes32,bytes32,bytes32)":{"details":"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."},"RoleGranted(bytes32,address,address)":{"details":"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"RoleRevoked(bytes32,address,address)":{"details":"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"}},"kind":"dev","methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"assembly":"    /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2061:2082  _status = NOT_ENTERED */\n  0x00\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n  sstore\n    /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_92, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_92:\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x01ffc9a7\n      eq\n      tag_94\n      jumpi\n      dup1\n      0x0d54a882\n      eq\n      tag_96\n      jumpi\n      dup1\n      0x15534028\n      eq\n      tag_98\n      jumpi\n      dup1\n      0x238ac933\n      eq\n      tag_100\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_102\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_104\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_106\n      jumpi\n      dup1\n      0x3943380c\n      eq\n      tag_108\n      jumpi\n      dup1\n      0x5ba906c0\n      eq\n      tag_110\n      jumpi\n      dup1\n      0x62bea295\n      eq\n      tag_112\n      jumpi\n      dup1\n      0x66c04491\n      eq\n      tag_114\n      jumpi\n      dup1\n      0x6c19e783\n      eq\n      tag_116\n      jumpi\n      dup1\n      0x79894f96\n      eq\n      tag_118\n      jumpi\n      dup1\n      0x7d9edc96\n      eq\n      tag_120\n      jumpi\n      dup1\n      0x81803632\n      eq\n      tag_122\n      jumpi\n      dup1\n      0x882e9918\n      eq\n      tag_124\n      jumpi\n      dup1\n      0x8d5ea68b\n      eq\n      tag_126\n      jumpi\n      dup1\n      0x8dc9330f\n      eq\n      tag_128\n      jumpi\n      dup1\n      0x8fd7c568\n      eq\n      tag_130\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_132\n      jumpi\n      dup1\n      0x9fef93f8\n      eq\n      tag_134\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_136\n      jumpi\n      dup1\n      0xb0afbfd2\n      eq\n      tag_138\n      jumpi\n      dup1\n      0xb77c0f00\n      eq\n      tag_140\n      jumpi\n      dup1\n      0xd5391393\n      eq\n      tag_142\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_144\n      jumpi\n      dup1\n      0xe1489191\n      eq\n      tag_146\n      jumpi\n      dup1\n      0xf5b541a6\n      eq\n      tag_148\n      jumpi\n      0xf7c00e63\n      eq\n      tag_150\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_150:\n      tag_48\n      jump\t// in\n    tag_148:\n      tag_47\n      jump\t// in\n    tag_146:\n      tag_46\n      jump\t// in\n    tag_144:\n      tag_43\n      jump\t// in\n    tag_142:\n      tag_42\n      jump\t// in\n    tag_140:\n      tag_41\n      jump\t// in\n    tag_138:\n      tag_39\n      jump\t// in\n    tag_136:\n      tag_38\n      jump\t// in\n    tag_134:\n      tag_37\n      jump\t// in\n    tag_132:\n      tag_36\n      jump\t// in\n    tag_130:\n      tag_35\n      jump\t// in\n    tag_128:\n      tag_34\n      jump\t// in\n    tag_126:\n      tag_33\n      jump\t// in\n    tag_124:\n      tag_30\n      jump\t// in\n    tag_122:\n      tag_29\n      jump\t// in\n    tag_120:\n      tag_28\n      jump\t// in\n    tag_118:\n      tag_27\n      jump\t// in\n    tag_116:\n      tag_26\n      jump\t// in\n    tag_114:\n      tag_25\n      jump\t// in\n    tag_112:\n      tag_24\n      jump\t// in\n    tag_110:\n      tag_20\n      jump\t// in\n    tag_108:\n      tag_18\n      jump\t// in\n    tag_106:\n      tag_17\n      jump\t// in\n    tag_104:\n      tag_16\n      jump\t// in\n    tag_102:\n      tag_15\n      jump\t// in\n    tag_100:\n      tag_14\n      jump\t// in\n    tag_98:\n      tag_12\n      jump\t// in\n    tag_96:\n      tag_7\n      jump\t// in\n    tag_94:\n      jumpi(tag_156, callvalue)\n      jumpi(tag_156, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      shl(0xe0, 0xffffffff)\n      dup2\n      and\n      dup1\n      swap2\n      sub\n      tag_156\n      jumpi\n      0x20\n      swap1\n      shl(0xe0, 0x7965db0b)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3551:3598  interfaceId == type(IAccessControl).interfaceId */\n      dup2\n      eq\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3551:3638  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup2\n      iszero\n      tag_158\n      jumpi\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n    tag_159:\n      pop\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3551:3638  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_158:\n      shl(0xe0, 0x01ffc9a7)\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1134:1174  interfaceId == type(IERC165).interfaceId */\n      eq\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3551:3638  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      codesize\n      jump(tag_159)\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n    tag_156:\n      0x00\n      dup1\n      revert\n    tag_7:\n      jumpi(tag_156, callvalue)\n      jumpi(tag_156, slt(add(not(0x03), calldatasize), 0x40))\n      calldataload(0x04)\n      calldataload(0x24)\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2466:2569  modifier nonReentrant() {... */\n      tag_166\n      tag_81\n      jump\t// in\n    tag_166:\n        /* \"contracts/DmtpTech.sol\":3399:3505  require(... */\n      tag_167\n        /* \"contracts/DmtpTech.sol\":3420:3447  allowToSellKey(seller, id_) */\n      tag_168\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      dup4\n      caller\n        /* \"contracts/DmtpTech.sol\":3420:3447  allowToSellKey(seller, id_) */\n      tag_68\n      jump\t// in\n    tag_168:\n        /* \"contracts/DmtpTech.sol\":3399:3505  require(... */\n      tag_49\n      jump\t// in\n    tag_167:\n        /* \"contracts/DmtpTech.sol\":3532:3535  key */\n      0x02\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sload\n        /* \"contracts/DmtpTech.sol\":3532:3547  key.sellPriceOf */\n      tag_169\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      and\n    tag_170:\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      jump\n        /* \"contracts/DmtpTech.sol\":3532:3547  key.sellPriceOf */\n    tag_169:\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe1, 0x54787371)\n        /* \"contracts/DmtpTech.sol\":3532:3552  key.sellPriceOf(id_) */\n      dup2\n      mstore\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x04\n        /* \"contracts/DmtpTech.sol\":3532:3552  key.sellPriceOf(id_) */\n      dup2\n      add\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      dup5\n      swap1\n      mstore\n      swap2\n      0x20\n      dup4\n      0x24\n      dup2\n        /* \"contracts/DmtpTech.sol\":3532:3552  key.sellPriceOf(id_) */\n      dup6\n      gas\n      staticcall\n      swap3\n      dup4\n      iszero\n      tag_205\n      jumpi\n      0x00\n      swap4\n      tag_174\n      jumpi\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n    tag_175:\n        /* \"contracts/DmtpTech.sol\":3570:3585  price_ == price */\n      pop\n      dup3\n        /* \"contracts/DmtpTech.sol\":3562:3613  require(price_ == price, \"DMTP_TECH_PRICE_CHANGED\") */\n      tag_176\n        /* \"contracts/DmtpTech.sol\":3570:3585  price_ == price */\n      swap2\n      eq\n        /* \"contracts/DmtpTech.sol\":3562:3613  require(price_ == price, \"DMTP_TECH_PRICE_CHANGED\") */\n      tag_52\n      jump\t// in\n    tag_176:\n        /* \"contracts/DmtpTech.sol\":3638:3683  (price * commission.rate) / A_HUNDRED_PERCENT */\n      tag_177\n        /* \"contracts/DmtpTech.sol\":3639:3662  price * commission.rate */\n      tag_178\n        /* \"contracts/DmtpTech.sol\":3647:3657  commission */\n      0x05\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sload\n        /* \"contracts/DmtpTech.sol\":3639:3662  price * commission.rate */\n      dup5\n      tag_54\n      jump\t// in\n    tag_178:\n        /* \"contracts/DmtpTech.sol\":510:516  10_000 */\n      0x2710\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      swap1\n      div\n      swap1\n      jump\n        /* \"contracts/DmtpTech.sol\":3638:3683  (price * commission.rate) / A_HUNDRED_PERCENT */\n    tag_177:\n        /* \"contracts/DmtpTech.sol\":3710:3721  price - fee */\n      swap1\n      tag_179\n      dup3\n      dup5\n      tag_56\n      jump\t// in\n    tag_179:\n        /* \"contracts/DmtpTech.sol\":3732:3756  key.burn(seller, id_, 1) */\n      dup2\n      extcodesize\n      iszero\n      tag_156\n      jumpi\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe1, 0x7a94c565)\n        /* \"contracts/DmtpTech.sol\":3732:3756  key.burn(seller, id_, 1) */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x04\n        /* \"contracts/DmtpTech.sol\":3732:3756  key.burn(seller, id_, 1) */\n      dup3\n      add\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      mstore\n      0x24\n      dup2\n      add\n      dup7\n      swap1\n      mstore\n        /* \"contracts/DmtpTech.sol\":3754:3755  1 */\n      0x01\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x44\n      dup3\n      add\n      mstore\n      swap2\n      0x00\n      swap1\n      dup4\n      swap1\n      0x64\n      swap1\n      dup3\n      swap1\n      dup5\n      swap1\n        /* \"contracts/DmtpTech.sol\":3732:3756  key.burn(seller, id_, 1) */\n      gas\n      call\n      swap2\n      dup3\n      iszero\n      tag_205\n      jumpi\n      0x00\n      swap3\n      dup4\n      swap3\n      dup4\n      swap3\n      dup4\n      swap3\n      tag_185\n      jumpi\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n    tag_186:\n        /* \"contracts/DmtpTech.sol\":3767:3799  payable(seller).transfer(payout) */\n      pop\n      dup2\n      dup2\n      iszero\n      tag_187\n      jumpi\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n    tag_188:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"contracts/DmtpTech.sol\":3767:3799  payable(seller).transfer(payout) */\n      swap1\n      call\n      iszero\n      tag_205\n      jumpi\n        /* \"contracts/DmtpTech.sol\":3836:3905  (price * commission.keyGeneratorRate) /... */\n      tag_191\n        /* \"contracts/DmtpTech.sol\":3837:3872  price * commission.keyGeneratorRate */\n      tag_178\n        /* \"contracts/DmtpTech.sol\":3845:3872  commission.keyGeneratorRate */\n      0x07\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sload\n        /* \"contracts/DmtpTech.sol\":3837:3872  price * commission.keyGeneratorRate */\n      dup5\n      tag_54\n      jump\t// in\n        /* \"contracts/DmtpTech.sol\":3836:3905  (price * commission.keyGeneratorRate) /... */\n    tag_191:\n        /* \"contracts/DmtpTech.sol\":3919:3938  keyGeneratorFee > 0 */\n      dup1\n      dup1\n      iszero\n      dup1\n      iszero\n        /* \"contracts/DmtpTech.sol\":3915:4018  if (keyGeneratorFee > 0) {... */\n      tag_193\n      jumpi\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n    tag_194:\n      pop\n      pop\n        /* \"contracts/DmtpTech.sol\":4032:4051  commission.receiver */\n      0x06\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"contracts/DmtpTech.sol\":4028:4152  if (commission.receiver != address(0)) {... */\n      tag_196\n      jumpi\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n    tag_197:\n      0x40\n      dup1\n      mload\n      dup7\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n      dup2\n      add\n      dup6\n      swap1\n      mstore\n        /* \"contracts/DmtpTech.sol\":4167:4194  KeySold(id_, seller, price) */\n      0x76bf686fc9ca17368677b445c3982fe5bdba241b5b1ec5a879739a52e1620376\n      swap1\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      dup1\n      0x60\n      dup2\n      add\n        /* \"contracts/DmtpTech.sol\":4167:4194  KeySold(id_, seller, price) */\n    tag_198:\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2531:2532  _ */\n      tag_199\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3089  _status = NOT_ENTERED */\n      0x00\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sstore\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2888:3096  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2531:2532  _ */\n    tag_199:\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      stop\n        /* \"contracts/DmtpTech.sol\":4028:4152  if (commission.receiver != address(0)) {... */\n    tag_196:\n      0x00\n      swap3\n      dup4\n      swap3\n      dup4\n      swap3\n      dup4\n      swap3\n        /* \"contracts/DmtpTech.sol\":4081:4109  payable(commission.receiver) */\n      swap2\n        /* \"contracts/DmtpTech.sol\":4119:4140  fee - keyGeneratorFee */\n      tag_200\n      swap2\n        /* \"contracts/DmtpTech.sol\":4081:4118  payable(commission.receiver).transfer */\n      tag_201\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      and\n        /* \"contracts/DmtpTech.sol\":4081:4109  payable(commission.receiver) */\n      tag_170\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      jump\n        /* \"contracts/DmtpTech.sol\":4081:4118  payable(commission.receiver).transfer */\n    tag_201:\n        /* \"contracts/DmtpTech.sol\":4119:4140  fee - keyGeneratorFee */\n      swap3\n      tag_56\n      jump\t// in\n    tag_200:\n        /* \"contracts/DmtpTech.sol\":4081:4141  payable(commission.receiver).transfer(fee - keyGeneratorFee) */\n      swap1\n      dup3\n      dup3\n      iszero\n      tag_203\n      jumpi\n        /* \"contracts/DmtpTech.sol\":4028:4152  if (commission.receiver != address(0)) {... */\n    tag_204:\n        /* \"contracts/DmtpTech.sol\":4081:4141  payable(commission.receiver).transfer(fee - keyGeneratorFee) */\n      call\n      iszero\n      tag_205\n      jumpi\n        /* \"contracts/DmtpTech.sol\":4028:4152  if (commission.receiver != address(0)) {... */\n      codesize\n      dup1\n      dup1\n      jump(tag_197)\n        /* \"contracts/DmtpTech.sol\":4081:4141  payable(commission.receiver).transfer(fee - keyGeneratorFee) */\n    tag_205:\n      tag_51\n      jump\t// in\n    tag_203:\n      pop\n      0x08fc\n      jump(tag_204)\n        /* \"contracts/DmtpTech.sol\":3915:4018  if (keyGeneratorFee > 0) {... */\n    tag_193:\n      0x00\n        /* \"contracts/DmtpTech.sol\":3962:3980  keyGenerators[id_] */\n      dup1\n      dup1\n      swap4\n      dup2\n      swap4\n        /* \"contracts/DmtpTech.sol\":3954:3990  payable(keyGenerators[id_]).transfer */\n      tag_207\n        /* \"contracts/DmtpTech.sol\":3954:3981  payable(keyGenerators[id_]) */\n      tag_170\n        /* \"contracts/DmtpTech.sol\":3962:3980  keyGenerators[id_] */\n      tag_170\n      tag_210\n      dup14\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x00\n      mstore\n        /* \"contracts/DmtpTech.sol\":3962:3975  keyGenerators */\n      0x08\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap1\n      jump\n        /* \"contracts/DmtpTech.sol\":3962:3980  keyGenerators[id_] */\n    tag_210:\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      jump\n        /* \"contracts/DmtpTech.sol\":3954:3990  payable(keyGenerators[id_]).transfer */\n    tag_207:\n        /* \"contracts/DmtpTech.sol\":3954:4007  payable(keyGenerators[id_]).transfer(keyGeneratorFee) */\n      swap1\n      dup4\n      swap1\n      tag_211\n      jumpi\n        /* \"contracts/DmtpTech.sol\":3915:4018  if (keyGeneratorFee > 0) {... */\n    tag_212:\n        /* \"contracts/DmtpTech.sol\":3954:4007  payable(keyGenerators[id_]).transfer(keyGeneratorFee) */\n      call\n      iszero\n      tag_205\n      jumpi\n        /* \"contracts/DmtpTech.sol\":3915:4018  if (keyGeneratorFee > 0) {... */\n      dup1\n      codesize\n      jump(tag_194)\n        /* \"contracts/DmtpTech.sol\":3954:4007  payable(keyGenerators[id_]).transfer(keyGeneratorFee) */\n    tag_211:\n      pop\n      0x08fc\n      jump(tag_212)\n        /* \"contracts/DmtpTech.sol\":3767:3799  payable(seller).transfer(payout) */\n    tag_187:\n      pop\n      0x08fc\n      jump(tag_188)\n        /* \"contracts/DmtpTech.sol\":3732:3756  key.burn(seller, id_, 1) */\n    tag_185:\n      dup1\n      tag_215\n      dup5\n      tag_216\n      swap4\n      tag_32\n      jump\t// in\n    tag_215:\n      dup1\n      tag_13\n      jump\t// in\n    tag_216:\n      codesize\n      jump(tag_186)\n        /* \"contracts/DmtpTech.sol\":3532:3552  key.sellPriceOf(id_) */\n    tag_174:\n        /* \"contracts/DmtpTech.sol\":3562:3613  require(price_ == price, \"DMTP_TECH_PRICE_CHANGED\") */\n      tag_176\n        /* \"contracts/DmtpTech.sol\":3532:3552  key.sellPriceOf(id_) */\n      swap2\n      swap4\n      pop\n      tag_217\n      swap1\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/DmtpTech.sol\":3532:3552  key.sellPriceOf(id_) */\n      returndatasize\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/DmtpTech.sol\":3532:3552  key.sellPriceOf(id_) */\n      gt\n      tag_218\n      jumpi\n    tag_219:\n      tag_220\n      dup2\n      dup4\n      tag_32\n      jump\t// in\n    tag_220:\n      dup2\n      add\n      swap1\n      tag_50\n      jump\t// in\n    tag_217:\n      swap3\n      swap1\n      jump(tag_175)\n    tag_218:\n      pop\n      returndatasize\n      jump(tag_219)\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n    tag_9:\n      calldataload(0x24)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_156\n      jumpi\n      jump\t// out\n    tag_10:\n      calldataload(0x04)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_156\n      jumpi\n      jump\t// out\n    tag_11:\n      calldataload(0x64)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_156\n      jumpi\n      jump\t// out\n    tag_12:\n      jumpi(tag_156, slt(add(not(0x03), calldatasize), 0x40))\n      calldataload(0x04)\n      tag_230\n      tag_9\n      jump\t// in\n    tag_230:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2466:2569  modifier nonReentrant() {... */\n      tag_231\n      tag_81\n      jump\t// in\n    tag_231:\n        /* \"contracts/DmtpTech.sol\":7203:7263  require(id_ <= _keyIdCounter, \"DMTP_TECH_PARAM_KEY_INVALID\") */\n      tag_232\n        /* \"contracts/DmtpTech.sol\":7218:7231  _keyIdCounter */\n      0x01\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sload\n        /* \"contracts/DmtpTech.sol\":7211:7231  id_ <= _keyIdCounter */\n      dup4\n      gt\n      iszero\n        /* \"contracts/DmtpTech.sol\":7203:7263  require(id_ <= _keyIdCounter, \"DMTP_TECH_PARAM_KEY_INVALID\") */\n      tag_58\n      jump\t// in\n    tag_232:\n        /* \"contracts/DmtpTech.sol\":7290:7293  key */\n      0x02\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sload\n        /* \"contracts/DmtpTech.sol\":7290:7301  key.priceOf */\n      tag_233\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      and\n      jump(tag_170)\n        /* \"contracts/DmtpTech.sol\":7290:7301  key.priceOf */\n    tag_233:\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe0, 0xb9186d7d)\n        /* \"contracts/DmtpTech.sol\":7290:7306  key.priceOf(id_) */\n      dup2\n      mstore\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x04\n        /* \"contracts/DmtpTech.sol\":7290:7306  key.priceOf(id_) */\n      dup2\n      add\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      dup5\n      swap1\n      mstore\n      swap3\n      swap1\n      0x20\n      dup5\n      0x24\n      dup2\n      dup5\n        /* \"contracts/DmtpTech.sol\":7290:7306  key.priceOf(id_) */\n      gas\n      staticcall\n      swap4\n      dup5\n      iszero\n      tag_205\n      jumpi\n      0x00\n      swap5\n      tag_238\n      jumpi\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n    tag_239:\n      pop\n        /* \"contracts/DmtpTech.sol\":7331:7376  (price * commission.rate) / A_HUNDRED_PERCENT */\n      tag_240\n        /* \"contracts/DmtpTech.sol\":7332:7355  price * commission.rate */\n      tag_178\n        /* \"contracts/DmtpTech.sol\":7340:7350  commission */\n      0x05\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sload\n        /* \"contracts/DmtpTech.sol\":7332:7355  price * commission.rate */\n      dup7\n      tag_54\n      jump\t// in\n        /* \"contracts/DmtpTech.sol\":7331:7376  (price * commission.rate) / A_HUNDRED_PERCENT */\n    tag_240:\n        /* \"contracts/DmtpTech.sol\":7403:7414  price + fee */\n      swap1\n        /* \"contracts/DmtpTech.sol\":7425:7480  require(msg.value == payout, \"DMTP_TECH_PRICE_CHANGED\") */\n      tag_242\n        /* \"contracts/DmtpTech.sol\":7403:7414  price + fee */\n      tag_243\n      dup4\n      dup8\n      tag_60\n      jump\t// in\n    tag_243:\n        /* \"contracts/DmtpTech.sol\":7433:7442  msg.value */\n      callvalue\n        /* \"contracts/DmtpTech.sol\":7433:7452  msg.value == payout */\n      eq\n        /* \"contracts/DmtpTech.sol\":7425:7480  require(msg.value == payout, \"DMTP_TECH_PRICE_CHANGED\") */\n      tag_52\n      jump\t// in\n    tag_242:\n        /* \"contracts/DmtpTech.sol\":7491:7522  key.mint(receiver_, id_, 1, \"\") */\n      dup1\n      extcodesize\n      iszero\n      tag_156\n      jumpi\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe0, 0x731133e9)\n        /* \"contracts/DmtpTech.sol\":7491:7522  key.mint(receiver_, id_, 1, \"\") */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      dup6\n      and\n      0x04\n        /* \"contracts/DmtpTech.sol\":7491:7522  key.mint(receiver_, id_, 1, \"\") */\n      dup3\n      add\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      mstore\n      0x24\n      dup2\n      add\n      dup5\n      swap1\n      mstore\n      0x01\n      0x44\n      dup3\n      add\n      mstore\n      0x80\n      0x64\n      dup3\n      add\n      mstore\n      0x00\n      0x84\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      swap1\n      swap2\n      dup3\n      swap1\n      0xa4\n      swap1\n      dup3\n      swap1\n      dup5\n      swap1\n        /* \"contracts/DmtpTech.sol\":7491:7522  key.mint(receiver_, id_, 1, \"\") */\n      gas\n      call\n      dup1\n      iszero\n      tag_205\n      jumpi\n      tag_249\n      jumpi\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n    tag_250:\n      pop\n        /* \"contracts/DmtpTech.sol\":7559:7628  (price * commission.keyGeneratorRate) /... */\n      tag_251\n        /* \"contracts/DmtpTech.sol\":7560:7595  price * commission.keyGeneratorRate */\n      tag_178\n        /* \"contracts/DmtpTech.sol\":7568:7595  commission.keyGeneratorRate */\n      0x07\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sload\n        /* \"contracts/DmtpTech.sol\":7560:7595  price * commission.keyGeneratorRate */\n      dup7\n      tag_54\n      jump\t// in\n        /* \"contracts/DmtpTech.sol\":7559:7628  (price * commission.keyGeneratorRate) /... */\n    tag_251:\n        /* \"contracts/DmtpTech.sol\":7642:7661  keyGeneratorFee > 0 */\n      dup1\n      dup1\n      iszero\n      dup1\n      iszero\n        /* \"contracts/DmtpTech.sol\":7638:7741  if (keyGeneratorFee > 0) {... */\n      tag_253\n      jumpi\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n    tag_254:\n      pop\n      pop\n        /* \"contracts/DmtpTech.sol\":7755:7774  commission.receiver */\n      0x06\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"contracts/DmtpTech.sol\":7751:7875  if (commission.receiver != address(0)) {... */\n      tag_256\n      jumpi\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n    tag_257:\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      swap3\n      dup4\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap4\n      and\n      0x20\n      dup4\n      add\n      mstore\n      pop\n      swap1\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/DmtpTech.sol\":7890:7922  KeyBought(id_, receiver_, price) */\n      0xced28ea7ef5f4276044389e457757e3f21ca4368040c3b864e3890bcd56a9988\n      swap1\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      dup1\n      0x60\n      dup2\n      add\n        /* \"contracts/DmtpTech.sol\":7890:7922  KeyBought(id_, receiver_, price) */\n      tag_198\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      jump\n        /* \"contracts/DmtpTech.sol\":7751:7875  if (commission.receiver != address(0)) {... */\n    tag_256:\n      0x00\n      swap3\n      dup4\n      swap3\n      dup4\n      swap3\n      dup4\n      swap3\n        /* \"contracts/DmtpTech.sol\":7804:7832  payable(commission.receiver) */\n      swap2\n        /* \"contracts/DmtpTech.sol\":7842:7863  fee - keyGeneratorFee */\n      tag_260\n      swap2\n        /* \"contracts/DmtpTech.sol\":7804:7841  payable(commission.receiver).transfer */\n      tag_201\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      and\n        /* \"contracts/DmtpTech.sol\":7804:7832  payable(commission.receiver) */\n      tag_170\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      jump\n        /* \"contracts/DmtpTech.sol\":7842:7863  fee - keyGeneratorFee */\n    tag_260:\n        /* \"contracts/DmtpTech.sol\":7804:7864  payable(commission.receiver).transfer(fee - keyGeneratorFee) */\n      swap1\n      dup3\n      dup3\n      iszero\n      tag_263\n      jumpi\n        /* \"contracts/DmtpTech.sol\":7751:7875  if (commission.receiver != address(0)) {... */\n    tag_264:\n        /* \"contracts/DmtpTech.sol\":7804:7864  payable(commission.receiver).transfer(fee - keyGeneratorFee) */\n      call\n      iszero\n      tag_205\n      jumpi\n        /* \"contracts/DmtpTech.sol\":7751:7875  if (commission.receiver != address(0)) {... */\n      codesize\n      dup1\n      dup1\n      jump(tag_257)\n        /* \"contracts/DmtpTech.sol\":7804:7864  payable(commission.receiver).transfer(fee - keyGeneratorFee) */\n    tag_263:\n      pop\n      0x08fc\n      jump(tag_264)\n        /* \"contracts/DmtpTech.sol\":7638:7741  if (keyGeneratorFee > 0) {... */\n    tag_253:\n      0x00\n        /* \"contracts/DmtpTech.sol\":7685:7703  keyGenerators[id_] */\n      dup1\n      dup1\n      swap4\n      dup2\n      swap4\n        /* \"contracts/DmtpTech.sol\":7677:7713  payable(keyGenerators[id_]).transfer */\n      tag_267\n        /* \"contracts/DmtpTech.sol\":7677:7704  payable(keyGenerators[id_]) */\n      tag_170\n        /* \"contracts/DmtpTech.sol\":7685:7703  keyGenerators[id_] */\n      tag_170\n      tag_210\n      dup13\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x00\n      mstore\n        /* \"contracts/DmtpTech.sol\":3962:3975  keyGenerators */\n      0x08\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap1\n      jump\n        /* \"contracts/DmtpTech.sol\":7677:7713  payable(keyGenerators[id_]).transfer */\n    tag_267:\n        /* \"contracts/DmtpTech.sol\":7677:7730  payable(keyGenerators[id_]).transfer(keyGeneratorFee) */\n      swap1\n      dup4\n      swap1\n      tag_271\n      jumpi\n        /* \"contracts/DmtpTech.sol\":7638:7741  if (keyGeneratorFee > 0) {... */\n    tag_272:\n        /* \"contracts/DmtpTech.sol\":7677:7730  payable(keyGenerators[id_]).transfer(keyGeneratorFee) */\n      call\n      iszero\n      tag_205\n      jumpi\n        /* \"contracts/DmtpTech.sol\":7638:7741  if (keyGeneratorFee > 0) {... */\n      dup1\n      codesize\n      jump(tag_254)\n        /* \"contracts/DmtpTech.sol\":7677:7730  payable(keyGenerators[id_]).transfer(keyGeneratorFee) */\n    tag_271:\n      pop\n      0x08fc\n      jump(tag_272)\n        /* \"contracts/DmtpTech.sol\":7491:7522  key.mint(receiver_, id_, 1, \"\") */\n    tag_249:\n      dup1\n      tag_215\n      0x00\n      tag_276\n      swap4\n      tag_32\n      jump\t// in\n    tag_276:\n      codesize\n      jump(tag_250)\n        /* \"contracts/DmtpTech.sol\":7290:7306  key.priceOf(id_) */\n    tag_238:\n      tag_277\n      swap2\n      swap5\n      pop\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/DmtpTech.sol\":7290:7306  key.priceOf(id_) */\n      returndatasize\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/DmtpTech.sol\":7290:7306  key.priceOf(id_) */\n      gt\n      tag_218\n      jumpi\n      tag_220\n      dup2\n      dup4\n      tag_32\n      jump\t// in\n    tag_277:\n      swap3\n      codesize\n      jump(tag_239)\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n    tag_13:\n      0x00\n      swap2\n      sub\n      slt\n      tag_156\n      jumpi\n      jump\t// out\n    tag_14:\n      jumpi(tag_156, callvalue)\n      jumpi(tag_156, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"contracts/DmtpTech.sol\":1082:1103  address public signer */\n      0x03\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_15:\n      jumpi(tag_156, callvalue)\n      jumpi(tag_156, slt(add(not(0x03), calldatasize), 0x20))\n      0x20\n      tag_291\n      calldataload(0x04)\n      tag_62\n      jump\t// in\n    tag_291:\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_16:\n      jumpi(tag_156, callvalue)\n      jumpi(tag_156, slt(add(not(0x03), calldatasize), 0x40))\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5350:5375  _grantRole(role, account) */\n      tag_199\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      calldataload(0x04)\n      tag_297\n      tag_9\n      jump\t// in\n    tag_297:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5320:5338  getRoleAdmin(role) */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      tag_298\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5320:5338  getRoleAdmin(role) */\n      tag_299\n      dup3\n      tag_62\n      jump\t// in\n    tag_299:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      tag_84\n      jump\t// in\n    tag_298:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5350:5375  _grantRole(role, account) */\n      tag_87\n      jump\t// in\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n    tag_17:\n      jumpi(tag_156, callvalue)\n      jumpi(tag_156, slt(add(not(0x03), calldatasize), 0x40))\n      calldataload(0x04)\n      tag_304\n      tag_9\n      jump\t// in\n    tag_304:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6441:6475  callerConfirmation != _msgSender() */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6437:6539  if (callerConfirmation != _msgSender()) {... */\n      tag_305\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6586  _revokeRole(role, callerConfirmation) */\n      tag_199\n      swap2\n      tag_88\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6437:6539  if (callerConfirmation != _msgSender()) {... */\n    tag_305:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6498:6528  AccessControlBadConfirmation() */\n      mstore(0x00, shl(0xe1, 0x334bd919))\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6498:6528  AccessControlBadConfirmation() */\n      revert\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n    tag_18:\n      jumpi(tag_156, callvalue)\n      jumpi(tag_156, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"contracts/DmtpTech.sol\":1061:1076  IKey public key */\n      0x02\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_20:\n      jumpi(tag_156, callvalue)\n      jumpi(tag_156, slt(add(not(0x03), calldatasize), 0x20))\n        /* \"contracts/DmtpTech.sol\":5682:5685  key */\n      0x02\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      shl(0xe0, 0xb9186d7d)\n        /* \"contracts/DmtpTech.sol\":5682:5698  key.priceOf(id_) */\n      dup2\n      mstore\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x04\n      dup1\n      calldataload\n        /* \"contracts/DmtpTech.sol\":5682:5698  key.priceOf(id_) */\n      swap1\n      dup3\n      add\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      mstore\n      swap1\n      0x20\n      swap1\n      dup3\n      swap1\n        /* \"contracts/DmtpTech.sol\":5682:5698  key.priceOf(id_) */\n      0x24\n      swap1\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      dup3\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/DmtpTech.sol\":5682:5698  key.priceOf(id_) */\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_205\n      jumpi\n      0x00\n      swap2\n      tag_319\n      jumpi\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n    tag_320:\n      pop\n        /* \"contracts/DmtpTech.sol\":510:516  10_000 */\n      0x2710\n        /* \"contracts/DmtpTech.sol\":5715:5738  price * commission.rate */\n      tag_321\n        /* \"contracts/DmtpTech.sol\":5723:5733  commission */\n      0x05\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sload\n        /* \"contracts/DmtpTech.sol\":5715:5738  price * commission.rate */\n      dup4\n      tag_54\n      jump\t// in\n    tag_321:\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      div\n        /* \"contracts/DmtpTech.sol\":5778:5789  price + fee */\n      swap1\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      tag_322\n        /* \"contracts/DmtpTech.sol\":5778:5789  price + fee */\n      tag_323\n      dup4\n      dup4\n      tag_60\n      jump\t// in\n    tag_323:\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      mload(0x40)\n      swap4\n      dup5\n      swap4\n      dup5\n      0x40\n      swap2\n      swap5\n      swap4\n      swap3\n      0x60\n      dup3\n      add\n      swap6\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      add\n      mstore\n      jump\n    tag_322:\n      sub\n      swap1\n      return\n        /* \"contracts/DmtpTech.sol\":5682:5698  key.priceOf(id_) */\n    tag_319:\n      tag_324\n      swap2\n      pop\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/DmtpTech.sol\":5682:5698  key.priceOf(id_) */\n      returndatasize\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/DmtpTech.sol\":5682:5698  key.priceOf(id_) */\n      gt\n      tag_218\n      jumpi\n      tag_220\n      dup2\n      dup4\n      tag_32\n      jump\t// in\n    tag_324:\n      codesize\n      jump(tag_320)\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n    tag_24:\n      jumpi(tag_156, callvalue)\n      jumpi(tag_156, slt(add(not(0x03), calldatasize), 0x20))\n      sub(shl(0xa0, 0x01), 0x01)\n      tag_332\n      tag_10\n      jump\t// in\n    tag_332:\n      and\n      0x00\n      mstore\n      mstore(0x20, 0x04)\n      0x20\n      sload(keccak256(0x00, 0x40))\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_25:\n      jumpi(tag_156, callvalue)\n      jumpi(tag_156, slt(add(not(0x03), calldatasize), 0x20))\n        /* \"contracts/DmtpTech.sol\":5984:5987  key */\n      0x02\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      shl(0xe1, 0x54787371)\n        /* \"contracts/DmtpTech.sol\":5984:6004  key.sellPriceOf(id_) */\n      dup2\n      mstore\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x04\n      dup1\n      calldataload\n        /* \"contracts/DmtpTech.sol\":5984:6004  key.sellPriceOf(id_) */\n      swap1\n      dup3\n      add\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      mstore\n      swap1\n      0x20\n      swap1\n      dup3\n      swap1\n        /* \"contracts/DmtpTech.sol\":5984:6004  key.sellPriceOf(id_) */\n      0x24\n      swap1\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      dup3\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/DmtpTech.sol\":5984:6004  key.sellPriceOf(id_) */\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_205\n      jumpi\n      0x00\n      swap2\n      tag_340\n      jumpi\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n    tag_341:\n      pop\n        /* \"contracts/DmtpTech.sol\":510:516  10_000 */\n      0x2710\n        /* \"contracts/DmtpTech.sol\":6021:6044  price * commission.rate */\n      tag_342\n        /* \"contracts/DmtpTech.sol\":6029:6039  commission */\n      0x05\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sload\n        /* \"contracts/DmtpTech.sol\":6021:6044  price * commission.rate */\n      dup4\n      tag_54\n      jump\t// in\n    tag_342:\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      div\n        /* \"contracts/DmtpTech.sol\":6084:6095  price - fee */\n      swap1\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      tag_322\n        /* \"contracts/DmtpTech.sol\":6084:6095  price - fee */\n      tag_323\n      dup4\n      dup4\n      tag_56\n      jump\t// in\n        /* \"contracts/DmtpTech.sol\":5984:6004  key.sellPriceOf(id_) */\n    tag_340:\n      tag_345\n      swap2\n      pop\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/DmtpTech.sol\":5984:6004  key.sellPriceOf(id_) */\n      returndatasize\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/DmtpTech.sol\":5984:6004  key.sellPriceOf(id_) */\n      gt\n      tag_218\n      jumpi\n      tag_220\n      dup2\n      dup4\n      tag_32\n      jump\t// in\n    tag_345:\n      codesize\n      jump(tag_341)\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n    tag_26:\n      jumpi(tag_156, callvalue)\n      jumpi(tag_156, slt(add(not(0x03), calldatasize), 0x20))\n        /* \"contracts/DmtpTech.sol\":2443:2461  SignerSet(signer_) */\n      0x9eaa897564d022fb8c5efaf0acdb5d9d27b440b2aad44400b6e1c702e65b9ed3\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x20\n      tag_353\n      tag_10\n      jump\t// in\n    tag_353:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      tag_354\n      tag_83\n      jump\t// in\n    tag_354:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      and\n        /* \"contracts/DmtpTech.sol\":2335:2400  require(signer_ != address(0), \"DMTP_TECH_PARAM_ADDRESS_INVALID\") */\n      tag_355\n        /* \"contracts/DmtpTech.sol\":2343:2364  signer_ != address(0) */\n      dup2\n      iszero\n      iszero\n        /* \"contracts/DmtpTech.sol\":2335:2400  require(signer_ != address(0), \"DMTP_TECH_PARAM_ADDRESS_INVALID\") */\n      tag_63\n      jump\t// in\n    tag_355:\n        /* \"contracts/DmtpTech.sol\":2411:2427  signer = signer_ */\n      0x03\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      dup3\n      or\n      swap1\n      sstore\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DmtpTech.sol\":2443:2461  SignerSet(signer_) */\n      log1\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      stop\n    tag_27:\n      jumpi(tag_156, callvalue)\n      jumpi(tag_156, slt(add(not(0x03), calldatasize), 0x60))\n        /* \"contracts/DmtpTech.sol\":5474:5528  CommissionUpdated(rate_, receiver_, keyGeneratorRate_) */\n      0x827988aa1b695ab4719b95a49399fb75159954cc25d5b37c53cf23e8a6a58d36\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      calldataload(0x04)\n      tag_360\n      tag_9\n      jump\t// in\n    tag_360:\n      swap1\n        /* \"contracts/DmtpTech.sol\":5474:5528  CommissionUpdated(rate_, receiver_, keyGeneratorRate_) */\n      tag_361\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      calldataload(0x44)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      tag_362\n      tag_83\n      jump\t// in\n    tag_362:\n        /* \"contracts/DmtpTech.sol\":5337:5356  commission.receiver */\n      0x06\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap6\n      swap1\n      swap6\n      and\n      swap5\n      dup6\n      or\n      swap1\n      sstore\n        /* \"contracts/DmtpTech.sol\":5337:5347  commission */\n      0x05\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/DmtpTech.sol\":5411:5438  commission.keyGeneratorRate */\n      0x07\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      dup2\n      swap1\n      sstore\n      0x40\n      dup1\n      mload\n      swap4\n      dup5\n      mstore\n      0x20\n      dup5\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n      swap3\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      swap1\n      dup2\n      swap1\n      0x60\n      dup3\n      add\n      swap1\n      jump\n        /* \"contracts/DmtpTech.sol\":5474:5528  CommissionUpdated(rate_, receiver_, keyGeneratorRate_) */\n    tag_361:\n      sub\n      swap1\n      log1\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      stop\n    tag_28:\n      jumpi(tag_156, callvalue)\n      jumpi(tag_156, slt(add(not(0x03), calldatasize), 0x20))\n        /* \"contracts/DmtpTech.sol\":5143:5167  KeyContractUpdated(key_) */\n      0x9c421f75c1b2cd6cdf5bd68ae0986ad4518d273a5c59745ac6454392b0b709a5\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x20\n      tag_367\n      tag_10\n      jump\t// in\n    tag_367:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      tag_368\n      tag_83\n      jump\t// in\n    tag_368:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      and\n        /* \"contracts/DmtpTech.sol\":5038:5100  require(key_ != address(0), \"DMTP_TECH_PARAM_ADDRESS_INVALID\") */\n      tag_369\n        /* \"contracts/DmtpTech.sol\":5046:5064  key_ != address(0) */\n      dup2\n      iszero\n      iszero\n        /* \"contracts/DmtpTech.sol\":5038:5100  require(key_ != address(0), \"DMTP_TECH_PARAM_ADDRESS_INVALID\") */\n      tag_63\n      jump\t// in\n    tag_369:\n        /* \"contracts/DmtpTech.sol\":5111:5127  key = IKey(key_) */\n      0x02\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      dup3\n      or\n      swap1\n      sstore\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DmtpTech.sol\":5143:5167  KeyContractUpdated(key_) */\n      log1\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      stop\n    tag_29:\n      jumpi(tag_156, callvalue)\n      jumpi(tag_156, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/DmtpTech.sol\":510:516  10_000 */\n      0x2710\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_30:\n      jumpi(tag_156, callvalue)\n      jumpi(tag_156, slt(add(not(0x03), calldatasize), 0x40))\n      0x20\n      tag_378\n      tag_379\n      tag_10\n      jump\t// in\n    tag_379:\n      calldataload(0x24)\n      swap1\n      tag_68\n      jump\t// in\n    tag_378:\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_31:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_32:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_380\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_380:\n      tag_31\n      jump\t// in\n    tag_33:\n      jumpi(tag_156, callvalue)\n      jumpi(tag_156, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_156\n      jumpi\n      calldatasize\n      0x23\n      dup3\n      add\n      slt\n      iszero\n      tag_156\n      jumpi\n      dup1\n      0x04\n      add\n      calldataload\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_380\n      jumpi\n      mload(0x40)\n      swap1\n      tag_392\n      0x1f\n      dup3\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup4\n      tag_32\n      jump\t// in\n    tag_392:\n      dup1\n      dup3\n      mstore\n      calldatasize\n      0x24\n      dup3\n      dup6\n      add\n      add\n      gt\n      tag_156\n      jumpi\n      0x20\n      dup2\n      0x00\n      swap3\n      0x24\n        /* \"contracts/DmtpTech.sol\":4207:4951  function generateKey(bytes memory signature_) external nonReentrant {... */\n      tag_199\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      swap7\n      add\n      dup4\n      dup7\n      add\n      calldatacopy\n      dup4\n      add\n      add\n      mstore\n        /* \"contracts/DmtpTech.sol\":4207:4951  function generateKey(bytes memory signature_) external nonReentrant {... */\n      tag_69\n      jump\t// in\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n    tag_34:\n      jumpi(tag_156, callvalue)\n      jumpi(tag_156, slt(add(not(0x03), calldatasize), 0x40))\n        /* \"contracts/DmtpTech.sol\":6467:6499  keyGenerators[keyId_] = account_ */\n      tag_199\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      calldataload(0x04)\n      tag_401\n      tag_9\n      jump\t// in\n    tag_401:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      swap1\n      tag_402\n      tag_83\n      jump\t// in\n    tag_402:\n        /* \"contracts/DmtpTech.sol\":6290:6300  keyId_ > 0 */\n      dup1\n      iszero\n      iszero\n        /* \"contracts/DmtpTech.sol\":6290:6327  keyId_ > 0 && keyId_ <= _keyIdCounter */\n      dup1\n      tag_403\n      jumpi\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n    tag_404:\n        /* \"contracts/DmtpTech.sol\":6269:6380  require(... */\n      tag_405\n      swap1\n      tag_58\n      jump\t// in\n    tag_405:\n        /* \"contracts/DmtpTech.sol\":6390:6456  require(account_ != address(0), \"DMTP_TECH_PARAM_ADDRESS_INVALID\") */\n      tag_406\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      dup4\n      and\n        /* \"contracts/DmtpTech.sol\":6398:6420  account_ != address(0) */\n      iszero\n      iszero\n        /* \"contracts/DmtpTech.sol\":6390:6456  require(account_ != address(0), \"DMTP_TECH_PARAM_ADDRESS_INVALID\") */\n      tag_63\n      jump\t// in\n    tag_406:\n      0x00\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      mstore\n        /* \"contracts/DmtpTech.sol\":6467:6480  keyGenerators */\n      0x08\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap1\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      shl(0xa0, sub(shl(0x60, 0x01), 0x01))\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n      jump\n        /* \"contracts/DmtpTech.sol\":6290:6327  keyId_ > 0 && keyId_ <= _keyIdCounter */\n    tag_403:\n      pop\n        /* \"contracts/DmtpTech.sol\":6314:6327  _keyIdCounter */\n      0x01\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sload\n        /* \"contracts/DmtpTech.sol\":6304:6327  keyId_ <= _keyIdCounter */\n      dup2\n      gt\n      iszero\n        /* \"contracts/DmtpTech.sol\":6290:6327  keyId_ > 0 && keyId_ <= _keyIdCounter */\n      jump(tag_404)\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n    tag_35:\n      jumpi(tag_156, callvalue)\n      jumpi(tag_156, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      0xff\n        /* \"contracts/DmtpTech.sol\":1249:1281  bool public needToCheckWhitelist */\n      0x09\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sload\n      and\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_36:\n      jumpi(tag_156, callvalue)\n      jumpi(tag_156, slt(add(not(0x03), calldatasize), 0x40))\n      0x20\n      0xff\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3932  $._roles[role].hasRole[account] */\n      tag_415\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      calldataload(0x04)\n      tag_416\n      tag_9\n      jump\t// in\n    tag_416:\n      swap1\n      0x00\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      dup5\n      mstore\n      keccak256(0x00, 0x40)\n      swap1\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap1\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3932  $._roles[role].hasRole[account] */\n    tag_415:\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sload\n      and\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_37:\n      jumpi(tag_156, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2466:2569  modifier nonReentrant() {... */\n      tag_420\n      tag_81\n      jump\t// in\n    tag_420:\n        /* \"contracts/DmtpTech.sol\":2543:2603  require(id_ <= _keyIdCounter, \"DMTP_TECH_PARAM_KEY_INVALID\") */\n      tag_421\n        /* \"contracts/DmtpTech.sol\":2558:2571  _keyIdCounter */\n      0x01\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sload\n        /* \"contracts/DmtpTech.sol\":2551:2571  id_ <= _keyIdCounter */\n      dup3\n      gt\n      iszero\n        /* \"contracts/DmtpTech.sol\":2543:2603  require(id_ <= _keyIdCounter, \"DMTP_TECH_PARAM_KEY_INVALID\") */\n      tag_58\n      jump\t// in\n    tag_421:\n        /* \"contracts/DmtpTech.sol\":2630:2633  key */\n      0x02\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sload\n        /* \"contracts/DmtpTech.sol\":2630:2641  key.priceOf */\n      tag_422\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      and\n      jump(tag_170)\n        /* \"contracts/DmtpTech.sol\":2630:2641  key.priceOf */\n    tag_422:\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe0, 0xb9186d7d)\n        /* \"contracts/DmtpTech.sol\":2630:2646  key.priceOf(id_) */\n      dup2\n      mstore\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x04\n        /* \"contracts/DmtpTech.sol\":2630:2646  key.priceOf(id_) */\n      dup2\n      add\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      dup4\n      swap1\n      mstore\n      swap1\n      0x20\n      dup3\n      0x24\n      dup2\n      dup5\n        /* \"contracts/DmtpTech.sol\":2630:2646  key.priceOf(id_) */\n      gas\n      staticcall\n      swap2\n      dup3\n      iszero\n      tag_205\n      jumpi\n      0x00\n      swap3\n      tag_427\n      jumpi\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n    tag_428:\n      pop\n        /* \"contracts/DmtpTech.sol\":2671:2716  (price * commission.rate) / A_HUNDRED_PERCENT */\n      tag_429\n        /* \"contracts/DmtpTech.sol\":2672:2695  price * commission.rate */\n      tag_178\n        /* \"contracts/DmtpTech.sol\":2680:2690  commission */\n      0x05\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sload\n        /* \"contracts/DmtpTech.sol\":2672:2695  price * commission.rate */\n      dup5\n      tag_54\n      jump\t// in\n        /* \"contracts/DmtpTech.sol\":2671:2716  (price * commission.rate) / A_HUNDRED_PERCENT */\n    tag_429:\n        /* \"contracts/DmtpTech.sol\":2743:2754  price + fee */\n      swap1\n        /* \"contracts/DmtpTech.sol\":2765:2820  require(msg.value == payout, \"DMTP_TECH_PRICE_CHANGED\") */\n      tag_431\n        /* \"contracts/DmtpTech.sol\":2743:2754  price + fee */\n      tag_243\n      dup4\n      dup6\n      tag_60\n      jump\t// in\n        /* \"contracts/DmtpTech.sol\":2765:2820  require(msg.value == payout, \"DMTP_TECH_PRICE_CHANGED\") */\n    tag_431:\n        /* \"contracts/DmtpTech.sol\":2831:2865  key.mint(_msgSender(), id_, 1, \"\") */\n      dup1\n      extcodesize\n      iszero\n      tag_156\n      jumpi\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe0, 0x731133e9)\n        /* \"contracts/DmtpTech.sol\":2831:2865  key.mint(_msgSender(), id_, 1, \"\") */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x04\n        /* \"contracts/DmtpTech.sol\":2831:2865  key.mint(_msgSender(), id_, 1, \"\") */\n      dup3\n      add\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      mstore\n      0x24\n      dup2\n      add\n      dup6\n      swap1\n      mstore\n      0x01\n      0x44\n      dup3\n      add\n      mstore\n      0x80\n      0x64\n      dup3\n      add\n      mstore\n      0x00\n      0x84\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      swap1\n      swap2\n      dup3\n      swap1\n      0xa4\n      swap1\n      dup3\n      swap1\n      dup5\n      swap1\n        /* \"contracts/DmtpTech.sol\":2831:2865  key.mint(_msgSender(), id_, 1, \"\") */\n      gas\n      call\n      dup1\n      iszero\n      tag_205\n      jumpi\n      tag_438\n      jumpi\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n    tag_439:\n      pop\n        /* \"contracts/DmtpTech.sol\":2902:2971  (price * commission.keyGeneratorRate) /... */\n      tag_440\n        /* \"contracts/DmtpTech.sol\":2903:2938  price * commission.keyGeneratorRate */\n      tag_178\n        /* \"contracts/DmtpTech.sol\":2911:2938  commission.keyGeneratorRate */\n      0x07\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sload\n        /* \"contracts/DmtpTech.sol\":2903:2938  price * commission.keyGeneratorRate */\n      dup5\n      tag_54\n      jump\t// in\n        /* \"contracts/DmtpTech.sol\":2902:2971  (price * commission.keyGeneratorRate) /... */\n    tag_440:\n        /* \"contracts/DmtpTech.sol\":2985:3004  keyGeneratorFee > 0 */\n      dup1\n      dup1\n      iszero\n      dup1\n      iszero\n        /* \"contracts/DmtpTech.sol\":2981:3084  if (keyGeneratorFee > 0) {... */\n      tag_442\n      jumpi\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n    tag_443:\n      pop\n      pop\n        /* \"contracts/DmtpTech.sol\":3098:3117  commission.receiver */\n      0x06\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"contracts/DmtpTech.sol\":3094:3218  if (commission.receiver != address(0)) {... */\n      tag_445\n      jumpi\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n    tag_446:\n      0x40\n      dup1\n      mload\n      dup7\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n      dup2\n      add\n      dup6\n      swap1\n      mstore\n        /* \"contracts/DmtpTech.sol\":3233:3268  KeyBought(id_, _msgSender(), price) */\n      0xced28ea7ef5f4276044389e457757e3f21ca4368040c3b864e3890bcd56a9988\n      swap1\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      dup1\n      0x60\n      dup2\n      add\n        /* \"contracts/DmtpTech.sol\":3233:3268  KeyBought(id_, _msgSender(), price) */\n      tag_198\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      jump\n        /* \"contracts/DmtpTech.sol\":3094:3218  if (commission.receiver != address(0)) {... */\n    tag_445:\n      0x00\n      swap3\n      dup4\n      swap3\n      dup4\n      swap3\n      dup4\n      swap3\n        /* \"contracts/DmtpTech.sol\":3147:3175  payable(commission.receiver) */\n      swap2\n        /* \"contracts/DmtpTech.sol\":3185:3206  fee - keyGeneratorFee */\n      tag_449\n      swap2\n        /* \"contracts/DmtpTech.sol\":3147:3184  payable(commission.receiver).transfer */\n      tag_201\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      and\n        /* \"contracts/DmtpTech.sol\":3147:3175  payable(commission.receiver) */\n      tag_170\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      jump\n        /* \"contracts/DmtpTech.sol\":3185:3206  fee - keyGeneratorFee */\n    tag_449:\n        /* \"contracts/DmtpTech.sol\":3147:3207  payable(commission.receiver).transfer(fee - keyGeneratorFee) */\n      swap1\n      dup3\n      dup3\n      iszero\n      tag_452\n      jumpi\n        /* \"contracts/DmtpTech.sol\":3094:3218  if (commission.receiver != address(0)) {... */\n    tag_453:\n        /* \"contracts/DmtpTech.sol\":3147:3207  payable(commission.receiver).transfer(fee - keyGeneratorFee) */\n      call\n      iszero\n      tag_205\n      jumpi\n        /* \"contracts/DmtpTech.sol\":3094:3218  if (commission.receiver != address(0)) {... */\n      codesize\n      dup1\n      dup1\n      jump(tag_446)\n        /* \"contracts/DmtpTech.sol\":3147:3207  payable(commission.receiver).transfer(fee - keyGeneratorFee) */\n    tag_452:\n      pop\n      0x08fc\n      jump(tag_453)\n        /* \"contracts/DmtpTech.sol\":2981:3084  if (keyGeneratorFee > 0) {... */\n    tag_442:\n      0x00\n        /* \"contracts/DmtpTech.sol\":3028:3046  keyGenerators[id_] */\n      dup1\n      dup1\n      swap4\n      dup2\n      swap4\n        /* \"contracts/DmtpTech.sol\":3020:3056  payable(keyGenerators[id_]).transfer */\n      tag_456\n        /* \"contracts/DmtpTech.sol\":3020:3047  payable(keyGenerators[id_]) */\n      tag_170\n        /* \"contracts/DmtpTech.sol\":3028:3046  keyGenerators[id_] */\n      tag_170\n      tag_210\n      dup14\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x00\n      mstore\n        /* \"contracts/DmtpTech.sol\":3962:3975  keyGenerators */\n      0x08\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap1\n      jump\n        /* \"contracts/DmtpTech.sol\":3020:3056  payable(keyGenerators[id_]).transfer */\n    tag_456:\n        /* \"contracts/DmtpTech.sol\":3020:3073  payable(keyGenerators[id_]).transfer(keyGeneratorFee) */\n      swap1\n      dup4\n      swap1\n      tag_460\n      jumpi\n        /* \"contracts/DmtpTech.sol\":2981:3084  if (keyGeneratorFee > 0) {... */\n    tag_461:\n        /* \"contracts/DmtpTech.sol\":3020:3073  payable(keyGenerators[id_]).transfer(keyGeneratorFee) */\n      call\n      iszero\n      tag_205\n      jumpi\n        /* \"contracts/DmtpTech.sol\":2981:3084  if (keyGeneratorFee > 0) {... */\n      dup1\n      codesize\n      jump(tag_443)\n        /* \"contracts/DmtpTech.sol\":3020:3073  payable(keyGenerators[id_]).transfer(keyGeneratorFee) */\n    tag_460:\n      pop\n      0x08fc\n      jump(tag_461)\n        /* \"contracts/DmtpTech.sol\":2831:2865  key.mint(_msgSender(), id_, 1, \"\") */\n    tag_438:\n      dup1\n      tag_215\n      0x00\n      tag_465\n      swap4\n      tag_32\n      jump\t// in\n    tag_465:\n      codesize\n      jump(tag_439)\n        /* \"contracts/DmtpTech.sol\":2630:2646  key.priceOf(id_) */\n    tag_427:\n      tag_466\n      swap2\n      swap3\n      pop\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/DmtpTech.sol\":2630:2646  key.priceOf(id_) */\n      returndatasize\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/DmtpTech.sol\":2630:2646  key.priceOf(id_) */\n      gt\n      tag_218\n      jumpi\n      tag_220\n      dup2\n      dup4\n      tag_32\n      jump\t// in\n    tag_466:\n      swap1\n      codesize\n      jump(tag_428)\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n    tag_38:\n      jumpi(tag_156, callvalue)\n      jumpi(tag_156, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      return\n    tag_39:\n      jumpi(tag_156, callvalue)\n      jumpi(tag_156, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      dup1\n      iszero\n      dup1\n      iszero\n      dup1\n      swap3\n      sub\n      tag_156\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      tag_480\n      tag_83\n      jump\t// in\n    tag_480:\n        /* \"contracts/DmtpTech.sol\":6987:7007  needToCheckWhitelist */\n      0x09\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sload\n      swap2\n      0xff\n      dup4\n      and\n      iszero\n      iszero\n        /* \"contracts/DmtpTech.sol\":6977:7007  check_ != needToCheckWhitelist */\n      eq\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      tag_481\n      jumpi\n      0xff\n      and\n      swap1\n      not(0xff)\n      and\n      or\n        /* \"contracts/DmtpTech.sol\":6987:7007  needToCheckWhitelist */\n      0x09\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sstore\n      0x00\n      dup1\n      return\n    tag_481:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x18\n      0x24\n      dup3\n      add\n      mstore\n      0x444d54505f544543485f434f4e4649475f4841535f5345540000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_41:\n      jumpi(tag_156, callvalue)\n      jumpi(tag_156, slt(add(not(0x03), calldatasize), 0x20))\n      mstore(0x00, calldataload(0x04))\n        /* \"contracts/DmtpTech.sol\":1195:1243  mapping(uint256 => address) public keyGenerators */\n      0x08\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x20\n      mstore\n      0x20\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      sload(keccak256(0x00, 0x40))\n      and\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_42:\n      jumpi(tag_156, callvalue)\n      jumpi(tag_156, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"abstract/AbstractRole.sol\":311:335  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_43:\n      jumpi(tag_156, callvalue)\n      jumpi(tag_156, slt(add(not(0x03), calldatasize), 0x40))\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5767:5793  _revokeRole(role, account) */\n      tag_199\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      calldataload(0x04)\n      tag_496\n      tag_9\n      jump\t// in\n    tag_496:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5737:5755  getRoleAdmin(role) */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      tag_497\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5737:5755  getRoleAdmin(role) */\n      tag_299\n      dup3\n      tag_62\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n    tag_497:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5767:5793  _revokeRole(role, account) */\n      tag_88\n      jump\t// in\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n    tag_46:\n      jumpi(tag_156, callvalue)\n      jumpi(tag_156, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"contracts/DmtpTech.sol\":1160:1188  Commission public commission */\n      0x05\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sload\n        /* \"contracts/DmtpTech.sol\":1160:1188  Commission public commission */\n      0x06\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sload\n        /* \"contracts/DmtpTech.sol\":1160:1188  Commission public commission */\n      0x07\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sload\n      0x40\n      dup1\n      mload\n      swap4\n      dup5\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      0x20\n      dup5\n      add\n      mstore\n      swap1\n      dup3\n      add\n      mstore\n      0x60\n      swap1\n      return\n    tag_47:\n      jumpi(tag_156, callvalue)\n      jumpi(tag_156, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"abstract/AbstractRole.sol\":243:269  keccak256(\"OPERATOR_ROLE\") */\n      0x97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_48:\n      jumpi(tag_156, callvalue)\n      jumpi(tag_156, slt(add(not(0x03), calldatasize), 0xa0))\n      tag_512\n      tag_10\n      jump\t// in\n    tag_512:\n      tag_513\n      tag_9\n      jump\t// in\n    tag_513:\n      swap1\n      calldataload(0x44)\n      tag_515\n      tag_11\n      jump\t// in\n    tag_515:\n      calldataload(0x84)\n      swap2\n      0x00\n      dup1\n      mload\n      0x20\n      data_e28a5566b8a884201ab44e2d991177ce8b88325e02e52cbc3da6e67b3ecf29c6\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      sload\n      swap5\n      0xffffffffffffffff\n      tag_517\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      tag_518\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      tag_519\n      dup10\n      0xff\n      swap1\n      0x40\n      shr\n      and\n      swap1\n      jump\n    tag_519:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n      swap1\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n    tag_518:\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      swap8\n      0xffffffffffffffff\n      and\n      swap1\n      jump\n    tag_517:\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      dup1\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      swap1\n      dup2\n      tag_520\n      jumpi\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n    tag_521:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      swap1\n      dup2\n      tag_522\n      jumpi\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n    tag_523:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      swap1\n      dup2\n      tag_524\n      jumpi\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n    tag_525:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      pop\n      tag_526\n      jumpi\n        /* \"contracts/DmtpTech.sol\":2206:2233  commissionKeyGeneratorRate_ */\n      tag_528\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      swap5\n      dup7\n      tag_529\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x01\n      not(0xffffffffffffffff)\n      0x00\n      dup1\n      mload\n      0x20\n      data_e28a5566b8a884201ab44e2d991177ce8b88325e02e52cbc3da6e67b3ecf29c6\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      sload\n      and\n      or\n      0x00\n      dup1\n      mload\n      0x20\n      data_e28a5566b8a884201ab44e2d991177ce8b88325e02e52cbc3da6e67b3ecf29c6\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      sstore\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n    tag_529:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      tag_530\n      jumpi\n        /* \"contracts/DmtpTech.sol\":2206:2233  commissionKeyGeneratorRate_ */\n      tag_91\n      jump\t// in\n    tag_528:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      tag_532\n      jumpi\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_532:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      tag_534\n      shl(0x40, 0xff)\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      not\n      0x00\n      dup1\n      mload\n      0x20\n      data_e28a5566b8a884201ab44e2d991177ce8b88325e02e52cbc3da6e67b3ecf29c6\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      sload\n      and\n      0x00\n      dup1\n      mload\n      0x20\n      data_e28a5566b8a884201ab44e2d991177ce8b88325e02e52cbc3da6e67b3ecf29c6\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      sstore\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n    tag_534:\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n      swap1\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      dup1\n      0x20\n      dup2\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      tag_361\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_530:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      tag_536\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x010000000000000000\n      not(shl(0x40, 0xff))\n      0x00\n      dup1\n      mload\n      0x20\n      data_e28a5566b8a884201ab44e2d991177ce8b88325e02e52cbc3da6e67b3ecf29c6\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      sload\n      and\n      or\n      0x00\n      dup1\n      mload\n      0x20\n      data_e28a5566b8a884201ab44e2d991177ce8b88325e02e52cbc3da6e67b3ecf29c6\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      sstore\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n    tag_536:\n        /* \"contracts/DmtpTech.sol\":2206:2233  commissionKeyGeneratorRate_ */\n      tag_91\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_526:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mstore(0x00, shl(0xe0, 0xf92ee8a9))\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_524:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      swap1\n      pop\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      codesize\n      jump(tag_525)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_522:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      iszero\n      swap2\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      jump(tag_523)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_520:\n      dup8\n      swap2\n      pop\n      jump(tag_521)\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n    tag_49:\n      iszero\n      tag_537\n      jumpi\n      jump\t// out\n    tag_537:\n      0x64\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x20\n      0x24\n      dup3\n      add\n      mstore\n      0x444d54505f544543485f4e4f545f414c4c4f575f544f5f53454c4c5f4b455953\n      0x44\n      dup3\n      add\n      mstore\n      revert\n    tag_50:\n      swap1\n      dup2\n      0x20\n      swap2\n      sub\n      slt\n      tag_156\n      jumpi\n      mload\n      swap1\n      jump\t// out\n    tag_51:\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n    tag_52:\n      iszero\n      tag_541\n      jumpi\n      jump\t// out\n    tag_541:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x17\n      0x24\n      dup3\n      add\n      mstore\n      0x444d54505f544543485f50524943455f4348414e474544000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_53:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n    tag_54:\n      dup2\n      dup2\n      mul\n      swap3\n      swap2\n      dup2\n      iszero\n      swap2\n      dup5\n      div\n      eq\n      or\n      iszero\n      tag_543\n      jumpi\n      jump\t// out\n    tag_543:\n      tag_53\n      jump\t// in\n    tag_56:\n      swap2\n      swap1\n      dup3\n      sub\n      swap2\n      dup3\n      gt\n      tag_543\n      jumpi\n      jump\t// out\n    tag_58:\n      iszero\n      tag_547\n      jumpi\n      jump\t// out\n    tag_547:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x444d54505f544543485f504152414d5f4b45595f494e56414c49440000000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_59:\n      swap1\n        /* \"contracts/DmtpTech.sol\":4746:4759  _keyIdCounter */\n      0x01\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_543\n      jumpi\n      jump\t// out\n    tag_60:\n      swap2\n      swap1\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_543\n      jumpi\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4759:4950  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_62:\n      0x00\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4919:4943  $._roles[role].adminRole */\n      0x01\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      keccak256(0x00, 0x40)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4919:4943  $._roles[role].adminRole */\n      add\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4759:4950  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n    tag_63:\n      iszero\n      tag_553\n      jumpi\n      jump\t// out\n    tag_553:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x444d54505f544543485f504152414d5f414444524553535f494e56414c494400\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"contracts/DmtpTech.sol\":6512:6860  function allowToSellKey(... */\n    tag_68:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DmtpTech.sol\":6629:6638  generated */\n      0x04\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/DmtpTech.sol\":6629:6647  generated[seller_] */\n      dup3\n      swap1\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sload\n        /* \"contracts/DmtpTech.sol\":6629:6654  generated[seller_] != id_ */\n      sub\n        /* \"contracts/DmtpTech.sol\":6625:6692  if (generated[seller_] != id_) {... */\n      tag_556\n      jumpi\n        /* \"contracts/DmtpTech.sol\":6721:6767  IERC1155(address(key)).balanceOf(seller_, id_) */\n      tag_558\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      swap2\n        /* \"contracts/DmtpTech.sol\":6721:6767  IERC1155(address(key)).balanceOf(seller_, id_) */\n      0x20\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      swap2\n        /* \"contracts/DmtpTech.sol\":6721:6753  IERC1155(address(key)).balanceOf */\n      tag_559\n        /* \"contracts/DmtpTech.sol\":6721:6743  IERC1155(address(key)) */\n      tag_170\n        /* \"contracts/DmtpTech.sol\":6730:6742  address(key) */\n      tag_170\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      tag_170\n        /* \"contracts/DmtpTech.sol\":6738:6741  key */\n      0x02\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sload\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      swap1\n      jump\n        /* \"contracts/DmtpTech.sol\":6721:6753  IERC1155(address(key)).balanceOf */\n    tag_559:\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe1, 0x7eeac7)\n        /* \"contracts/DmtpTech.sol\":6721:6767  IERC1155(address(key)).balanceOf(seller_, id_) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      swap1\n      swap3\n      and\n        /* \"contracts/DmtpTech.sol\":6629:6638  generated */\n      0x04\n        /* \"contracts/DmtpTech.sol\":6721:6767  IERC1155(address(key)).balanceOf(seller_, id_) */\n      dup4\n      add\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      mstore\n      0x24\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      swap3\n      dup4\n      swap2\n      swap1\n      dup3\n      swap1\n      dup2\n      swap1\n      0x44\n      dup3\n      add\n      swap1\n      jump\n        /* \"contracts/DmtpTech.sol\":6721:6767  IERC1155(address(key)).balanceOf(seller_, id_) */\n    tag_558:\n      sub\n      swap2\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_205\n      jumpi\n        /* \"contracts/DmtpTech.sol\":6792:6793  1 */\n      0x01\n        /* \"contracts/DmtpTech.sol\":6721:6767  IERC1155(address(key)).balanceOf(seller_, id_) */\n      swap2\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/DmtpTech.sol\":6721:6767  IERC1155(address(key)).balanceOf(seller_, id_) */\n      swap2\n      tag_565\n      jumpi\n        /* \"contracts/DmtpTech.sol\":6512:6860  function allowToSellKey(... */\n    tag_566:\n        /* \"contracts/DmtpTech.sol\":6781:6793  balances > 1 */\n      pop\n      gt\n        /* \"contracts/DmtpTech.sol\":6777:6831  if (balances > 1) {... */\n      tag_567\n      jumpi\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/DmtpTech.sol\":6512:6860  function allowToSellKey(... */\n      swap1\n      jump\t// out\n        /* \"contracts/DmtpTech.sol\":6777:6831  if (balances > 1) {... */\n    tag_567:\n        /* \"contracts/DmtpTech.sol\":6792:6793  1 */\n      0x01\n        /* \"contracts/DmtpTech.sol\":6809:6820  return true */\n      swap1\n      jump\t// out\n        /* \"contracts/DmtpTech.sol\":6721:6767  IERC1155(address(key)).balanceOf(seller_, id_) */\n    tag_565:\n      tag_569\n      swap2\n      pop\n      0x20\n      jumpi(tag_218, gt(0x20, returndatasize))\n      tag_220\n      dup2\n      dup4\n      tag_32\n      jump\t// in\n    tag_569:\n      codesize\n      jump(tag_566)\n        /* \"contracts/DmtpTech.sol\":6625:6692  if (generated[seller_] != id_) {... */\n    tag_556:\n        /* \"contracts/DmtpTech.sol\":6670:6681  return true */\n      pop\n      pop\n        /* \"contracts/DmtpTech.sol\":6677:6681  true */\n      0x01\n        /* \"contracts/DmtpTech.sol\":6670:6681  return true */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2466:2569  modifier nonReentrant() {... */\n    tag_69:\n      tag_573\n      tag_81\n      jump\t// in\n    tag_573:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DmtpTech.sol\":6629:6638  generated */\n      0x04\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/DmtpTech.sol\":4324:4387  require(generated[sender] == 0, \"DMTP_TECH_ALREADY_ISSUED_KEY\") */\n      tag_574\n      swap1\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sload\n        /* \"contracts/DmtpTech.sol\":4332:4354  generated[sender] == 0 */\n      iszero\n        /* \"contracts/DmtpTech.sol\":4324:4387  require(generated[sender] == 0, \"DMTP_TECH_ALREADY_ISSUED_KEY\") */\n      tag_70\n      jump\t// in\n    tag_574:\n        /* \"contracts/DmtpTech.sol\":4402:4422  needToCheckWhitelist */\n      0x09\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sload\n      0xff\n      and\n        /* \"contracts/DmtpTech.sol\":4398:4723  if (needToCheckWhitelist) {... */\n      tag_577\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2466:2569  modifier nonReentrant() {... */\n    tag_578:\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      pop\n        /* \"contracts/DmtpTech.sol\":4746:4763  _keyIdCounter + 1 */\n      tag_579\n        /* \"contracts/DmtpTech.sol\":4746:4759  _keyIdCounter */\n      0x01\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sload\n        /* \"contracts/DmtpTech.sol\":4746:4763  _keyIdCounter + 1 */\n      tag_59\n      jump\t// in\n    tag_579:\n        /* \"contracts/DmtpTech.sol\":4774:4777  key */\n      0x02\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sload\n        /* \"contracts/DmtpTech.sol\":4774:4782  key.mint */\n      tag_580\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      and\n      jump(tag_170)\n        /* \"contracts/DmtpTech.sol\":4774:4782  key.mint */\n    tag_580:\n        /* \"contracts/DmtpTech.sol\":4774:4807  key.mint(_msgSender(), id, 1, \"\") */\n      swap1\n      dup2\n      extcodesize\n      iszero\n      tag_156\n      jumpi\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe0, 0x731133e9)\n        /* \"contracts/DmtpTech.sol\":4774:4807  key.mint(_msgSender(), id, 1, \"\") */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"contracts/DmtpTech.sol\":4332:4341  generated */\n      0x04\n        /* \"contracts/DmtpTech.sol\":4774:4807  key.mint(_msgSender(), id, 1, \"\") */\n      dup3\n      add\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      mstore\n      0x24\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x01\n      0x44\n      dup3\n      add\n      mstore\n      0x80\n      0x64\n      dup3\n      add\n      mstore\n      0x00\n      0x84\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      swap1\n      swap3\n      dup4\n      swap1\n      0xa4\n      swap1\n      dup3\n      swap1\n      dup5\n      swap1\n        /* \"contracts/DmtpTech.sol\":4774:4807  key.mint(_msgSender(), id, 1, \"\") */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_205\n      jumpi\n        /* \"contracts/DmtpTech.sol\":4920:4944  KeyGenerated(id, sender) */\n      0x21f36f1ce7fe044293979690e893402c51515f757aa4e48b13bcfb269a9b6410\n        /* \"contracts/DmtpTech.sol\":4774:4807  key.mint(_msgSender(), id, 1, \"\") */\n      swap3\n        /* \"contracts/DmtpTech.sol\":4920:4944  KeyGenerated(id, sender) */\n      tag_587\n        /* \"contracts/DmtpTech.sol\":4774:4807  key.mint(_msgSender(), id, 1, \"\") */\n      swap3\n      tag_588\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2466:2569  modifier nonReentrant() {... */\n    tag_589:\n        /* \"contracts/DmtpTech.sol\":4818:4836  _keyIdCounter = id */\n      pop\n      tag_590\n      dup2\n        /* \"contracts/DmtpTech.sol\":4746:4759  _keyIdCounter */\n      0x01\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sstore\n      jump\n        /* \"contracts/DmtpTech.sol\":4818:4836  _keyIdCounter = id */\n    tag_590:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DmtpTech.sol\":6629:6638  generated */\n      0x04\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      dup2\n      swap1\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/DmtpTech.sol\":4878:4904  keyGenerators[id] = sender */\n      tag_592\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"contracts/DmtpTech.sol\":4878:4895  keyGenerators[id] */\n      tag_593\n      dup4\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x00\n      mstore\n        /* \"contracts/DmtpTech.sol\":3962:3975  keyGenerators */\n      0x08\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap1\n      jump\n        /* \"contracts/DmtpTech.sol\":4878:4895  keyGenerators[id] */\n    tag_593:\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      jump\n        /* \"contracts/DmtpTech.sol\":4878:4904  keyGenerators[id] = sender */\n    tag_592:\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x20\n      dup4\n      add\n      mstore\n      swap1\n      swap2\n      dup3\n      swap2\n      dup3\n      add\n      swap1\n      jump\n        /* \"contracts/DmtpTech.sol\":4920:4944  KeyGenerated(id, sender) */\n    tag_587:\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2531:2532  _ */\n      tag_594\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3089  _status = NOT_ENTERED */\n      0x00\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sstore\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2888:3096  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2531:2532  _ */\n    tag_594:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2466:2569  modifier nonReentrant() {... */\n      jump\t// out\n        /* \"contracts/DmtpTech.sol\":4774:4807  key.mint(_msgSender(), id, 1, \"\") */\n    tag_588:\n      dup1\n      tag_215\n      0x00\n      tag_596\n      swap4\n      tag_32\n      jump\t// in\n    tag_596:\n      codesize\n      jump(tag_589)\n        /* \"contracts/DmtpTech.sol\":4398:4723  if (needToCheckWhitelist) {... */\n    tag_577:\n        /* \"contracts/DmtpTech.sol\":4602:4635  message.recoverSigner(signature_) */\n      tag_597\n        /* \"contracts/DmtpTech.sol\":4577:4712  require(... */\n      tag_598\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      swap2\n        /* \"contracts/DmtpTech.sol\":4456:4562  keccak256(... */\n      tag_599\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      mload(0x40)\n        /* \"contracts/DmtpTech.sol\":4483:4537  abi.encodePacked(sender, block.chainid, address(this)) */\n      0x20\n      dup2\n      add\n        /* \"contracts/DmtpTech.sol\":4531:4535  this */\n      swap1\n        /* \"contracts/DmtpTech.sol\":4483:4537  abi.encodePacked(sender, block.chainid, address(this)) */\n      tag_600\n        /* \"contracts/DmtpTech.sol\":4531:4535  this */\n      dup2\n        /* \"contracts/DmtpTech.sol\":4483:4537  abi.encodePacked(sender, block.chainid, address(this)) */\n      tag_601\n        /* \"contracts/DmtpTech.sol\":4531:4535  this */\n      address\n        /* \"contracts/DmtpTech.sol\":4508:4521  block.chainid */\n      chainid\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"contracts/DmtpTech.sol\":4483:4537  abi.encodePacked(sender, block.chainid, address(this)) */\n      dup8\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      swap2\n      0x48\n      swap4\n      swap2\n      not(sub(shl(0x60, 0x01), 0x01))\n      swap1\n      0x60\n      shl\n      and\n      dup4\n      mstore\n      0x14\n      dup4\n      add\n      mstore\n      not(sub(shl(0x60, 0x01), 0x01))\n      swap1\n      0x60\n      shl\n      and\n      0x34\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n        /* \"contracts/DmtpTech.sol\":4483:4537  abi.encodePacked(sender, block.chainid, address(this)) */\n    tag_601:\n      sub\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      not(0x1f)\n        /* \"contracts/DmtpTech.sol\":4483:4537  abi.encodePacked(sender, block.chainid, address(this)) */\n      dup2\n      add\n      dup4\n      mstore\n      dup3\n      tag_32\n      jump\t// in\n    tag_600:\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      mload\n        /* \"contracts/DmtpTech.sol\":4456:4551  keccak256(... */\n      swap1\n      keccak256\n        /* \"contracts/DmtpTech.sol\":4456:4562  keccak256(... */\n      tag_89\n      jump\t// in\n    tag_599:\n        /* \"contracts/DmtpTech.sol\":4602:4635  message.recoverSigner(signature_) */\n      tag_90\n      jump\t// in\n    tag_597:\n        /* \"contracts/DmtpTech.sol\":4639:4645  signer */\n      0x03\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sload\n        /* \"contracts/DmtpTech.sol\":4602:4645  message.recoverSigner(signature_) == signer */\n      tag_602\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      and\n      jump(tag_170)\n        /* \"contracts/DmtpTech.sol\":4602:4645  message.recoverSigner(signature_) == signer */\n    tag_602:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      swap1\n      swap2\n      and\n        /* \"contracts/DmtpTech.sol\":4602:4645  message.recoverSigner(signature_) == signer */\n      eq\n        /* \"contracts/DmtpTech.sol\":4577:4712  require(... */\n      tag_73\n      jump\t// in\n    tag_598:\n        /* \"contracts/DmtpTech.sol\":4398:4723  if (needToCheckWhitelist) {... */\n      codesize\n      jump(tag_578)\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n    tag_70:\n      iszero\n      tag_604\n      jumpi\n      jump\t// out\n    tag_604:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1c\n      0x24\n      dup3\n      add\n      mstore\n      0x444d54505f544543485f414c52454144595f4953535545445f4b455900000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_73:\n      iszero\n      tag_606\n      jumpi\n      jump\t// out\n    tag_606:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x21\n      0x24\n      dup3\n      add\n      mstore\n      0x444d54505f544543485f504152414d5f5349474e41545552455f494e56414c49\n      0x44\n      dup3\n      add\n      mstore\n      shl(0xfa, 0x11)\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2575:2882  function _nonReentrantBefore() private {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1899:1900  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2702:2709  _status */\n      0x00\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sload\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2702:2720  _status == ENTERED */\n      eq\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2698:2784  if (_status == ENTERED) {... */\n      tag_608\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1899:1900  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2702:2709  _status */\n      0x00\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sstore\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2575:2882  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2698:2784  if (_status == ENTERED) {... */\n    tag_608:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2743:2773  ReentrancyGuardReentrantCall() */\n      shl(0xe0, 0x3ee5aeb5)\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2702:2709  _status */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2743:2773  ReentrancyGuardReentrantCall() */\n      mstore\n      0x04\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2702:2709  _status */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2743:2773  ReentrancyGuardReentrantCall() */\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4148:4251  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_83:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n      0x00\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      swap1\n      dup2\n      mstore\n      mstore(0x20, 0x448256db8f8fb95ee3eaaf89c1051414494e85cebb6057fcf996cc3d0ccfb456)\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4468:4491  !hasRole(role, account) */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4464:4572  if (!hasRole(role, account)) {... */\n      tag_611\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4148:4251  function _checkRole(bytes32 role) internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4464:4572  if (!hasRole(role, account)) {... */\n    tag_611:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4514:4561  AccessControlUnauthorizedAccount(account, role) */\n      mstore(0x00, shl(0xe0, 0xe2517d3f))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4514:4561  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      mstore\n        /* \"abstract/AbstractRole.sol\":243:269  keccak256(\"OPERATOR_ROLE\") */\n      0x97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x24\n      mstore\n      0x44\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4514:4561  AccessControlUnauthorizedAccount(account, role) */\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4148:4251  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_84:\n      0x00\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      dup2\n      dup2\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4468:4491  !hasRole(role, account) */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4464:4572  if (!hasRole(role, account)) {... */\n      tag_614\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4148:4251  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4464:4572  if (!hasRole(role, account)) {... */\n    tag_614:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4514:4561  AccessControlUnauthorizedAccount(account, role) */\n      mstore(0x00, shl(0xe0, 0xe2517d3f))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4514:4561  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      mstore\n      0x24\n      mstore\n      0x44\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4514:4561  AccessControlUnauthorizedAccount(account, role) */\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7270:7657  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_85:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2362:2366  0x00 */\n      0x00\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      swap1\n      dup2\n      mstore\n      mstore(0x20, 0xb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d)\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      tag_617\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2362:2366  0x00 */\n      0x00\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      dup2\n      dup2\n      mstore\n      mstore(0x20, 0xb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d)\n      0x40\n      dup2\n      keccak256\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7509:7513  true */\n      0x01\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n      swap2\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7532:7572  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2362:2366  0x00 */\n      dup2\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7532:7572  RoleGranted(role, account, _msgSender()) */\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7509:7513  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7586:7597  return true */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7432:7651  if (!hasRole(role, account)) {... */\n    tag_617:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7628:7640  return false */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2362:2366  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7628:7640  return false */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7270:7657  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_86:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n      mstore(0x20, 0x448256db8f8fb95ee3eaaf89c1051414494e85cebb6057fcf996cc3d0ccfb456)\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      tag_617\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n      mstore(0x20, 0x448256db8f8fb95ee3eaaf89c1051414494e85cebb6057fcf996cc3d0ccfb456)\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7509:7513  true */\n      0x01\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      and\n        /* \"abstract/AbstractRole.sol\":243:269  keccak256(\"OPERATOR_ROLE\") */\n      0x97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7532:7572  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      0x00\n      dup1\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7509:7513  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7586:7597  return true */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7270:7657  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_87:\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x00\n      dup2\n      dup2\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      tag_625\n      jumpi\n      0x00\n      dup2\n      dup2\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7509:7513  true */\n      0x01\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      and\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7532:7572  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      0x00\n      dup1\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7509:7513  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7586:7597  return true */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7432:7651  if (!hasRole(role, account)) {... */\n    tag_625:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7628:7640  return false */\n      pop\n      pop\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7628:7640  return false */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7892:8280  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_88:\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x00\n      dup2\n      dup2\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      iszero\n      tag_625\n      jumpi\n      0x00\n      dup2\n      dup2\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      and\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8155:8195  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      0x00\n      dup1\n      log4\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8209:8220  return true */\n      swap1\n      jump\t// out\n        /* \"libs/Signature.sol\":762:919  function prefixed(bytes32 hash) internal pure returns (bytes32) {... */\n    tag_89:\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      mload(0x40)\n        /* \"libs/Signature.sol\":853:911  abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash) */\n      0x20\n      dup2\n      add\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      swap2\n      0x19457468657265756d205369676e6564204d6573736167653a0a333200000000\n      dup4\n      mstore\n      0x3c\n      dup3\n      add\n      mstore\n      0x3c\n        /* \"libs/Signature.sol\":853:911  abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash) */\n      dup2\n      mstore\n      tag_632\n      0x5c\n      dup3\n      tag_32\n      jump\t// in\n    tag_632:\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      mload\n        /* \"libs/Signature.sol\":843:912  keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash)) */\n      swap1\n      keccak256\n        /* \"libs/Signature.sol\":762:919  function prefixed(bytes32 hash) internal pure returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"libs/Signature.sol\":551:756  function recoverSigner(bytes32 message, bytes memory sig) internal pure returns (address) {... */\n    tag_90:\n        /* \"libs/Signature.sol\":209:211  65 */\n      0x41\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      dup3\n      mload\n        /* \"libs/Signature.sol\":195:211  sig.length == 65 */\n      sub\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      tag_156\n      jumpi\n      0x80\n      0x00\n        /* \"libs/Signature.sol\":223:512  assembly {... */\n      swap2\n      dup4\n      0x20\n      dup1\n      swap6\n      add\n      mload\n      0x60\n      0x40\n      dup4\n      add\n      mload\n      swap3\n      add\n      mload\n      dup6\n      byte\n      0x40\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      mload\n      swap4\n      dup5\n      mstore\n      dup7\n      dup5\n      add\n      mstore\n        /* \"libs/Signature.sol\":223:512  assembly {... */\n      0x40\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      dup4\n      add\n      mstore\n        /* \"libs/Signature.sol\":223:512  assembly {... */\n      0x60\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      dup3\n      add\n      mstore\n        /* \"libs/Signature.sol\":722:749  ecrecover(message, v, r, s) */\n      dup3\n      dup1\n      mstore\n      0x01\n      gas\n      staticcall\n      iszero\n      tag_205\n      jumpi\n      mload(0x00)\n        /* \"libs/Signature.sol\":551:756  function recoverSigner(bytes32 message, bytes memory sig) internal pure returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/DmtpTech.sol\":1288:1860  function __init(... */\n    tag_91:\n      swap4\n      swap3\n      swap2\n      swap1\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0xff\n      0x00\n      dup1\n      mload\n      0x20\n      data_e28a5566b8a884201ab44e2d991177ce8b88325e02e52cbc3da6e67b3ecf29c6\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      sload\n      0x40\n      shr\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7150:7168  !_isInitializing() */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_637\n      jumpi\n        /* \"contracts/DmtpTech.sol\":1796:1853  commission.keyGeneratorRate = commissionKeyGeneratorRate_ */\n      tag_594\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      swap5\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      shl(0xa0, sub(shl(0x60, 0x01), 0x01))\n        /* \"contracts/DmtpTech.sol\":1517:1533  key = IKey(key_) */\n      0x02\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sload\n      and\n      or\n        /* \"contracts/DmtpTech.sol\":1517:1533  key = IKey(key_) */\n      0x02\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/DmtpTech.sol\":1583:1621  _grantRole(DEFAULT_ADMIN_ROLE, sender) */\n      tag_640\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"contracts/DmtpTech.sol\":1583:1621  _grantRole(DEFAULT_ADMIN_ROLE, sender) */\n      tag_85\n      jump\t// in\n    tag_640:\n      pop\n        /* \"contracts/DmtpTech.sol\":1631:1664  _grantRole(OPERATOR_ROLE, sender) */\n      tag_641\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"contracts/DmtpTech.sol\":1631:1664  _grantRole(OPERATOR_ROLE, sender) */\n      tag_86\n      jump\t// in\n    tag_641:\n      pop\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      shl(0xa0, sub(shl(0x60, 0x01), 0x01))\n        /* \"contracts/DmtpTech.sol\":1675:1691  signer = signer_ */\n      0x03\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sload\n      and\n      or\n        /* \"contracts/DmtpTech.sol\":1675:1691  signer = signer_ */\n      0x03\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/DmtpTech.sol\":1702:1712  commission */\n      0x05\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      shl(0xa0, sub(shl(0x60, 0x01), 0x01))\n        /* \"contracts/DmtpTech.sol\":1745:1764  commission.receiver */\n      0x06\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sload\n      and\n      or\n        /* \"contracts/DmtpTech.sol\":1745:1764  commission.receiver */\n      0x06\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/DmtpTech.sol\":1796:1823  commission.keyGeneratorRate */\n      0x07\n        /* \"contracts/DmtpTech.sol\":355:7931  contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {... */\n      sstore\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n    tag_637:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mstore(0x00, shl(0xe3, 0x1afcd79f))\n      revert(0x00, 0x04)\n    stop\n    data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f 02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800\n    data_e28a5566b8a884201ab44e2d991177ce8b88325e02e52cbc3da6e67b3ecf29c6 f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n\n    auxdata: 0xa164736f6c634300081c000a\n}\n","bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601a576001600055611caf90816100208239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a7146101e75780630d54a882146101e257806315534028146101dd578063238ac933146101d8578063248a9ca3146101d35780632f2ff15d146101ce57806336568abe146101c95780633943380c146101c45780635ba906c0146101bf57806362bea295146101ba57806366c04491146101b55780636c19e783146101b057806379894f96146101ab5780637d9edc96146101a657806381803632146101a1578063882e99181461019c5780638d5ea68b146101975780638dc9330f146101925780638fd7c5681461018d57806391d14854146101885780639fef93f814610183578063a217fddf1461017e578063b0afbfd214610179578063b77c0f0014610174578063d53913931461016f578063d547741f1461016a578063e148919114610165578063f5b541a6146101605763f7c00e631461015b57600080fd5b6110d1565b611096565b61105c565b61102b565b610ff0565b610fbc565b610f30565b610f14565b610d1a565b610cba565b610c97565b610c14565b610b91565b610b23565b610b06565b610a93565b6109f9565b610986565b6108fa565b6108c0565b610813565b6107ea565b6107a4565b61076e565b610748565b61071f565b6104f3565b610242565b3461023d57602036600319011261023d5760043563ffffffff60e01b811680910361023d57602090637965db0b60e01b811490811561022c575b506040519015158152f35b6301ffc9a760e01b14905038610221565b600080fd5b3461023d57604036600319011261023d5760043560243561026161177b565b61027361026e8333611432565b611271565b600254610290906001600160a01b03165b6001600160a01b031690565b604051635478737160e11b81526004810184905291602083602481855afa9283156103fc5760009361047c575b50826102c991146112d7565b6102e06102d860055484611339565b612710900490565b906102eb8284611351565b813b1561023d57604051637a94c56560e11b81523360048201526024810186905260016044820152916000908390606490829084905af19182156103fc57600092839283928392610462575b50818115610459575b3390f1156103fc576103576102d860075484611339565b808015801561040a575b50506006546001600160a01b0316806103bf575b604080518681523360208201529081018590527f76bf686fc9ca17368677b445c3982fe5bdba241b5b1ec5a879739a52e16203769080606081015b0390a16103bd6001600055565b005b600092839283928392916103e5916103df906001600160a01b0316610284565b92611351565b90828215610401575bf1156103fc57388080610375565b6112cb565b506108fc6103ee565b6000808093819361043b61028461028461042e8d6000526008602052604060002090565b546001600160a01b031690565b908390610450575bf1156103fc578038610361565b506108fc610443565b506108fc610340565b806104708461047693610b6a565b80610714565b38610337565b6102c99193506104a39060203d6020116104aa575b61049b8183610b6a565b8101906112bc565b92906102bd565b503d610491565b602435906001600160a01b038216820361023d57565b600435906001600160a01b038216820361023d57565b606435906001600160a01b038216820361023d57565b604036600319011261023d5760043561050a6104b1565b61051261177b565b61052060015483111561135e565b600254610535906001600160a01b0316610284565b60405163b9186d7d60e01b8152600481018490529290602084602481845afa9384156103fc576000946106f3575b506105736102d860055486611339565b9061058861058183876113b8565b34146112d7565b803b1561023d5760405163731133e960e01b81526001600160a01b03851660048201526024810184905260016044820152608060648201526000608482018190529091829060a490829084905af180156103fc576106de575b506105f16102d860075486611339565b808015801561069c575b50506006546001600160a01b03168061065c575b5050604080519283526001600160a01b03909316602083015250908101919091527fced28ea7ef5f4276044389e457757e3f21ca4368040c3b864e3890bcd56a99889080606081016103b0565b6000928392839283929161067c916103df906001600160a01b0316610284565b90828215610693575bf1156103fc5738808061060f565b506108fc610685565b600080809381936106c061028461028461042e8c6000526008602052604060002090565b9083906106d5575bf1156103fc5780386105fb565b506108fc6106c8565b8061047060006106ed93610b6a565b386105e1565b61070d91945060203d6020116104aa5761049b8183610b6a565b9238610563565b600091031261023d57565b3461023d57600036600319011261023d576003546040516001600160a01b039091168152602090f35b3461023d57602036600319011261023d5760206107666004356113c5565b604051908152f35b3461023d57604036600319011261023d576103bd60043561078d6104b1565b9061079f61079a826113c5565b61180f565b6119e2565b3461023d57604036600319011261023d576004356107c06104b1565b336001600160a01b038216036107d9576103bd91611a90565b63334bd91960e11b60005260046000fd5b3461023d57600036600319011261023d576002546040516001600160a01b039091168152602090f35b3461023d57602036600319011261023d5760025460405163b9186d7d60e01b8152600480359082015290602090829060249082906001600160a01b03165afa9081156103fc576000916108a1575b5061271061087160055483611339565b049061089d61088083836113b8565b604051938493846040919493926060820195825260208201520152565b0390f35b6108ba915060203d6020116104aa5761049b8183610b6a565b38610861565b3461023d57602036600319011261023d576001600160a01b036108e16104c7565b1660005260046020526020604060002054604051908152f35b3461023d57602036600319011261023d57600254604051635478737160e11b8152600480359082015290602090829060249082906001600160a01b03165afa9081156103fc57600091610967575b5061271061095860055483611339565b049061089d6108808383611351565b610980915060203d6020116104aa5761049b8183610b6a565b38610948565b3461023d57602036600319011261023d577f9eaa897564d022fb8c5efaf0acdb5d9d27b440b2aad44400b6e1c702e65b9ed360206109c26104c7565b6109ca61179d565b6001600160a01b03166109de8115156113e6565b600380546001600160a01b03191682179055604051908152a1005b3461023d57606036600319011261023d577f827988aa1b695ab4719b95a49399fb75159954cc25d5b37c53cf23e8a6a58d36600435610a366104b1565b90610a8e604435610a4561179d565b600680546001600160a01b0319166001600160a01b0395909516948517905560058390556007819055604080519384526020840194909452928201929092529081906060820190565b0390a1005b3461023d57602036600319011261023d577f9c421f75c1b2cd6cdf5bd68ae0986ad4518d273a5c59745ac6454392b0b709a56020610acf6104c7565b610ad761179d565b6001600160a01b0316610aeb8115156113e6565b600280546001600160a01b03191682179055604051908152a1005b3461023d57600036600319011261023d5760206040516127108152f35b3461023d57604036600319011261023d576020610b4a610b416104c7565b60243590611432565b6040519015158152f35b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610b8c57604052565b610b54565b3461023d57602036600319011261023d5760043567ffffffffffffffff811161023d573660238201121561023d57806004013567ffffffffffffffff8111610b8c5760405190610beb601f8201601f191660200183610b6a565b808252366024828501011161023d5760208160009260246103bd960183860137830101526114f1565b3461023d57604036600319011261023d576103bd600435610c336104b1565b90610c3c61179d565b80151580610c8b575b610c4e9061135e565b610c626001600160a01b03831615156113e6565b600052600860205260406000209060018060a01b03166001600160601b0360a01b825416179055565b50600154811115610c45565b3461023d57600036600319011261023d57602060ff600954166040519015158152f35b3461023d57604036600319011261023d57602060ff610d0e600435610cdd6104b1565b90600052600080516020611c63833981519152845260406000209060018060a01b0316600052602052604060002090565b54166040519015158152f35b602036600319011261023d57600435610d3161177b565b610d3f60015482111561135e565b600254610d54906001600160a01b0316610284565b60405163b9186d7d60e01b81526004810183905290602082602481845afa9182156103fc57600092610ef3575b50610d916102d860055484611339565b90610d9f61058183856113b8565b803b1561023d5760405163731133e960e01b81523360048201526024810185905260016044820152608060648201526000608482018190529091829060a490829084905af180156103fc57610ede575b50610dff6102d860075484611339565b8080158015610e9c575b50506006546001600160a01b031680610e5c575b604080518681523360208201529081018590527fced28ea7ef5f4276044389e457757e3f21ca4368040c3b864e3890bcd56a99889080606081016103b0565b60009283928392839291610e7c916103df906001600160a01b0316610284565b90828215610e93575bf1156103fc57388080610e1d565b506108fc610e85565b60008080938193610ec061028461028461042e8d6000526008602052604060002090565b908390610ed5575bf1156103fc578038610e09565b506108fc610ec8565b806104706000610eed93610b6a565b38610def565b610f0d91925060203d6020116104aa5761049b8183610b6a565b9038610d81565b3461023d57600036600319011261023d57602060405160008152f35b3461023d57602036600319011261023d576004358015801580920361023d57610f5761179d565b6009549160ff8316151514610f775760ff169060ff191617600955600080f35b60405162461bcd60e51b815260206004820152601860248201527f444d54505f544543485f434f4e4649475f4841535f53455400000000000000006044820152606490fd5b3461023d57602036600319011261023d576004356000526008602052602060018060a01b0360406000205416604051908152f35b3461023d57600036600319011261023d5760206040517f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68152f35b3461023d57604036600319011261023d576103bd60043561104a6104b1565b9061105761079a826113c5565b611a90565b3461023d57600036600319011261023d57600554600654600754604080519384526001600160a01b03909216602084015290820152606090f35b3461023d57600036600319011261023d5760206040517f97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b9298152f35b3461023d5760a036600319011261023d576110ea6104c7565b6110f26104b1565b906044356110fe6104dd565b60843591600080516020611c83833981519152549467ffffffffffffffff6111426111346111308960ff9060401c1690565b1590565b9767ffffffffffffffff1690565b1680159081611269575b600114908161125f575b159081611256575b50611245576111a4948661119b600167ffffffffffffffff19600080516020611c83833981519152541617600080516020611c8383398151915255565b61120957611bc1565b6111aa57005b6111d660ff60401b19600080516020611c838339815191525416600080516020611c8383398151915255565b604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2908060208101610a8e565b6112406801000000000000000060ff60401b19600080516020611c83833981519152541617600080516020611c8383398151915255565b611bc1565b63f92ee8a960e01b60005260046000fd5b9050153861115e565b303b159150611156565b87915061114c565b1561127857565b606460405162461bcd60e51b815260206004820152602060248201527f444d54505f544543485f4e4f545f414c4c4f575f544f5f53454c4c5f4b4559536044820152fd5b9081602091031261023d575190565b6040513d6000823e3d90fd5b156112de57565b60405162461bcd60e51b815260206004820152601760248201527f444d54505f544543485f50524943455f4348414e4745440000000000000000006044820152606490fd5b634e487b7160e01b600052601160045260246000fd5b8181029291811591840414171561134c57565b611323565b9190820391821161134c57565b1561136557565b60405162461bcd60e51b815260206004820152601b60248201527f444d54505f544543485f504152414d5f4b45595f494e56414c494400000000006044820152606490fd5b906001820180921161134c57565b9190820180921161134c57565b600052600080516020611c6383398151915260205260016040600020015490565b156113ed57565b60405162461bcd60e51b815260206004820152601f60248201527f444d54505f544543485f504152414d5f414444524553535f494e56414c4944006044820152606490fd5b6001600160a01b0381166000908152600460205260409020829054036114ea576114a69160209161147361028461028461028460025460018060a01b031690565b604051627eeac760e11b81526001600160a01b039092166004830152602482019290925292839190829081906044820190565b03915afa80156103fc576001916000916114cb575b50116114c657600090565b600190565b6114e4915060203d6020116104aa5761049b8183610b6a565b386114bb565b5050600190565b6114f961177b565b3360009081526004602052604090206115139054156116d9565b60095460ff16611644575b5061152a6001546113aa565b60025461153f906001600160a01b0316610284565b90813b1561023d5760405163731133e960e01b81523360048201526024810182905260016044820152608060648201526000608482018190529092839060a490829084905af19081156103fc577f21f36f1ce7fe044293979690e893402c51515f757aa4e48b13bcfb269a9b6410926116209261162f575b506115c181600155565b33600090815260046020526040902081905561160a336115eb836000526008602052604060002090565b80546001600160a01b0319166001600160a01b03909216919091179055565b6040805191825233602083015290918291820190565b0390a161162d6001600055565b565b80610470600061163e93610b6a565b386115b7565b6116ad6116d3916116a860405160208101906116a0816116923046338791604893916001600160601b03199060601b16835260148301526001600160601b03199060601b1660348201520190565b03601f198101835282610b6a565b519020611b35565b611b7a565b6003546116c2906001600160a01b0316610284565b6001600160a01b0390911614611725565b3861151e565b156116e057565b60405162461bcd60e51b815260206004820152601c60248201527f444d54505f544543485f414c52454144595f4953535545445f4b4559000000006044820152606490fd5b1561172c57565b60405162461bcd60e51b815260206004820152602160248201527f444d54505f544543485f504152414d5f5349474e41545552455f494e56414c496044820152601160fa1b6064820152608490fd5b60026000541461178c576002600055565b633ee5aeb560e01b60005260046000fd5b3360009081527f448256db8f8fb95ee3eaaf89c1051414494e85cebb6057fcf996cc3d0ccfb456602052604090205460ff16156117d657565b63e2517d3f60e01b600052336004527f97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b92960245260446000fd5b6000818152600080516020611c638339815191526020908152604080832033845290915290205460ff16156118415750565b63e2517d3f60e01b6000523360045260245260446000fd5b6001600160a01b03811660009081527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d602052604090205460ff16611905576001600160a01b031660008181527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d60205260408120805460ff191660011790553391907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4600190565b50600090565b6001600160a01b03811660009081527f448256db8f8fb95ee3eaaf89c1051414494e85cebb6057fcf996cc3d0ccfb456602052604090205460ff16611905576001600160a01b03811660009081527f448256db8f8fb95ee3eaaf89c1051414494e85cebb6057fcf996cc3d0ccfb45660205260409020805460ff1916600117905533906001600160a01b03167f97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b9297f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d600080a4600190565b6000818152600080516020611c63833981519152602090815260408083206001600160a01b038616845290915290205460ff16611a89576000818152600080516020611c63833981519152602090815260408083206001600160a01b03861684529091529020805460ff1916600117905533916001600160a01b0316907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d600080a4600190565b5050600090565b6000818152600080516020611c63833981519152602090815260408083206001600160a01b038616845290915290205460ff1615611a89576000818152600080516020611c63833981519152602090815260408083206001600160a01b03861684529091529020805460ff1916905533916001600160a01b0316907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b600080a4600190565b60405160208101917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008352603c820152603c8152611b74605c82610b6a565b51902090565b604182510361023d5760806000918360208095015160606040830151920151851a604051938452868401526040830152606082015282805260015afa156103fc5760005190565b9392919060ff600080516020611c838339815191525460401c1615611c515761162d9460018060a01b03166001600160601b0360a01b6002541617600255611c0833611859565b50611c123361190b565b5060018060a01b03166001600160601b0360a01b600354161760035560055560018060a01b03166001600160601b0360a01b6006541617600655600755565b631afcd79f60e31b60005260046000fdfe02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a164736f6c634300081c000a","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1A JUMPI PUSH1 0x1 PUSH1 0x0 SSTORE PUSH2 0x1CAF SWAP1 DUP2 PUSH2 0x20 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0xD54A882 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x15534028 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x238AC933 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x3943380C EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x5BA906C0 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x62BEA295 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x66C04491 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x6C19E783 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x79894F96 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x7D9EDC96 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x81803632 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x882E9918 EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x8D5EA68B EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x8DC9330F EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x8FD7C568 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x9FEF93F8 EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0xB0AFBFD2 EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0xB77C0F00 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0xE1489191 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xF5B541A6 EQ PUSH2 0x160 JUMPI PUSH4 0xF7C00E63 EQ PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D1 JUMP JUMPDEST PUSH2 0x1096 JUMP JUMPDEST PUSH2 0x105C JUMP JUMPDEST PUSH2 0x102B JUMP JUMPDEST PUSH2 0xFF0 JUMP JUMPDEST PUSH2 0xFBC JUMP JUMPDEST PUSH2 0xF30 JUMP JUMPDEST PUSH2 0xF14 JUMP JUMPDEST PUSH2 0xD1A JUMP JUMPDEST PUSH2 0xCBA JUMP JUMPDEST PUSH2 0xC97 JUMP JUMPDEST PUSH2 0xC14 JUMP JUMPDEST PUSH2 0xB91 JUMP JUMPDEST PUSH2 0xB23 JUMP JUMPDEST PUSH2 0xB06 JUMP JUMPDEST PUSH2 0xA93 JUMP JUMPDEST PUSH2 0x9F9 JUMP JUMPDEST PUSH2 0x986 JUMP JUMPDEST PUSH2 0x8FA JUMP JUMPDEST PUSH2 0x8C0 JUMP JUMPDEST PUSH2 0x813 JUMP JUMPDEST PUSH2 0x7EA JUMP JUMPDEST PUSH2 0x7A4 JUMP JUMPDEST PUSH2 0x76E JUMP JUMPDEST PUSH2 0x748 JUMP JUMPDEST PUSH2 0x71F JUMP JUMPDEST PUSH2 0x4F3 JUMP JUMPDEST PUSH2 0x242 JUMP JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x4 CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x23D JUMPI PUSH1 0x20 SWAP1 PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x22C JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x221 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0x261 PUSH2 0x177B JUMP JUMPDEST PUSH2 0x273 PUSH2 0x26E DUP4 CALLER PUSH2 0x1432 JUMP JUMPDEST PUSH2 0x1271 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x290 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x54787371 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 PUSH1 0x20 DUP4 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 SWAP4 PUSH2 0x47C JUMPI JUMPDEST POP DUP3 PUSH2 0x2C9 SWAP2 EQ PUSH2 0x12D7 JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x2D8 PUSH1 0x5 SLOAD DUP5 PUSH2 0x1339 JUMP JUMPDEST PUSH2 0x2710 SWAP1 DIV SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2EB DUP3 DUP5 PUSH2 0x1351 JUMP JUMPDEST DUP2 EXTCODESIZE ISZERO PUSH2 0x23D JUMPI PUSH1 0x40 MLOAD PUSH4 0x7A94C565 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x44 DUP3 ADD MSTORE SWAP2 PUSH1 0x0 SWAP1 DUP4 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 PUSH2 0x462 JUMPI JUMPDEST POP DUP2 DUP2 ISZERO PUSH2 0x459 JUMPI JUMPDEST CALLER SWAP1 CALL ISZERO PUSH2 0x3FC JUMPI PUSH2 0x357 PUSH2 0x2D8 PUSH1 0x7 SLOAD DUP5 PUSH2 0x1339 JUMP JUMPDEST DUP1 DUP1 ISZERO DUP1 ISZERO PUSH2 0x40A JUMPI JUMPDEST POP POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x3BF JUMPI JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x76BF686FC9CA17368677B445C3982FE5BDBA241B5B1EC5A879739A52E1620376 SWAP1 DUP1 PUSH1 0x60 DUP2 ADD JUMPDEST SUB SWAP1 LOG1 PUSH2 0x3BD PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 SWAP2 PUSH2 0x3E5 SWAP2 PUSH2 0x3DF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x284 JUMP JUMPDEST SWAP3 PUSH2 0x1351 JUMP JUMPDEST SWAP1 DUP3 DUP3 ISZERO PUSH2 0x401 JUMPI JUMPDEST CALL ISZERO PUSH2 0x3FC JUMPI CODESIZE DUP1 DUP1 PUSH2 0x375 JUMP JUMPDEST PUSH2 0x12CB JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP4 DUP2 SWAP4 PUSH2 0x43B PUSH2 0x284 PUSH2 0x284 PUSH2 0x42E DUP14 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 DUP4 SWAP1 PUSH2 0x450 JUMPI JUMPDEST CALL ISZERO PUSH2 0x3FC JUMPI DUP1 CODESIZE PUSH2 0x361 JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x443 JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x340 JUMP JUMPDEST DUP1 PUSH2 0x470 DUP5 PUSH2 0x476 SWAP4 PUSH2 0xB6A JUMP JUMPDEST DUP1 PUSH2 0x714 JUMP JUMPDEST CODESIZE PUSH2 0x337 JUMP JUMPDEST PUSH2 0x2C9 SWAP2 SWAP4 POP PUSH2 0x4A3 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4AA JUMPI JUMPDEST PUSH2 0x49B DUP2 DUP4 PUSH2 0xB6A JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x12BC JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x2BD JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x491 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x23D JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x23D JUMPI JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x23D JUMPI JUMP JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x50A PUSH2 0x4B1 JUMP JUMPDEST PUSH2 0x512 PUSH2 0x177B JUMP JUMPDEST PUSH2 0x520 PUSH1 0x1 SLOAD DUP4 GT ISZERO PUSH2 0x135E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x535 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x284 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB9186D7D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP1 PUSH1 0x20 DUP5 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 SWAP5 PUSH2 0x6F3 JUMPI JUMPDEST POP PUSH2 0x573 PUSH2 0x2D8 PUSH1 0x5 SLOAD DUP7 PUSH2 0x1339 JUMP JUMPDEST SWAP1 PUSH2 0x588 PUSH2 0x581 DUP4 DUP8 PUSH2 0x13B8 JUMP JUMPDEST CALLVALUE EQ PUSH2 0x12D7 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x23D JUMPI PUSH1 0x40 MLOAD PUSH4 0x731133E9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x84 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP2 DUP3 SWAP1 PUSH1 0xA4 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x3FC JUMPI PUSH2 0x6DE JUMPI JUMPDEST POP PUSH2 0x5F1 PUSH2 0x2D8 PUSH1 0x7 SLOAD DUP7 PUSH2 0x1339 JUMP JUMPDEST DUP1 DUP1 ISZERO DUP1 ISZERO PUSH2 0x69C JUMPI JUMPDEST POP POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x65C JUMPI JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE POP SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xCED28EA7EF5F4276044389E457757E3F21CA4368040C3B864E3890BCD56A9988 SWAP1 DUP1 PUSH1 0x60 DUP2 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 SWAP2 PUSH2 0x67C SWAP2 PUSH2 0x3DF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x284 JUMP JUMPDEST SWAP1 DUP3 DUP3 ISZERO PUSH2 0x693 JUMPI JUMPDEST CALL ISZERO PUSH2 0x3FC JUMPI CODESIZE DUP1 DUP1 PUSH2 0x60F JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x685 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP4 DUP2 SWAP4 PUSH2 0x6C0 PUSH2 0x284 PUSH2 0x284 PUSH2 0x42E DUP13 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 DUP4 SWAP1 PUSH2 0x6D5 JUMPI JUMPDEST CALL ISZERO PUSH2 0x3FC JUMPI DUP1 CODESIZE PUSH2 0x5FB JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x6C8 JUMP JUMPDEST DUP1 PUSH2 0x470 PUSH1 0x0 PUSH2 0x6ED SWAP4 PUSH2 0xB6A JUMP JUMPDEST CODESIZE PUSH2 0x5E1 JUMP JUMPDEST PUSH2 0x70D SWAP2 SWAP5 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4AA JUMPI PUSH2 0x49B DUP2 DUP4 PUSH2 0xB6A JUMP JUMPDEST SWAP3 CODESIZE PUSH2 0x563 JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x23D JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x20 PUSH2 0x766 PUSH1 0x4 CALLDATALOAD PUSH2 0x13C5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH2 0x3BD PUSH1 0x4 CALLDATALOAD PUSH2 0x78D PUSH2 0x4B1 JUMP JUMPDEST SWAP1 PUSH2 0x79F PUSH2 0x79A DUP3 PUSH2 0x13C5 JUMP JUMPDEST PUSH2 0x180F JUMP JUMPDEST PUSH2 0x19E2 JUMP JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x7C0 PUSH2 0x4B1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x7D9 JUMPI PUSH2 0x3BD SWAP2 PUSH2 0x1A90 JUMP JUMPDEST PUSH4 0x334BD919 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB9186D7D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 SWAP2 PUSH2 0x8A1 JUMPI JUMPDEST POP PUSH2 0x2710 PUSH2 0x871 PUSH1 0x5 SLOAD DUP4 PUSH2 0x1339 JUMP JUMPDEST DIV SWAP1 PUSH2 0x89D PUSH2 0x880 DUP4 DUP4 PUSH2 0x13B8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x8BA SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4AA JUMPI PUSH2 0x49B DUP2 DUP4 PUSH2 0xB6A JUMP JUMPDEST CODESIZE PUSH2 0x861 JUMP JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x8E1 PUSH2 0x4C7 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x54787371 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 SWAP2 PUSH2 0x967 JUMPI JUMPDEST POP PUSH2 0x2710 PUSH2 0x958 PUSH1 0x5 SLOAD DUP4 PUSH2 0x1339 JUMP JUMPDEST DIV SWAP1 PUSH2 0x89D PUSH2 0x880 DUP4 DUP4 PUSH2 0x1351 JUMP JUMPDEST PUSH2 0x980 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4AA JUMPI PUSH2 0x49B DUP2 DUP4 PUSH2 0xB6A JUMP JUMPDEST CODESIZE PUSH2 0x948 JUMP JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH32 0x9EAA897564D022FB8C5EFAF0ACDB5D9D27B440B2AAD44400B6E1C702E65B9ED3 PUSH1 0x20 PUSH2 0x9C2 PUSH2 0x4C7 JUMP JUMPDEST PUSH2 0x9CA PUSH2 0x179D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9DE DUP2 ISZERO ISZERO PUSH2 0x13E6 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH32 0x827988AA1B695AB4719B95A49399FB75159954CC25D5B37C53CF23E8A6A58D36 PUSH1 0x4 CALLDATALOAD PUSH2 0xA36 PUSH2 0x4B1 JUMP JUMPDEST SWAP1 PUSH2 0xA8E PUSH1 0x44 CALLDATALOAD PUSH2 0xA45 PUSH2 0x179D JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND SWAP5 DUP6 OR SWAP1 SSTORE PUSH1 0x5 DUP4 SWAP1 SSTORE PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x60 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH32 0x9C421F75C1B2CD6CDF5BD68AE0986AD4518D273A5C59745AC6454392B0B709A5 PUSH1 0x20 PUSH2 0xACF PUSH2 0x4C7 JUMP JUMPDEST PUSH2 0xAD7 PUSH2 0x179D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xAEB DUP2 ISZERO ISZERO PUSH2 0x13E6 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x2710 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x20 PUSH2 0xB4A PUSH2 0xB41 PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x1432 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB8C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xB54 JUMP JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x23D JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x23D JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xB8C JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0xBEB PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP4 PUSH2 0xB6A JUMP JUMPDEST DUP1 DUP3 MSTORE CALLDATASIZE PUSH1 0x24 DUP3 DUP6 ADD ADD GT PUSH2 0x23D JUMPI PUSH1 0x20 DUP2 PUSH1 0x0 SWAP3 PUSH1 0x24 PUSH2 0x3BD SWAP7 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH2 0x14F1 JUMP JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH2 0x3BD PUSH1 0x4 CALLDATALOAD PUSH2 0xC33 PUSH2 0x4B1 JUMP JUMPDEST SWAP1 PUSH2 0xC3C PUSH2 0x179D JUMP JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0xC8B JUMPI JUMPDEST PUSH2 0xC4E SWAP1 PUSH2 0x135E JUMP JUMPDEST PUSH2 0xC62 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x13E6 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE JUMP JUMPDEST POP PUSH1 0x1 SLOAD DUP2 GT ISZERO PUSH2 0xC45 JUMP JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x9 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0xD0E PUSH1 0x4 CALLDATALOAD PUSH2 0xCDD PUSH2 0x4B1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C63 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xD31 PUSH2 0x177B JUMP JUMPDEST PUSH2 0xD3F PUSH1 0x1 SLOAD DUP3 GT ISZERO PUSH2 0x135E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xD54 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x284 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB9186D7D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH1 0x20 DUP3 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 SWAP3 PUSH2 0xEF3 JUMPI JUMPDEST POP PUSH2 0xD91 PUSH2 0x2D8 PUSH1 0x5 SLOAD DUP5 PUSH2 0x1339 JUMP JUMPDEST SWAP1 PUSH2 0xD9F PUSH2 0x581 DUP4 DUP6 PUSH2 0x13B8 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x23D JUMPI PUSH1 0x40 MLOAD PUSH4 0x731133E9 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x84 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP2 DUP3 SWAP1 PUSH1 0xA4 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x3FC JUMPI PUSH2 0xEDE JUMPI JUMPDEST POP PUSH2 0xDFF PUSH2 0x2D8 PUSH1 0x7 SLOAD DUP5 PUSH2 0x1339 JUMP JUMPDEST DUP1 DUP1 ISZERO DUP1 ISZERO PUSH2 0xE9C JUMPI JUMPDEST POP POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xE5C JUMPI JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0xCED28EA7EF5F4276044389E457757E3F21CA4368040C3B864E3890BCD56A9988 SWAP1 DUP1 PUSH1 0x60 DUP2 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 SWAP2 PUSH2 0xE7C SWAP2 PUSH2 0x3DF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x284 JUMP JUMPDEST SWAP1 DUP3 DUP3 ISZERO PUSH2 0xE93 JUMPI JUMPDEST CALL ISZERO PUSH2 0x3FC JUMPI CODESIZE DUP1 DUP1 PUSH2 0xE1D JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0xE85 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP4 DUP2 SWAP4 PUSH2 0xEC0 PUSH2 0x284 PUSH2 0x284 PUSH2 0x42E DUP14 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 DUP4 SWAP1 PUSH2 0xED5 JUMPI JUMPDEST CALL ISZERO PUSH2 0x3FC JUMPI DUP1 CODESIZE PUSH2 0xE09 JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0xEC8 JUMP JUMPDEST DUP1 PUSH2 0x470 PUSH1 0x0 PUSH2 0xEED SWAP4 PUSH2 0xB6A JUMP JUMPDEST CODESIZE PUSH2 0xDEF JUMP JUMPDEST PUSH2 0xF0D SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4AA JUMPI PUSH2 0x49B DUP2 DUP4 PUSH2 0xB6A JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0xD81 JUMP JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO DUP1 ISZERO DUP1 SWAP3 SUB PUSH2 0x23D JUMPI PUSH2 0xF57 PUSH2 0x179D JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP2 PUSH1 0xFF DUP4 AND ISZERO ISZERO EQ PUSH2 0xF77 JUMPI PUSH1 0xFF AND SWAP1 PUSH1 0xFF NOT AND OR PUSH1 0x9 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x444D54505F544543485F434F4E4649475F4841535F5345540000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH2 0x3BD PUSH1 0x4 CALLDATALOAD PUSH2 0x104A PUSH2 0x4B1 JUMP JUMPDEST SWAP1 PUSH2 0x1057 PUSH2 0x79A DUP3 PUSH2 0x13C5 JUMP JUMPDEST PUSH2 0x1A90 JUMP JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x97667070C54EF182B0F5858B034BEAC1B6F3089AA2D3188BB1E8929F4FA9B929 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH2 0x10EA PUSH2 0x4C7 JUMP JUMPDEST PUSH2 0x10F2 PUSH2 0x4B1 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH2 0x10FE PUSH2 0x4DD JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C83 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP5 PUSH8 0xFFFFFFFFFFFFFFFF PUSH2 0x1142 PUSH2 0x1134 PUSH2 0x1130 DUP10 PUSH1 0xFF SWAP1 PUSH1 0x40 SHR AND SWAP1 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST SWAP8 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x1269 JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x125F JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x1256 JUMPI JUMPDEST POP PUSH2 0x1245 JUMPI PUSH2 0x11A4 SWAP5 DUP7 PUSH2 0x119B PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF NOT PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C83 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C83 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST PUSH2 0x1209 JUMPI PUSH2 0x1BC1 JUMP JUMPDEST PUSH2 0x11AA JUMPI STOP JUMPDEST PUSH2 0x11D6 PUSH1 0xFF PUSH1 0x40 SHL NOT PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C83 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C83 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 DUP1 PUSH1 0x20 DUP2 ADD PUSH2 0xA8E JUMP JUMPDEST PUSH2 0x1240 PUSH9 0x10000000000000000 PUSH1 0xFF PUSH1 0x40 SHL NOT PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C83 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C83 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST PUSH2 0x1BC1 JUMP JUMPDEST PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP ISZERO CODESIZE PUSH2 0x115E JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x1156 JUMP JUMPDEST DUP8 SWAP2 POP PUSH2 0x114C JUMP JUMPDEST ISZERO PUSH2 0x1278 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x444D54505F544543485F4E4F545F414C4C4F575F544F5F53454C4C5F4B455953 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x23D JUMPI MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x12DE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x444D54505F544543485F50524943455F4348414E474544000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x134C JUMPI JUMP JUMPDEST PUSH2 0x1323 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x134C JUMPI JUMP JUMPDEST ISZERO PUSH2 0x1365 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x444D54505F544543485F504152414D5F4B45595F494E56414C49440000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x134C JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x134C JUMPI JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C63 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x13ED JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x444D54505F544543485F504152414D5F414444524553535F494E56414C494400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 SWAP1 SLOAD SUB PUSH2 0x14EA JUMPI PUSH2 0x14A6 SWAP2 PUSH1 0x20 SWAP2 PUSH2 0x1473 PUSH2 0x284 PUSH2 0x284 PUSH2 0x284 PUSH1 0x2 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x7EEAC7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0x3FC JUMPI PUSH1 0x1 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x14CB JUMPI JUMPDEST POP GT PUSH2 0x14C6 JUMPI PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x14E4 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4AA JUMPI PUSH2 0x49B DUP2 DUP4 PUSH2 0xB6A JUMP JUMPDEST CODESIZE PUSH2 0x14BB JUMP JUMPDEST POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x14F9 PUSH2 0x177B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1513 SWAP1 SLOAD ISZERO PUSH2 0x16D9 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND PUSH2 0x1644 JUMPI JUMPDEST POP PUSH2 0x152A PUSH1 0x1 SLOAD PUSH2 0x13AA JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x153F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x284 JUMP JUMPDEST SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x23D JUMPI PUSH1 0x40 MLOAD PUSH4 0x731133E9 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x84 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP3 DUP4 SWAP1 PUSH1 0xA4 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x3FC JUMPI PUSH32 0x21F36F1CE7FE044293979690E893402C51515F757AA4E48B13BCFB269A9B6410 SWAP3 PUSH2 0x1620 SWAP3 PUSH2 0x162F JUMPI JUMPDEST POP PUSH2 0x15C1 DUP2 PUSH1 0x1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0x160A CALLER PUSH2 0x15EB DUP4 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE CALLER PUSH1 0x20 DUP4 ADD MSTORE SWAP1 SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH2 0x162D PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH2 0x470 PUSH1 0x0 PUSH2 0x163E SWAP4 PUSH2 0xB6A JUMP JUMPDEST CODESIZE PUSH2 0x15B7 JUMP JUMPDEST PUSH2 0x16AD PUSH2 0x16D3 SWAP2 PUSH2 0x16A8 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x16A0 DUP2 PUSH2 0x1692 ADDRESS CHAINID CALLER DUP8 SWAP2 PUSH1 0x48 SWAP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT SWAP1 PUSH1 0x60 SHL AND DUP4 MSTORE PUSH1 0x14 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT SWAP1 PUSH1 0x60 SHL AND PUSH1 0x34 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xB6A JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x1B35 JUMP JUMPDEST PUSH2 0x1B7A JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x16C2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x284 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND EQ PUSH2 0x1725 JUMP JUMPDEST CODESIZE PUSH2 0x151E JUMP JUMPDEST ISZERO PUSH2 0x16E0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x444D54505F544543485F414C52454144595F4953535545445F4B455900000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x172C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x444D54505F544543485F504152414D5F5349474E41545552455F494E56414C49 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0x178C JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x448256DB8F8FB95EE3EAAF89C1051414494E85CEBB6057FCF996CC3D0CCFB456 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x17D6 JUMPI JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH32 0x97667070C54EF182B0F5858B034BEAC1B6F3089AA2D3188BB1E8929F4FA9B929 PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C63 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1841 JUMPI POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xB7DB2DD08FCB62D0C9E08C51941CAE53C267786A0B75803FB7960902FC8EF97D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1905 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xB7DB2DD08FCB62D0C9E08C51941CAE53C267786A0B75803FB7960902FC8EF97D PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP2 SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x448256DB8F8FB95EE3EAAF89C1051414494E85CEBB6057FCF996CC3D0CCFB456 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1905 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x448256DB8F8FB95EE3EAAF89C1051414494E85CEBB6057FCF996CC3D0CCFB456 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x97667070C54EF182B0F5858B034BEAC1B6F3089AA2D3188BB1E8929F4FA9B929 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C63 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1A89 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C63 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C63 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1A89 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C63 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP2 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP4 MSTORE PUSH1 0x3C DUP3 ADD MSTORE PUSH1 0x3C DUP2 MSTORE PUSH2 0x1B74 PUSH1 0x5C DUP3 PUSH2 0xB6A JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x41 DUP3 MLOAD SUB PUSH2 0x23D JUMPI PUSH1 0x80 PUSH1 0x0 SWAP2 DUP4 PUSH1 0x20 DUP1 SWAP6 ADD MLOAD PUSH1 0x60 PUSH1 0x40 DUP4 ADD MLOAD SWAP3 ADD MLOAD DUP6 BYTE PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE DUP7 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 MLOAD SWAP1 JUMP JUMPDEST SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C83 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x1C51 JUMPI PUSH2 0x162D SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH2 0x1C08 CALLER PUSH2 0x1859 JUMP JUMPDEST POP PUSH2 0x1C12 CALLER PUSH2 0x190B JUMP JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH1 0x5 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x6 SLOAD AND OR PUSH1 0x6 SSTORE PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH4 0x1AFCD79F PUSH1 0xE3 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT INVALID MUL 0xDD PUSH28 0xC7DEC4DCEEDDA775E58DD541E08A116C6C53815C0BD028192F7B6268 STOP CREATE 0xC5 PUSH31 0x16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00A164 PUSH20 0x6F6C634300081C000A0000000000000000000000 ","sourceMap":"355:7576:10:-:0;;;;;;;1857:1:7;2061:21;1857:1;355:7576:10;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode":{"entryPoint":1812,"id":null,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":1223,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_9375":{"entryPoint":1201,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_9415":{"entryPoint":1245,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_uint256":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_uint256_9368":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_uint256_9392":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_uint256_9416":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_uint256_fromMemory":{"entryPoint":4796,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_uint256_rational_by":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_uint256_rational_by_stringliteral_c5d2":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_packed_address_uint256_address":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_rational_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_uint256_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_uint256_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"checked_add_uint256":{"entryPoint":5048,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint256_9453":{"entryPoint":5034,"id":null,"parameterSlots":1,"returnSlots":1},"checked_div_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_mul_uint256":{"entryPoint":4921,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":4945,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"external_fun_A_HUNDRED_PERCENT":{"entryPoint":2822,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_DEFAULT_ADMIN_ROLE":{"entryPoint":3860,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_MINTER_ROLE":{"entryPoint":4080,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_OPERATOR_ROLE":{"entryPoint":4246,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_allowToSellKey":{"entryPoint":2851,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_buyKey":{"entryPoint":3354,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_buyKeyFor":{"entryPoint":1267,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_commission":{"entryPoint":4188,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_generateKey":{"entryPoint":2961,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_generated":{"entryPoint":2240,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getRoleAdmin":{"entryPoint":1864,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_grantRole":{"entryPoint":1902,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_hasRole":{"entryPoint":3258,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_initialize":{"entryPoint":4305,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_key":{"entryPoint":2026,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_keyGenerators":{"entryPoint":4028,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_needToCheckWhitelist":{"entryPoint":3223,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_priceWithCommission":{"entryPoint":2067,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_renounceRole":{"entryPoint":1956,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_revokeRole":{"entryPoint":4139,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_sellKey":{"entryPoint":578,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_sellPriceWithCommission":{"entryPoint":2298,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setCommission":{"entryPoint":2553,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setKeyContract":{"entryPoint":2707,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setKeyGeneratos":{"entryPoint":3092,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setNeedToCheckWhitelist":{"entryPoint":3888,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setSigner":{"entryPoint":2438,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_signer":{"entryPoint":1823,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_supportsInterface":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"extract_from_storage_value_offset_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_t_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_uint64":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":2922,"id":null,"parameterSlots":2,"returnSlots":0},"fun_allowToSellKey":{"entryPoint":5170,"id":1747,"parameterSlots":2,"returnSlots":1},"fun_checkRole":{"entryPoint":6159,"id":129,"parameterSlots":1,"returnSlots":0},"fun_checkRole_9389":{"entryPoint":6045,"id":129,"parameterSlots":0,"returnSlots":0},"fun_getRoleAdmin":{"entryPoint":5061,"id":171,"parameterSlots":1,"returnSlots":1},"fun_grantRole":{"entryPoint":6626,"id":315,"parameterSlots":2,"returnSlots":1},"fun_grantRole_9499":{"entryPoint":6233,"id":315,"parameterSlots":1,"returnSlots":1},"fun_grantRole_9500":{"entryPoint":6411,"id":315,"parameterSlots":1,"returnSlots":1},"fun_init":{"entryPoint":7105,"id":1154,"parameterSlots":5,"returnSlots":0},"fun_nonReentrantAfter":{"entryPoint":null,"id":969,"parameterSlots":0,"returnSlots":0},"fun_nonReentrantBefore":{"entryPoint":6011,"id":961,"parameterSlots":0,"returnSlots":0},"fun_prefixed":{"entryPoint":6965,"id":2002,"parameterSlots":1,"returnSlots":1},"fun_recoverSigner":{"entryPoint":7034,"id":1986,"parameterSlots":2,"returnSlots":1},"fun_revokeRole":{"entryPoint":6800,"id":361,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address_9451":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_address_of_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"modifier_nonReentrant":{"entryPoint":5361,"id":945,"parameterSlots":1,"returnSlots":0},"panic_error_0x11":{"entryPoint":4899,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2900,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_storage_split_offset_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":5925,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_6f60":{"entryPoint":4958,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_88ba":{"entryPoint":5849,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_8967":{"entryPoint":4823,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_a02c":{"entryPoint":4721,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_c363":{"entryPoint":5094,"id":null,"parameterSlots":1,"returnSlots":0},"revert_forward":{"entryPoint":4811,"id":null,"parameterSlots":0,"returnSlots":0},"update_storage_value_offset_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"update_storage_value_offset_t_bool_to_t_bool":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"update_storage_value_offset_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offset_uint256_to_uint256_9503":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offset_uint64_to_uint64":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c806301ffc9a7146101e75780630d54a882146101e257806315534028146101dd578063238ac933146101d8578063248a9ca3146101d35780632f2ff15d146101ce57806336568abe146101c95780633943380c146101c45780635ba906c0146101bf57806362bea295146101ba57806366c04491146101b55780636c19e783146101b057806379894f96146101ab5780637d9edc96146101a657806381803632146101a1578063882e99181461019c5780638d5ea68b146101975780638dc9330f146101925780638fd7c5681461018d57806391d14854146101885780639fef93f814610183578063a217fddf1461017e578063b0afbfd214610179578063b77c0f0014610174578063d53913931461016f578063d547741f1461016a578063e148919114610165578063f5b541a6146101605763f7c00e631461015b57600080fd5b6110d1565b611096565b61105c565b61102b565b610ff0565b610fbc565b610f30565b610f14565b610d1a565b610cba565b610c97565b610c14565b610b91565b610b23565b610b06565b610a93565b6109f9565b610986565b6108fa565b6108c0565b610813565b6107ea565b6107a4565b61076e565b610748565b61071f565b6104f3565b610242565b3461023d57602036600319011261023d5760043563ffffffff60e01b811680910361023d57602090637965db0b60e01b811490811561022c575b506040519015158152f35b6301ffc9a760e01b14905038610221565b600080fd5b3461023d57604036600319011261023d5760043560243561026161177b565b61027361026e8333611432565b611271565b600254610290906001600160a01b03165b6001600160a01b031690565b604051635478737160e11b81526004810184905291602083602481855afa9283156103fc5760009361047c575b50826102c991146112d7565b6102e06102d860055484611339565b612710900490565b906102eb8284611351565b813b1561023d57604051637a94c56560e11b81523360048201526024810186905260016044820152916000908390606490829084905af19182156103fc57600092839283928392610462575b50818115610459575b3390f1156103fc576103576102d860075484611339565b808015801561040a575b50506006546001600160a01b0316806103bf575b604080518681523360208201529081018590527f76bf686fc9ca17368677b445c3982fe5bdba241b5b1ec5a879739a52e16203769080606081015b0390a16103bd6001600055565b005b600092839283928392916103e5916103df906001600160a01b0316610284565b92611351565b90828215610401575bf1156103fc57388080610375565b6112cb565b506108fc6103ee565b6000808093819361043b61028461028461042e8d6000526008602052604060002090565b546001600160a01b031690565b908390610450575bf1156103fc578038610361565b506108fc610443565b506108fc610340565b806104708461047693610b6a565b80610714565b38610337565b6102c99193506104a39060203d6020116104aa575b61049b8183610b6a565b8101906112bc565b92906102bd565b503d610491565b602435906001600160a01b038216820361023d57565b600435906001600160a01b038216820361023d57565b606435906001600160a01b038216820361023d57565b604036600319011261023d5760043561050a6104b1565b61051261177b565b61052060015483111561135e565b600254610535906001600160a01b0316610284565b60405163b9186d7d60e01b8152600481018490529290602084602481845afa9384156103fc576000946106f3575b506105736102d860055486611339565b9061058861058183876113b8565b34146112d7565b803b1561023d5760405163731133e960e01b81526001600160a01b03851660048201526024810184905260016044820152608060648201526000608482018190529091829060a490829084905af180156103fc576106de575b506105f16102d860075486611339565b808015801561069c575b50506006546001600160a01b03168061065c575b5050604080519283526001600160a01b03909316602083015250908101919091527fced28ea7ef5f4276044389e457757e3f21ca4368040c3b864e3890bcd56a99889080606081016103b0565b6000928392839283929161067c916103df906001600160a01b0316610284565b90828215610693575bf1156103fc5738808061060f565b506108fc610685565b600080809381936106c061028461028461042e8c6000526008602052604060002090565b9083906106d5575bf1156103fc5780386105fb565b506108fc6106c8565b8061047060006106ed93610b6a565b386105e1565b61070d91945060203d6020116104aa5761049b8183610b6a565b9238610563565b600091031261023d57565b3461023d57600036600319011261023d576003546040516001600160a01b039091168152602090f35b3461023d57602036600319011261023d5760206107666004356113c5565b604051908152f35b3461023d57604036600319011261023d576103bd60043561078d6104b1565b9061079f61079a826113c5565b61180f565b6119e2565b3461023d57604036600319011261023d576004356107c06104b1565b336001600160a01b038216036107d9576103bd91611a90565b63334bd91960e11b60005260046000fd5b3461023d57600036600319011261023d576002546040516001600160a01b039091168152602090f35b3461023d57602036600319011261023d5760025460405163b9186d7d60e01b8152600480359082015290602090829060249082906001600160a01b03165afa9081156103fc576000916108a1575b5061271061087160055483611339565b049061089d61088083836113b8565b604051938493846040919493926060820195825260208201520152565b0390f35b6108ba915060203d6020116104aa5761049b8183610b6a565b38610861565b3461023d57602036600319011261023d576001600160a01b036108e16104c7565b1660005260046020526020604060002054604051908152f35b3461023d57602036600319011261023d57600254604051635478737160e11b8152600480359082015290602090829060249082906001600160a01b03165afa9081156103fc57600091610967575b5061271061095860055483611339565b049061089d6108808383611351565b610980915060203d6020116104aa5761049b8183610b6a565b38610948565b3461023d57602036600319011261023d577f9eaa897564d022fb8c5efaf0acdb5d9d27b440b2aad44400b6e1c702e65b9ed360206109c26104c7565b6109ca61179d565b6001600160a01b03166109de8115156113e6565b600380546001600160a01b03191682179055604051908152a1005b3461023d57606036600319011261023d577f827988aa1b695ab4719b95a49399fb75159954cc25d5b37c53cf23e8a6a58d36600435610a366104b1565b90610a8e604435610a4561179d565b600680546001600160a01b0319166001600160a01b0395909516948517905560058390556007819055604080519384526020840194909452928201929092529081906060820190565b0390a1005b3461023d57602036600319011261023d577f9c421f75c1b2cd6cdf5bd68ae0986ad4518d273a5c59745ac6454392b0b709a56020610acf6104c7565b610ad761179d565b6001600160a01b0316610aeb8115156113e6565b600280546001600160a01b03191682179055604051908152a1005b3461023d57600036600319011261023d5760206040516127108152f35b3461023d57604036600319011261023d576020610b4a610b416104c7565b60243590611432565b6040519015158152f35b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610b8c57604052565b610b54565b3461023d57602036600319011261023d5760043567ffffffffffffffff811161023d573660238201121561023d57806004013567ffffffffffffffff8111610b8c5760405190610beb601f8201601f191660200183610b6a565b808252366024828501011161023d5760208160009260246103bd960183860137830101526114f1565b3461023d57604036600319011261023d576103bd600435610c336104b1565b90610c3c61179d565b80151580610c8b575b610c4e9061135e565b610c626001600160a01b03831615156113e6565b600052600860205260406000209060018060a01b03166001600160601b0360a01b825416179055565b50600154811115610c45565b3461023d57600036600319011261023d57602060ff600954166040519015158152f35b3461023d57604036600319011261023d57602060ff610d0e600435610cdd6104b1565b90600052600080516020611c63833981519152845260406000209060018060a01b0316600052602052604060002090565b54166040519015158152f35b602036600319011261023d57600435610d3161177b565b610d3f60015482111561135e565b600254610d54906001600160a01b0316610284565b60405163b9186d7d60e01b81526004810183905290602082602481845afa9182156103fc57600092610ef3575b50610d916102d860055484611339565b90610d9f61058183856113b8565b803b1561023d5760405163731133e960e01b81523360048201526024810185905260016044820152608060648201526000608482018190529091829060a490829084905af180156103fc57610ede575b50610dff6102d860075484611339565b8080158015610e9c575b50506006546001600160a01b031680610e5c575b604080518681523360208201529081018590527fced28ea7ef5f4276044389e457757e3f21ca4368040c3b864e3890bcd56a99889080606081016103b0565b60009283928392839291610e7c916103df906001600160a01b0316610284565b90828215610e93575bf1156103fc57388080610e1d565b506108fc610e85565b60008080938193610ec061028461028461042e8d6000526008602052604060002090565b908390610ed5575bf1156103fc578038610e09565b506108fc610ec8565b806104706000610eed93610b6a565b38610def565b610f0d91925060203d6020116104aa5761049b8183610b6a565b9038610d81565b3461023d57600036600319011261023d57602060405160008152f35b3461023d57602036600319011261023d576004358015801580920361023d57610f5761179d565b6009549160ff8316151514610f775760ff169060ff191617600955600080f35b60405162461bcd60e51b815260206004820152601860248201527f444d54505f544543485f434f4e4649475f4841535f53455400000000000000006044820152606490fd5b3461023d57602036600319011261023d576004356000526008602052602060018060a01b0360406000205416604051908152f35b3461023d57600036600319011261023d5760206040517f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68152f35b3461023d57604036600319011261023d576103bd60043561104a6104b1565b9061105761079a826113c5565b611a90565b3461023d57600036600319011261023d57600554600654600754604080519384526001600160a01b03909216602084015290820152606090f35b3461023d57600036600319011261023d5760206040517f97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b9298152f35b3461023d5760a036600319011261023d576110ea6104c7565b6110f26104b1565b906044356110fe6104dd565b60843591600080516020611c83833981519152549467ffffffffffffffff6111426111346111308960ff9060401c1690565b1590565b9767ffffffffffffffff1690565b1680159081611269575b600114908161125f575b159081611256575b50611245576111a4948661119b600167ffffffffffffffff19600080516020611c83833981519152541617600080516020611c8383398151915255565b61120957611bc1565b6111aa57005b6111d660ff60401b19600080516020611c838339815191525416600080516020611c8383398151915255565b604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2908060208101610a8e565b6112406801000000000000000060ff60401b19600080516020611c83833981519152541617600080516020611c8383398151915255565b611bc1565b63f92ee8a960e01b60005260046000fd5b9050153861115e565b303b159150611156565b87915061114c565b1561127857565b606460405162461bcd60e51b815260206004820152602060248201527f444d54505f544543485f4e4f545f414c4c4f575f544f5f53454c4c5f4b4559536044820152fd5b9081602091031261023d575190565b6040513d6000823e3d90fd5b156112de57565b60405162461bcd60e51b815260206004820152601760248201527f444d54505f544543485f50524943455f4348414e4745440000000000000000006044820152606490fd5b634e487b7160e01b600052601160045260246000fd5b8181029291811591840414171561134c57565b611323565b9190820391821161134c57565b1561136557565b60405162461bcd60e51b815260206004820152601b60248201527f444d54505f544543485f504152414d5f4b45595f494e56414c494400000000006044820152606490fd5b906001820180921161134c57565b9190820180921161134c57565b600052600080516020611c6383398151915260205260016040600020015490565b156113ed57565b60405162461bcd60e51b815260206004820152601f60248201527f444d54505f544543485f504152414d5f414444524553535f494e56414c4944006044820152606490fd5b6001600160a01b0381166000908152600460205260409020829054036114ea576114a69160209161147361028461028461028460025460018060a01b031690565b604051627eeac760e11b81526001600160a01b039092166004830152602482019290925292839190829081906044820190565b03915afa80156103fc576001916000916114cb575b50116114c657600090565b600190565b6114e4915060203d6020116104aa5761049b8183610b6a565b386114bb565b5050600190565b6114f961177b565b3360009081526004602052604090206115139054156116d9565b60095460ff16611644575b5061152a6001546113aa565b60025461153f906001600160a01b0316610284565b90813b1561023d5760405163731133e960e01b81523360048201526024810182905260016044820152608060648201526000608482018190529092839060a490829084905af19081156103fc577f21f36f1ce7fe044293979690e893402c51515f757aa4e48b13bcfb269a9b6410926116209261162f575b506115c181600155565b33600090815260046020526040902081905561160a336115eb836000526008602052604060002090565b80546001600160a01b0319166001600160a01b03909216919091179055565b6040805191825233602083015290918291820190565b0390a161162d6001600055565b565b80610470600061163e93610b6a565b386115b7565b6116ad6116d3916116a860405160208101906116a0816116923046338791604893916001600160601b03199060601b16835260148301526001600160601b03199060601b1660348201520190565b03601f198101835282610b6a565b519020611b35565b611b7a565b6003546116c2906001600160a01b0316610284565b6001600160a01b0390911614611725565b3861151e565b156116e057565b60405162461bcd60e51b815260206004820152601c60248201527f444d54505f544543485f414c52454144595f4953535545445f4b4559000000006044820152606490fd5b1561172c57565b60405162461bcd60e51b815260206004820152602160248201527f444d54505f544543485f504152414d5f5349474e41545552455f494e56414c496044820152601160fa1b6064820152608490fd5b60026000541461178c576002600055565b633ee5aeb560e01b60005260046000fd5b3360009081527f448256db8f8fb95ee3eaaf89c1051414494e85cebb6057fcf996cc3d0ccfb456602052604090205460ff16156117d657565b63e2517d3f60e01b600052336004527f97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b92960245260446000fd5b6000818152600080516020611c638339815191526020908152604080832033845290915290205460ff16156118415750565b63e2517d3f60e01b6000523360045260245260446000fd5b6001600160a01b03811660009081527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d602052604090205460ff16611905576001600160a01b031660008181527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d60205260408120805460ff191660011790553391907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4600190565b50600090565b6001600160a01b03811660009081527f448256db8f8fb95ee3eaaf89c1051414494e85cebb6057fcf996cc3d0ccfb456602052604090205460ff16611905576001600160a01b03811660009081527f448256db8f8fb95ee3eaaf89c1051414494e85cebb6057fcf996cc3d0ccfb45660205260409020805460ff1916600117905533906001600160a01b03167f97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b9297f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d600080a4600190565b6000818152600080516020611c63833981519152602090815260408083206001600160a01b038616845290915290205460ff16611a89576000818152600080516020611c63833981519152602090815260408083206001600160a01b03861684529091529020805460ff1916600117905533916001600160a01b0316907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d600080a4600190565b5050600090565b6000818152600080516020611c63833981519152602090815260408083206001600160a01b038616845290915290205460ff1615611a89576000818152600080516020611c63833981519152602090815260408083206001600160a01b03861684529091529020805460ff1916905533916001600160a01b0316907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b600080a4600190565b60405160208101917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008352603c820152603c8152611b74605c82610b6a565b51902090565b604182510361023d5760806000918360208095015160606040830151920151851a604051938452868401526040830152606082015282805260015afa156103fc5760005190565b9392919060ff600080516020611c838339815191525460401c1615611c515761162d9460018060a01b03166001600160601b0360a01b6002541617600255611c0833611859565b50611c123361190b565b5060018060a01b03166001600160601b0360a01b600354161760035560055560018060a01b03166001600160601b0360a01b6006541617600655600755565b631afcd79f60e31b60005260046000fdfe02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a164736f6c634300081c000a","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0xD54A882 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x15534028 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x238AC933 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x3943380C EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x5BA906C0 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x62BEA295 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x66C04491 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x6C19E783 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x79894F96 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x7D9EDC96 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x81803632 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x882E9918 EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x8D5EA68B EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x8DC9330F EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x8FD7C568 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x9FEF93F8 EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0xB0AFBFD2 EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0xB77C0F00 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0xE1489191 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xF5B541A6 EQ PUSH2 0x160 JUMPI PUSH4 0xF7C00E63 EQ PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D1 JUMP JUMPDEST PUSH2 0x1096 JUMP JUMPDEST PUSH2 0x105C JUMP JUMPDEST PUSH2 0x102B JUMP JUMPDEST PUSH2 0xFF0 JUMP JUMPDEST PUSH2 0xFBC JUMP JUMPDEST PUSH2 0xF30 JUMP JUMPDEST PUSH2 0xF14 JUMP JUMPDEST PUSH2 0xD1A JUMP JUMPDEST PUSH2 0xCBA JUMP JUMPDEST PUSH2 0xC97 JUMP JUMPDEST PUSH2 0xC14 JUMP JUMPDEST PUSH2 0xB91 JUMP JUMPDEST PUSH2 0xB23 JUMP JUMPDEST PUSH2 0xB06 JUMP JUMPDEST PUSH2 0xA93 JUMP JUMPDEST PUSH2 0x9F9 JUMP JUMPDEST PUSH2 0x986 JUMP JUMPDEST PUSH2 0x8FA JUMP JUMPDEST PUSH2 0x8C0 JUMP JUMPDEST PUSH2 0x813 JUMP JUMPDEST PUSH2 0x7EA JUMP JUMPDEST PUSH2 0x7A4 JUMP JUMPDEST PUSH2 0x76E JUMP JUMPDEST PUSH2 0x748 JUMP JUMPDEST PUSH2 0x71F JUMP JUMPDEST PUSH2 0x4F3 JUMP JUMPDEST PUSH2 0x242 JUMP JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x4 CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x23D JUMPI PUSH1 0x20 SWAP1 PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x22C JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x221 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0x261 PUSH2 0x177B JUMP JUMPDEST PUSH2 0x273 PUSH2 0x26E DUP4 CALLER PUSH2 0x1432 JUMP JUMPDEST PUSH2 0x1271 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x290 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x54787371 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 PUSH1 0x20 DUP4 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 SWAP4 PUSH2 0x47C JUMPI JUMPDEST POP DUP3 PUSH2 0x2C9 SWAP2 EQ PUSH2 0x12D7 JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x2D8 PUSH1 0x5 SLOAD DUP5 PUSH2 0x1339 JUMP JUMPDEST PUSH2 0x2710 SWAP1 DIV SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2EB DUP3 DUP5 PUSH2 0x1351 JUMP JUMPDEST DUP2 EXTCODESIZE ISZERO PUSH2 0x23D JUMPI PUSH1 0x40 MLOAD PUSH4 0x7A94C565 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x44 DUP3 ADD MSTORE SWAP2 PUSH1 0x0 SWAP1 DUP4 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 PUSH2 0x462 JUMPI JUMPDEST POP DUP2 DUP2 ISZERO PUSH2 0x459 JUMPI JUMPDEST CALLER SWAP1 CALL ISZERO PUSH2 0x3FC JUMPI PUSH2 0x357 PUSH2 0x2D8 PUSH1 0x7 SLOAD DUP5 PUSH2 0x1339 JUMP JUMPDEST DUP1 DUP1 ISZERO DUP1 ISZERO PUSH2 0x40A JUMPI JUMPDEST POP POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x3BF JUMPI JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x76BF686FC9CA17368677B445C3982FE5BDBA241B5B1EC5A879739A52E1620376 SWAP1 DUP1 PUSH1 0x60 DUP2 ADD JUMPDEST SUB SWAP1 LOG1 PUSH2 0x3BD PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 SWAP2 PUSH2 0x3E5 SWAP2 PUSH2 0x3DF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x284 JUMP JUMPDEST SWAP3 PUSH2 0x1351 JUMP JUMPDEST SWAP1 DUP3 DUP3 ISZERO PUSH2 0x401 JUMPI JUMPDEST CALL ISZERO PUSH2 0x3FC JUMPI CODESIZE DUP1 DUP1 PUSH2 0x375 JUMP JUMPDEST PUSH2 0x12CB JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP4 DUP2 SWAP4 PUSH2 0x43B PUSH2 0x284 PUSH2 0x284 PUSH2 0x42E DUP14 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 DUP4 SWAP1 PUSH2 0x450 JUMPI JUMPDEST CALL ISZERO PUSH2 0x3FC JUMPI DUP1 CODESIZE PUSH2 0x361 JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x443 JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x340 JUMP JUMPDEST DUP1 PUSH2 0x470 DUP5 PUSH2 0x476 SWAP4 PUSH2 0xB6A JUMP JUMPDEST DUP1 PUSH2 0x714 JUMP JUMPDEST CODESIZE PUSH2 0x337 JUMP JUMPDEST PUSH2 0x2C9 SWAP2 SWAP4 POP PUSH2 0x4A3 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4AA JUMPI JUMPDEST PUSH2 0x49B DUP2 DUP4 PUSH2 0xB6A JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x12BC JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x2BD JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x491 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x23D JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x23D JUMPI JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x23D JUMPI JUMP JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x50A PUSH2 0x4B1 JUMP JUMPDEST PUSH2 0x512 PUSH2 0x177B JUMP JUMPDEST PUSH2 0x520 PUSH1 0x1 SLOAD DUP4 GT ISZERO PUSH2 0x135E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x535 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x284 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB9186D7D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP1 PUSH1 0x20 DUP5 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 SWAP5 PUSH2 0x6F3 JUMPI JUMPDEST POP PUSH2 0x573 PUSH2 0x2D8 PUSH1 0x5 SLOAD DUP7 PUSH2 0x1339 JUMP JUMPDEST SWAP1 PUSH2 0x588 PUSH2 0x581 DUP4 DUP8 PUSH2 0x13B8 JUMP JUMPDEST CALLVALUE EQ PUSH2 0x12D7 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x23D JUMPI PUSH1 0x40 MLOAD PUSH4 0x731133E9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x84 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP2 DUP3 SWAP1 PUSH1 0xA4 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x3FC JUMPI PUSH2 0x6DE JUMPI JUMPDEST POP PUSH2 0x5F1 PUSH2 0x2D8 PUSH1 0x7 SLOAD DUP7 PUSH2 0x1339 JUMP JUMPDEST DUP1 DUP1 ISZERO DUP1 ISZERO PUSH2 0x69C JUMPI JUMPDEST POP POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x65C JUMPI JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE POP SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xCED28EA7EF5F4276044389E457757E3F21CA4368040C3B864E3890BCD56A9988 SWAP1 DUP1 PUSH1 0x60 DUP2 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 SWAP2 PUSH2 0x67C SWAP2 PUSH2 0x3DF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x284 JUMP JUMPDEST SWAP1 DUP3 DUP3 ISZERO PUSH2 0x693 JUMPI JUMPDEST CALL ISZERO PUSH2 0x3FC JUMPI CODESIZE DUP1 DUP1 PUSH2 0x60F JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x685 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP4 DUP2 SWAP4 PUSH2 0x6C0 PUSH2 0x284 PUSH2 0x284 PUSH2 0x42E DUP13 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 DUP4 SWAP1 PUSH2 0x6D5 JUMPI JUMPDEST CALL ISZERO PUSH2 0x3FC JUMPI DUP1 CODESIZE PUSH2 0x5FB JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x6C8 JUMP JUMPDEST DUP1 PUSH2 0x470 PUSH1 0x0 PUSH2 0x6ED SWAP4 PUSH2 0xB6A JUMP JUMPDEST CODESIZE PUSH2 0x5E1 JUMP JUMPDEST PUSH2 0x70D SWAP2 SWAP5 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4AA JUMPI PUSH2 0x49B DUP2 DUP4 PUSH2 0xB6A JUMP JUMPDEST SWAP3 CODESIZE PUSH2 0x563 JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x23D JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x20 PUSH2 0x766 PUSH1 0x4 CALLDATALOAD PUSH2 0x13C5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH2 0x3BD PUSH1 0x4 CALLDATALOAD PUSH2 0x78D PUSH2 0x4B1 JUMP JUMPDEST SWAP1 PUSH2 0x79F PUSH2 0x79A DUP3 PUSH2 0x13C5 JUMP JUMPDEST PUSH2 0x180F JUMP JUMPDEST PUSH2 0x19E2 JUMP JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x7C0 PUSH2 0x4B1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x7D9 JUMPI PUSH2 0x3BD SWAP2 PUSH2 0x1A90 JUMP JUMPDEST PUSH4 0x334BD919 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB9186D7D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 SWAP2 PUSH2 0x8A1 JUMPI JUMPDEST POP PUSH2 0x2710 PUSH2 0x871 PUSH1 0x5 SLOAD DUP4 PUSH2 0x1339 JUMP JUMPDEST DIV SWAP1 PUSH2 0x89D PUSH2 0x880 DUP4 DUP4 PUSH2 0x13B8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x8BA SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4AA JUMPI PUSH2 0x49B DUP2 DUP4 PUSH2 0xB6A JUMP JUMPDEST CODESIZE PUSH2 0x861 JUMP JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x8E1 PUSH2 0x4C7 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x54787371 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 SWAP2 PUSH2 0x967 JUMPI JUMPDEST POP PUSH2 0x2710 PUSH2 0x958 PUSH1 0x5 SLOAD DUP4 PUSH2 0x1339 JUMP JUMPDEST DIV SWAP1 PUSH2 0x89D PUSH2 0x880 DUP4 DUP4 PUSH2 0x1351 JUMP JUMPDEST PUSH2 0x980 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4AA JUMPI PUSH2 0x49B DUP2 DUP4 PUSH2 0xB6A JUMP JUMPDEST CODESIZE PUSH2 0x948 JUMP JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH32 0x9EAA897564D022FB8C5EFAF0ACDB5D9D27B440B2AAD44400B6E1C702E65B9ED3 PUSH1 0x20 PUSH2 0x9C2 PUSH2 0x4C7 JUMP JUMPDEST PUSH2 0x9CA PUSH2 0x179D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9DE DUP2 ISZERO ISZERO PUSH2 0x13E6 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH32 0x827988AA1B695AB4719B95A49399FB75159954CC25D5B37C53CF23E8A6A58D36 PUSH1 0x4 CALLDATALOAD PUSH2 0xA36 PUSH2 0x4B1 JUMP JUMPDEST SWAP1 PUSH2 0xA8E PUSH1 0x44 CALLDATALOAD PUSH2 0xA45 PUSH2 0x179D JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND SWAP5 DUP6 OR SWAP1 SSTORE PUSH1 0x5 DUP4 SWAP1 SSTORE PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x60 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH32 0x9C421F75C1B2CD6CDF5BD68AE0986AD4518D273A5C59745AC6454392B0B709A5 PUSH1 0x20 PUSH2 0xACF PUSH2 0x4C7 JUMP JUMPDEST PUSH2 0xAD7 PUSH2 0x179D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xAEB DUP2 ISZERO ISZERO PUSH2 0x13E6 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x2710 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x20 PUSH2 0xB4A PUSH2 0xB41 PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x1432 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB8C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xB54 JUMP JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x23D JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x23D JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xB8C JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0xBEB PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP4 PUSH2 0xB6A JUMP JUMPDEST DUP1 DUP3 MSTORE CALLDATASIZE PUSH1 0x24 DUP3 DUP6 ADD ADD GT PUSH2 0x23D JUMPI PUSH1 0x20 DUP2 PUSH1 0x0 SWAP3 PUSH1 0x24 PUSH2 0x3BD SWAP7 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH2 0x14F1 JUMP JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH2 0x3BD PUSH1 0x4 CALLDATALOAD PUSH2 0xC33 PUSH2 0x4B1 JUMP JUMPDEST SWAP1 PUSH2 0xC3C PUSH2 0x179D JUMP JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0xC8B JUMPI JUMPDEST PUSH2 0xC4E SWAP1 PUSH2 0x135E JUMP JUMPDEST PUSH2 0xC62 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x13E6 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE JUMP JUMPDEST POP PUSH1 0x1 SLOAD DUP2 GT ISZERO PUSH2 0xC45 JUMP JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x9 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0xD0E PUSH1 0x4 CALLDATALOAD PUSH2 0xCDD PUSH2 0x4B1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C63 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xD31 PUSH2 0x177B JUMP JUMPDEST PUSH2 0xD3F PUSH1 0x1 SLOAD DUP3 GT ISZERO PUSH2 0x135E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xD54 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x284 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB9186D7D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH1 0x20 DUP3 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 SWAP3 PUSH2 0xEF3 JUMPI JUMPDEST POP PUSH2 0xD91 PUSH2 0x2D8 PUSH1 0x5 SLOAD DUP5 PUSH2 0x1339 JUMP JUMPDEST SWAP1 PUSH2 0xD9F PUSH2 0x581 DUP4 DUP6 PUSH2 0x13B8 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x23D JUMPI PUSH1 0x40 MLOAD PUSH4 0x731133E9 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x84 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP2 DUP3 SWAP1 PUSH1 0xA4 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x3FC JUMPI PUSH2 0xEDE JUMPI JUMPDEST POP PUSH2 0xDFF PUSH2 0x2D8 PUSH1 0x7 SLOAD DUP5 PUSH2 0x1339 JUMP JUMPDEST DUP1 DUP1 ISZERO DUP1 ISZERO PUSH2 0xE9C JUMPI JUMPDEST POP POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xE5C JUMPI JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0xCED28EA7EF5F4276044389E457757E3F21CA4368040C3B864E3890BCD56A9988 SWAP1 DUP1 PUSH1 0x60 DUP2 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 SWAP2 PUSH2 0xE7C SWAP2 PUSH2 0x3DF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x284 JUMP JUMPDEST SWAP1 DUP3 DUP3 ISZERO PUSH2 0xE93 JUMPI JUMPDEST CALL ISZERO PUSH2 0x3FC JUMPI CODESIZE DUP1 DUP1 PUSH2 0xE1D JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0xE85 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP4 DUP2 SWAP4 PUSH2 0xEC0 PUSH2 0x284 PUSH2 0x284 PUSH2 0x42E DUP14 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 DUP4 SWAP1 PUSH2 0xED5 JUMPI JUMPDEST CALL ISZERO PUSH2 0x3FC JUMPI DUP1 CODESIZE PUSH2 0xE09 JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0xEC8 JUMP JUMPDEST DUP1 PUSH2 0x470 PUSH1 0x0 PUSH2 0xEED SWAP4 PUSH2 0xB6A JUMP JUMPDEST CODESIZE PUSH2 0xDEF JUMP JUMPDEST PUSH2 0xF0D SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4AA JUMPI PUSH2 0x49B DUP2 DUP4 PUSH2 0xB6A JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0xD81 JUMP JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO DUP1 ISZERO DUP1 SWAP3 SUB PUSH2 0x23D JUMPI PUSH2 0xF57 PUSH2 0x179D JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP2 PUSH1 0xFF DUP4 AND ISZERO ISZERO EQ PUSH2 0xF77 JUMPI PUSH1 0xFF AND SWAP1 PUSH1 0xFF NOT AND OR PUSH1 0x9 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x444D54505F544543485F434F4E4649475F4841535F5345540000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH2 0x3BD PUSH1 0x4 CALLDATALOAD PUSH2 0x104A PUSH2 0x4B1 JUMP JUMPDEST SWAP1 PUSH2 0x1057 PUSH2 0x79A DUP3 PUSH2 0x13C5 JUMP JUMPDEST PUSH2 0x1A90 JUMP JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x97667070C54EF182B0F5858B034BEAC1B6F3089AA2D3188BB1E8929F4FA9B929 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23D JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI PUSH2 0x10EA PUSH2 0x4C7 JUMP JUMPDEST PUSH2 0x10F2 PUSH2 0x4B1 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH2 0x10FE PUSH2 0x4DD JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C83 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP5 PUSH8 0xFFFFFFFFFFFFFFFF PUSH2 0x1142 PUSH2 0x1134 PUSH2 0x1130 DUP10 PUSH1 0xFF SWAP1 PUSH1 0x40 SHR AND SWAP1 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST SWAP8 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x1269 JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x125F JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x1256 JUMPI JUMPDEST POP PUSH2 0x1245 JUMPI PUSH2 0x11A4 SWAP5 DUP7 PUSH2 0x119B PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF NOT PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C83 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C83 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST PUSH2 0x1209 JUMPI PUSH2 0x1BC1 JUMP JUMPDEST PUSH2 0x11AA JUMPI STOP JUMPDEST PUSH2 0x11D6 PUSH1 0xFF PUSH1 0x40 SHL NOT PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C83 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C83 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 DUP1 PUSH1 0x20 DUP2 ADD PUSH2 0xA8E JUMP JUMPDEST PUSH2 0x1240 PUSH9 0x10000000000000000 PUSH1 0xFF PUSH1 0x40 SHL NOT PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C83 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C83 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST PUSH2 0x1BC1 JUMP JUMPDEST PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP ISZERO CODESIZE PUSH2 0x115E JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x1156 JUMP JUMPDEST DUP8 SWAP2 POP PUSH2 0x114C JUMP JUMPDEST ISZERO PUSH2 0x1278 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x444D54505F544543485F4E4F545F414C4C4F575F544F5F53454C4C5F4B455953 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x23D JUMPI MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x12DE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x444D54505F544543485F50524943455F4348414E474544000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x134C JUMPI JUMP JUMPDEST PUSH2 0x1323 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x134C JUMPI JUMP JUMPDEST ISZERO PUSH2 0x1365 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x444D54505F544543485F504152414D5F4B45595F494E56414C49440000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x134C JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x134C JUMPI JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C63 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x13ED JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x444D54505F544543485F504152414D5F414444524553535F494E56414C494400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 SWAP1 SLOAD SUB PUSH2 0x14EA JUMPI PUSH2 0x14A6 SWAP2 PUSH1 0x20 SWAP2 PUSH2 0x1473 PUSH2 0x284 PUSH2 0x284 PUSH2 0x284 PUSH1 0x2 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x7EEAC7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0x3FC JUMPI PUSH1 0x1 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x14CB JUMPI JUMPDEST POP GT PUSH2 0x14C6 JUMPI PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x14E4 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4AA JUMPI PUSH2 0x49B DUP2 DUP4 PUSH2 0xB6A JUMP JUMPDEST CODESIZE PUSH2 0x14BB JUMP JUMPDEST POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x14F9 PUSH2 0x177B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1513 SWAP1 SLOAD ISZERO PUSH2 0x16D9 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND PUSH2 0x1644 JUMPI JUMPDEST POP PUSH2 0x152A PUSH1 0x1 SLOAD PUSH2 0x13AA JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x153F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x284 JUMP JUMPDEST SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x23D JUMPI PUSH1 0x40 MLOAD PUSH4 0x731133E9 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x84 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP3 DUP4 SWAP1 PUSH1 0xA4 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x3FC JUMPI PUSH32 0x21F36F1CE7FE044293979690E893402C51515F757AA4E48B13BCFB269A9B6410 SWAP3 PUSH2 0x1620 SWAP3 PUSH2 0x162F JUMPI JUMPDEST POP PUSH2 0x15C1 DUP2 PUSH1 0x1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0x160A CALLER PUSH2 0x15EB DUP4 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE CALLER PUSH1 0x20 DUP4 ADD MSTORE SWAP1 SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH2 0x162D PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH2 0x470 PUSH1 0x0 PUSH2 0x163E SWAP4 PUSH2 0xB6A JUMP JUMPDEST CODESIZE PUSH2 0x15B7 JUMP JUMPDEST PUSH2 0x16AD PUSH2 0x16D3 SWAP2 PUSH2 0x16A8 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x16A0 DUP2 PUSH2 0x1692 ADDRESS CHAINID CALLER DUP8 SWAP2 PUSH1 0x48 SWAP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT SWAP1 PUSH1 0x60 SHL AND DUP4 MSTORE PUSH1 0x14 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT SWAP1 PUSH1 0x60 SHL AND PUSH1 0x34 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xB6A JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x1B35 JUMP JUMPDEST PUSH2 0x1B7A JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x16C2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x284 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND EQ PUSH2 0x1725 JUMP JUMPDEST CODESIZE PUSH2 0x151E JUMP JUMPDEST ISZERO PUSH2 0x16E0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x444D54505F544543485F414C52454144595F4953535545445F4B455900000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x172C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x444D54505F544543485F504152414D5F5349474E41545552455F494E56414C49 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0x178C JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x448256DB8F8FB95EE3EAAF89C1051414494E85CEBB6057FCF996CC3D0CCFB456 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x17D6 JUMPI JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH32 0x97667070C54EF182B0F5858B034BEAC1B6F3089AA2D3188BB1E8929F4FA9B929 PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C63 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1841 JUMPI POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xB7DB2DD08FCB62D0C9E08C51941CAE53C267786A0B75803FB7960902FC8EF97D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1905 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xB7DB2DD08FCB62D0C9E08C51941CAE53C267786A0B75803FB7960902FC8EF97D PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP2 SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x448256DB8F8FB95EE3EAAF89C1051414494E85CEBB6057FCF996CC3D0CCFB456 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1905 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x448256DB8F8FB95EE3EAAF89C1051414494E85CEBB6057FCF996CC3D0CCFB456 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x97667070C54EF182B0F5858B034BEAC1B6F3089AA2D3188BB1E8929F4FA9B929 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C63 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1A89 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C63 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C63 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1A89 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C63 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP2 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP4 MSTORE PUSH1 0x3C DUP3 ADD MSTORE PUSH1 0x3C DUP2 MSTORE PUSH2 0x1B74 PUSH1 0x5C DUP3 PUSH2 0xB6A JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x41 DUP3 MLOAD SUB PUSH2 0x23D JUMPI PUSH1 0x80 PUSH1 0x0 SWAP2 DUP4 PUSH1 0x20 DUP1 SWAP6 ADD MLOAD PUSH1 0x60 PUSH1 0x40 DUP4 ADD MLOAD SWAP3 ADD MLOAD DUP6 BYTE PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE DUP7 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 MLOAD SWAP1 JUMP JUMPDEST SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C83 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x1C51 JUMPI PUSH2 0x162D SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH2 0x1C08 CALLER PUSH2 0x1859 JUMP JUMPDEST POP PUSH2 0x1C12 CALLER PUSH2 0x190B JUMP JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH1 0x5 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x6 SLOAD AND OR PUSH1 0x6 SSTORE PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH4 0x1AFCD79F PUSH1 0xE3 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT INVALID MUL 0xDD PUSH28 0xC7DEC4DCEEDDA775E58DD541E08A116C6C53815C0BD028192F7B6268 STOP CREATE 0xC5 PUSH31 0x16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00A164 PUSH20 0x6F6C634300081C000A0000000000000000000000 ","sourceMap":"355:7576:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;-1:-1:-1;;355:7576:10;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3551:47:0;;;:87;;;;355:7576:10;;;;;;;;;;3551:87:0;-1:-1:-1;;;1134:40:3;;-1:-1:-1;3551:87:0;;;355:7576:10;-1:-1:-1;355:7576:10;;;;;;;;-1:-1:-1;;355:7576:10;;;;;;;;2466:103:7;;:::i;:::-;3399:106:10;3420:27;966:10:2;;3420:27:10;:::i;:::-;3399:106;:::i;:::-;3532:3;355:7576;3532:15;;-1:-1:-1;;;;;355:7576:10;;-1:-1:-1;;;;;355:7576:10;;;3532:15;355:7576;;-1:-1:-1;;;3532:20:10;;355:7576;3532:20;;355:7576;;;;;;;;3532:20;;;;;;;;-1:-1:-1;3532:20:10;;;355:7576;3570:15;;3562:51;3570:15;;3562:51;:::i;:::-;3638:45;3639:23;3647:10;355:7576;3639:23;;:::i;:::-;510:6;355:7576;;;;3638:45;3710:11;;;;;:::i;:::-;3732:24;;;;;355:7576;;-1:-1:-1;;;3732:24:10;;966:10:2;355:7576:10;3732:24;;355:7576;;;;;;;3754:1;355:7576;;;;;-1:-1:-1;;355:7576:10;;;;;;-1:-1:-1;;3732:24:10;;;;;;;-1:-1:-1;;;;;;;;3732:24:10;;355:7576;3767:32;;;;;;355:7576;966:10:2;3767:32:10;;;;;3836:69;3837:35;3845:27;355:7576;3837:35;;:::i;3836:69::-;3919:19;;;;;3915:103;;355:7576;-1:-1:-1;;4032:19:10;355:7576;-1:-1:-1;;;;;355:7576:10;;4028:124;;355:7576;;;;;;;966:10:2;355:7576:10;;;;;;;;;;4167:27;;355:7576;;;;4167:27;;;;2531:1:7;1857;3068:21;355:7576:10;2888:208:7;2531:1;355:7576:10;4028:124;-1:-1:-1;;;;;;;;4081:28:10;4119:21;;4081:37;;-1:-1:-1;;;;;355:7576:10;4081:28;355:7576;4081:37;4119:21;;:::i;:::-;4081:60;;;;;;4028:124;4081:60;;;;4028:124;;;;;4081:60;;:::i;:::-;;;;;3915:103;-1:-1:-1;3962:18:10;;;;;3954:36;:27;3962:18;;;355:7576;;3962:13;355:7576;;;;;;;3962:18;355:7576;-1:-1:-1;;;;;355:7576:10;;;3954:36;:53;;;;;3915:103;3954:53;;;;3915:103;;;;3954:53;;;;;3767:32;;;;;3732:24;;;;;;;:::i;:::-;;;:::i;:::-;;;;3532:20;3562:51;3532:20;;;;;355:7576;3532:20;355:7576;3532:20;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;355:7576;;;;-1:-1:-1;;;;;355:7576:10;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;355:7576:10;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;355:7576:10;;;;;;:::o;:::-;;;-1:-1:-1;;355:7576:10;;;;;;;;:::i;:::-;2466:103:7;;:::i;:::-;7203:60:10;7218:13;355:7576;7211:20;;;7203:60;:::i;:::-;7290:3;355:7576;7290:11;;-1:-1:-1;;;;;355:7576:10;;;7290:11;355:7576;;-1:-1:-1;;;7290:16:10;;355:7576;7290:16;;355:7576;;;;;;;;;;7290:16;;;;;;;-1:-1:-1;7290:16:10;;;355:7576;;7331:45;7332:23;7340:10;355:7576;7332:23;;:::i;7331:45::-;7403:11;7425:55;7403:11;;;;:::i;:::-;7433:9;:19;7425:55;:::i;:::-;7491:31;;;;;355:7576;;-1:-1:-1;;;7491:31:10;;-1:-1:-1;;;;;355:7576:10;;;7491:31;;355:7576;;;;;;;;;;;;;;;;;-1:-1:-1;355:7576:10;;;;;;;;;;;;;;-1:-1:-1;;7491:31:10;;;;;;;;355:7576;;7559:69;7560:35;7568:27;355:7576;7560:35;;:::i;7559:69::-;7642:19;;;;;7638:103;;355:7576;-1:-1:-1;;7755:19:10;355:7576;-1:-1:-1;;;;;355:7576:10;;7751:124;;355:7576;-1:-1:-1;;355:7576:10;;;;;;-1:-1:-1;;;;;355:7576:10;;;;;;;-1:-1:-1;355:7576:10;;;;;;;7890:32;;355:7576;;;;7890:32;355:7576;7751:124;-1:-1:-1;;;;;;;;7804:28:10;7842:21;;7804:37;;-1:-1:-1;;;;;355:7576:10;7804:28;355:7576;7842:21;7804:60;;;;;;7751:124;7804:60;;;;7751:124;;;;;7804:60;;;;;7638:103;-1:-1:-1;7685:18:10;;;;;7677:36;:27;7685:18;;;355:7576;;3962:13;355:7576;;;;;;;7677:36;:53;;;;;7638:103;7677:53;;;;7638:103;;;;7677:53;;;;;7491:31;;;-1:-1:-1;7491:31:10;;;:::i;:::-;;;;7290:16;;;;;355:7576;7290:16;355:7576;7290:16;;;;;;;:::i;:::-;;;;;355:7576;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;355:7576:10;;;;1082:21;355:7576;;;-1:-1:-1;;;;;355:7576:10;;;;;;;;;;;;;;-1:-1:-1;;355:7576:10;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;355:7576:10;;;;5350:25:0;355:7576:10;;;;:::i;:::-;5320:18:0;3202:4;5320:18;;;:::i;:::-;3202:4;:::i;:::-;5350:25;:::i;355:7576:10:-;;;;;;-1:-1:-1;;355:7576:10;;;;;;;;:::i;:::-;966:10:2;-1:-1:-1;;;;;355:7576:10;;6441:34:0;6437:102;;6549:37;;;:::i;6437:102::-;6498:30;;;-1:-1:-1;6498:30:0;355:7576:10;-1:-1:-1;6498:30:0;355:7576:10;;;;;;-1:-1:-1;;355:7576:10;;;;1061:15;355:7576;;;-1:-1:-1;;;;;355:7576:10;;;;;;;;;;;;;;-1:-1:-1;;355:7576:10;;;;5682:3;355:7576;;;-1:-1:-1;;;5682:16:10;;355:7576;;;5682:16;;;355:7576;;;;;;5682:16;;355:7576;;-1:-1:-1;;;;;355:7576:10;5682:16;;;;;;;-1:-1:-1;5682:16:10;;;355:7576;;510:6;5715:23;5723:10;355:7576;5715:23;;:::i;:::-;355:7576;5778:11;355:7576;5778:11;;;;:::i;:::-;355:7576;;;;;;;;;;;;;;;;;;;;;;;;;;;;5682:16;;;;355:7576;5682:16;355:7576;5682:16;;;;;;;:::i;:::-;;;;355:7576;;;;;;-1:-1:-1;;355:7576:10;;;;-1:-1:-1;;;;;355:7576:10;;:::i;:::-;;-1:-1:-1;355:7576:10;;;;;;-1:-1:-1;355:7576:10;;;;;;;;;;;;;;-1:-1:-1;;355:7576:10;;;;5984:3;355:7576;;;-1:-1:-1;;;5984:20:10;;355:7576;;;5984:20;;;355:7576;;;;;;5984:20;;355:7576;;-1:-1:-1;;;;;355:7576:10;5984:20;;;;;;;-1:-1:-1;5984:20:10;;;355:7576;;510:6;6021:23;6029:10;355:7576;6021:23;;:::i;:::-;355:7576;6084:11;355:7576;6084:11;;;;:::i;5984:20::-;;;;355:7576;5984:20;355:7576;5984:20;;;;;;;:::i;:::-;;;;355:7576;;;;;;-1:-1:-1;;355:7576:10;;;;2443:18;355:7576;;;:::i;:::-;3202:4:0;;:::i;:::-;-1:-1:-1;;;;;355:7576:10;2335:65;2343:21;;;2335:65;:::i;:::-;2411:16;355:7576;;-1:-1:-1;;;;;;355:7576:10;;;;;;;;;;2443:18;355:7576;;;;;;;-1:-1:-1;;355:7576:10;;;;5474:54;355:7576;;;;:::i;:::-;;5474:54;355:7576;;3202:4:0;;:::i;:::-;5337:19:10;355:7576;;-1:-1:-1;;;;;;355:7576:10;-1:-1:-1;;;;;355:7576:10;;;;;;;;;5337:10;355:7576;;;5411:27;355:7576;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5474:54;;;;355:7576;;;;;;;-1:-1:-1;;355:7576:10;;;;5143:24;355:7576;;;:::i;:::-;3202:4:0;;:::i;:::-;-1:-1:-1;;;;;355:7576:10;5038:62;5046:18;;;5038:62;:::i;:::-;5111:16;355:7576;;-1:-1:-1;;;;;;355:7576:10;;;;;;;;;;5143:24;355:7576;;;;;;;-1:-1:-1;;355:7576:10;;;;;;;510:6;355:7576;;;;;;;;;-1:-1:-1;;355:7576:10;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;-1:-1:-1;;355:7576:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;355:7576:10;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;355:7576:10;;4207:744;355:7576;;;;;;;;;;4207:744;:::i;355:7576::-;;;;;;-1:-1:-1;;355:7576:10;;;;6467:32;355:7576;;;;:::i;:::-;3202:4:0;;;:::i;:::-;6290:10:10;;;:37;;;355:7576;6269:111;;;:::i;:::-;6390:66;-1:-1:-1;;;;;355:7576:10;;6398:22;;6390:66;:::i;:::-;-1:-1:-1;355:7576:10;6467:13;355:7576;;;-1:-1:-1;355:7576:10;;;;;;;;-1:-1:-1;;;;;355:7576:10;;;;;;;;;6290:37;-1:-1:-1;6314:13:10;355:7576;6304:23;;;6290:37;;355:7576;;;;;;-1:-1:-1;;355:7576:10;;;;;;1249:32;355:7576;;;;;;;;;;;;;;;;-1:-1:-1;;355:7576:10;;;;;;3901:31:0;355:7576:10;;;;:::i;:::-;;-1:-1:-1;355:7576:10;-1:-1:-1;;;;;;;;;;;355:7576:10;;;-1:-1:-1;355:7576:10;;;;;;;;;;;;;;;;;3901:31:0;355:7576:10;;;;;;;;;;;;;-1:-1:-1;;355:7576:10;;;;;;2466:103:7;;:::i;:::-;2543:60:10;2558:13;355:7576;2551:20;;;2543:60;:::i;:::-;2630:3;355:7576;2630:11;;-1:-1:-1;;;;;355:7576:10;;;2630:11;355:7576;;-1:-1:-1;;;2630:16:10;;355:7576;2630:16;;355:7576;;;;;;;;;2630:16;;;;;;;-1:-1:-1;2630:16:10;;;355:7576;;2671:45;2672:23;2680:10;355:7576;2672:23;;:::i;2671:45::-;2743:11;2765:55;2743:11;;;;:::i;2765:55::-;2831:34;;;;;355:7576;;-1:-1:-1;;;2831:34:10;;966:10:2;355:7576:10;2831:34;;355:7576;;;;;;;;;;;;;;;;;-1:-1:-1;355:7576:10;;;;;;;;;;;;;;-1:-1:-1;;2831:34:10;;;;;;;;355:7576;;2902:69;2903:35;2911:27;355:7576;2903:35;;:::i;2902:69::-;2985:19;;;;;2981:103;;355:7576;-1:-1:-1;;3098:19:10;355:7576;-1:-1:-1;;;;;355:7576:10;;3094:124;;355:7576;;;;;;;966:10:2;355:7576:10;;;;;;;;;;3233:35;;355:7576;;;;3233:35;355:7576;3094:124;-1:-1:-1;;;;;;;;3147:28:10;3185:21;;3147:37;;-1:-1:-1;;;;;355:7576:10;3147:28;355:7576;3185:21;3147:60;;;;;;3094:124;3147:60;;;;3094:124;;;;;3147:60;;;;;2981:103;-1:-1:-1;3028:18:10;;;;;3020:36;:27;3028:18;;;355:7576;;3962:13;355:7576;;;;;;;3020:36;:53;;;;;2981:103;3020:53;;;;2981:103;;;;3020:53;;;;;2831:34;;;-1:-1:-1;2831:34:10;;;:::i;:::-;;;;2630:16;;;;;355:7576;2630:16;355:7576;2630:16;;;;;;;:::i;:::-;;;;;355:7576;;;;;;-1:-1:-1;;355:7576:10;;;;;;;;;;;;;;;;;-1:-1:-1;;355:7576:10;;;;;;;;;;;;;;;3202:4:0;;:::i;:::-;6987:20:10;355:7576;;;;;;;6977:30;355:7576;;;;;;;;;6987:20;355:7576;-1:-1:-1;355:7576:10;;;;;-1:-1:-1;;;355:7576:10;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;355:7576:10;;;;;;-1:-1:-1;355:7576:10;1195:48;355:7576;;;;;;;;;-1:-1:-1;355:7576:10;;;;;;;;;;;;;;;-1:-1:-1;;355:7576:10;;;;;;;311:24:9;355:7576:10;;;;;;;;;-1:-1:-1;;355:7576:10;;;;5767:26:0;355:7576:10;;;;:::i;:::-;5737:18:0;3202:4;5737:18;;;:::i;3202:4::-;5767:26;:::i;355:7576:10:-;;;;;;-1:-1:-1;;355:7576:10;;;;1160:28;355:7576;1160:28;355:7576;1160:28;355:7576;;;;;;;-1:-1:-1;;;;;355:7576:10;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;355:7576:10;;;;;;;243:26:9;355:7576:10;;;;;;;;;-1:-1:-1;;355:7576:10;;;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;;;;;355:7576:10;;;;4301:16:1;355:7576:10;;;;;;;;;;4301:16:1;;355:7576:10;4301:16:1;355:7576:10;;;;;;;4726:16:1;;:34;;;;355:7576:10;4805:1:1;4790:16;:50;;;;355:7576:10;4855:13:1;:30;;;;355:7576:10;4851:91:1;;;2206:27:10;4951:18:1;;;355:7576:10;;;-1:-1:-1;;;;;;;;;;;355:7576:10;;;-1:-1:-1;;;;;;;;;;;355:7576:10;;4951:18:1;4979:67;;2206:27:10;:::i;:::-;5066:101:1;;355:7576:10;5066:101:1;5100:23;-1:-1:-1;;;355:7576:10;-1:-1:-1;;;;;;;;;;;355:7576:10;;-1:-1:-1;;;;;;;;;;;355:7576:10;;5100:23:1;355:7576:10;;4805:1:1;355:7576:10;;5142:14:1;;355:7576:10;;;;5142:14:1;355:7576:10;4979:67:1;5013:22;355:7576:10;-1:-1:-1;;;355:7576:10;-1:-1:-1;;;;;;;;;;;355:7576:10;;;-1:-1:-1;;;;;;;;;;;355:7576:10;;5013:22:1;2206:27:10;:::i;4851:91:1:-;4908:23;;;-1:-1:-1;4908:23:1;355:7576:10;-1:-1:-1;4908:23:1;4855:30;4872:13;;;4855:30;;;4790:50;4818:4;4810:25;:30;;-1:-1:-1;4790:50:1;;4726:34;;;-1:-1:-1;4726:34:1;;355:7576:10;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;355:7576:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;355:7576:10;;;;;;;;;;;;;;;;;;;;;;4746:13;355:7576;;;;;;;:::o;:::-;;;;;;;;;;:::o;4759:191:0:-;-1:-1:-1;355:7576:10;-1:-1:-1;;;;;;;;;;;355:7576:10;;4919:24:0;355:7576:10;-1:-1:-1;355:7576:10;4919:24:0;355:7576:10;4759:191:0;:::o;355:7576:10:-;;;;:::o;:::-;;;-1:-1:-1;;;355:7576:10;;;;;;;;;;;;;;;;;;;;6512:348;-1:-1:-1;;;;;355:7576:10;;;;;;6629:9;355:7576;;;;;6629:18;;355:7576;6629:25;6625:67;;6721:46;355:7576;6721:46;355:7576;6721:32;:22;6730:12;355:7576;6738:3;355:7576;;;;;;;;;6721:32;355:7576;;-1:-1:-1;;;6721:46:10;;-1:-1:-1;;;;;355:7576:10;;;6629:9;6721:46;;355:7576;;;;;;;;;;;;;;;;;;;;;6721:46;;;;;;;;;6792:1;6721:46;355:7576;6721:46;;;6512:348;6781:12;;6777:54;;355:7576;6512:348;:::o;6777:54::-;6792:1;6809:11;:::o;6721:46::-;;;;;;;;;;;;;;:::i;:::-;;;;6625:67;6670:11;;6677:4;6670:11;:::o;2466:103:7:-;;;:::i;:::-;966:10:2;355:7576:10;;;;6629:9;355:7576;;;;;4324:63;;355:7576;4332:22;4324:63;:::i;:::-;4402:20;355:7576;;;4398:325;;2466:103:7;355:7576:10;4746:17;:13;355:7576;4746:17;:::i;:::-;4774:3;355:7576;4774:8;;-1:-1:-1;;;;;355:7576:10;;;4774:8;:33;;;;;;355:7576;;-1:-1:-1;;;4774:33:10;;966:10:2;4332:9:10;4774:33;;355:7576;;;;;;;;;;;;;;;;;-1:-1:-1;355:7576:10;;;;;;;;;;;;;;-1:-1:-1;;4774:33:10;;;;;;;4920:24;4774:33;4920:24;4774:33;;;2466:103:7;4818:18:10;;;4746:13;355:7576;;4818:18;966:10:2;355:7576:10;;;;6629:9;355:7576;;;;;966:10:2;;355:7576:10;4878:26;966:10:2;4878:17:10;;355:7576;;3962:13;355:7576;;;;;;;4878:17;355:7576;;-1:-1:-1;;;;;;355:7576:10;-1:-1:-1;;;;;355:7576:10;;;;;;;;;;4878:26;355:7576;;;;;;966:10:2;355:7576:10;;;;;;;;;;;;4920:24;;;;2531:1:7;1857;3068:21;355:7576:10;2888:208:7;2531:1;2466:103::o;4774:33:10:-;;;-1:-1:-1;4774:33:10;;;:::i;:::-;;;;4398:325;4602:33;4577:135;355:7576;4456:106;355:7576;;4483:54;;;4531:4;4483:54;4531:4;4483:54;4531:4;4508:13;966:10:2;4483:54:10;355:7576;;;;-1:-1:-1;;;;;355:7576:10;;;;;;;;;;;-1:-1:-1;;;;;355:7576:10;;;;;;;;;;;;4483:54;;355:7576;;4483:54;;;;;;:::i;:::-;355:7576;4456:95;;:106;:::i;:::-;4602:33;:::i;:::-;4639:6;355:7576;4602:43;;-1:-1:-1;;;;;355:7576:10;;;4602:43;-1:-1:-1;;;;;355:7576:10;;;4602:43;4577:135;:::i;:::-;4398:325;;;355:7576;;;;:::o;:::-;;;-1:-1:-1;;;355:7576:10;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;355:7576:10;;;;;;;;;;;;;;;;;-1:-1:-1;;;355:7576:10;;;;;;;2575:307:7;1899:1;2702:7;355:7576:10;2702:18:7;2698:86;;1899:1;2702:7;355:7576:10;2575:307:7:o;2698:86::-;2743:30;;;2702:7;2743:30;;2702:7;2743:30;4148:103:0;966:10:2;-1:-1:-1;355:7576:10;;;;;;;;;;;;4468:23:0;4464:108;;4148:103::o;4464:108::-;4514:47;;;-1:-1:-1;4514:47:0;966:10:2;4514:47:0;355:7576:10;243:26:9;355:7576:10;;;-1:-1:-1;4514:47:0;4148:103;-1:-1:-1;355:7576:10;;;-1:-1:-1;;;;;;;;;;;355:7576:10;;;;;;;;966:10:2;355:7576:10;;;;;;;;;;4468:23:0;4464:108;;4148:103;:::o;4464:108::-;4514:47;;;-1:-1:-1;4514:47:0;966:10:2;4514:47:0;355:7576:10;;;;-1:-1:-1;4514:47:0;7270:387;-1:-1:-1;;;;;355:7576:10;;2362:4:0;355:7576:10;;;;;;;;;;;;;;-1:-1:-1;;;;;355:7576:10;2362:4:0;355:7576:10;;;;;;;;;;;-1:-1:-1;;355:7576:10;7509:4:0;355:7576:10;;;966:10:2;;355:7576:10;7532:40:0;2362:4;;7532:40;7509:4;7586:11;:::o;7432:219::-;7628:12;2362:4;7628:12;:::o;7270:387::-;-1:-1:-1;;;;;355:7576:10;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;355:7576:10;;;;;;;;;;;;;;-1:-1:-1;;355:7576:10;7509:4:0;355:7576:10;;;966:10:2;;-1:-1:-1;;;;;355:7576:10;243:26:9;7532:40:0;-1:-1:-1;;7532:40:0;7509:4;7586:11;:::o;7270:387::-;355:7576:10;;;;-1:-1:-1;;;;;;;;;;;355:7576:10;;;;;;;;-1:-1:-1;;;;;355:7576:10;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;355:7576:10;;;;;;;;-1:-1:-1;;;;;355:7576:10;;;;;;;;;;;-1:-1:-1;;355:7576:10;7509:4:0;355:7576:10;;;966:10:2;;-1:-1:-1;;;;;355:7576:10;;7532:40:0;-1:-1:-1;;7532:40:0;7509:4;7586:11;:::o;7432:219::-;7628:12;;355:7576:10;7628:12:0;:::o;7892:388::-;355:7576:10;;;;-1:-1:-1;;;;;;;;;;;355:7576:10;;;;;;;;-1:-1:-1;;;;;355:7576:10;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;355:7576:10;;;;;;;;-1:-1:-1;;;;;355:7576:10;;;;;;;;;;;-1:-1:-1;;355:7576:10;;;966:10:2;;-1:-1:-1;;;;;355:7576:10;;8155:40:0;-1:-1:-1;;8155:40:0;355:7576:10;8209:11:0;:::o;762:157:12:-;355:7576:10;;853:58:12;;;355:7576:10;;;;;;;;;853:58:12;;;;;;:::i;:::-;355:7576:10;843:69:12;;762:157;:::o;551:205::-;209:2;355:7576:10;;195:16:12;355:7576:10;;;-1:-1:-1;223:289:12;;;;;;;;;;;;;;;;;;355:7576:10;;;;;;;;223:289:12;355:7576:10;;;223:289:12;355:7576:10;;;722:27:12;;;;;;;;;-1:-1:-1;722:27:12;551:205;:::o;1288:572:10:-;;;;;355:7576;-1:-1:-1;;;;;;;;;;;355:7576:10;;;;7150:18:1;7146:73;;1796:57:10;355:7576;;;;;;;-1:-1:-1;;;;;355:7576:10;;1517:16;355:7576;;;1517:16;355:7576;1583:38;966:10:2;1583:38:10;:::i;:::-;;1631:33;966:10:2;1631:33:10;:::i;:::-;;355:7576;;;;;;-1:-1:-1;;;;;355:7576:10;;1675:16;355:7576;;;1675:16;355:7576;1702:10;355:7576;;;;;;;-1:-1:-1;;;;;355:7576:10;;1745:19;355:7576;;;1745:19;355:7576;1796:27;355:7576;;7146:73:1;7191:17;;;-1:-1:-1;7191:17:1;;-1:-1:-1;7191:17:1"},"methodIdentifiers":{"A_HUNDRED_PERCENT()":"81803632","DEFAULT_ADMIN_ROLE()":"a217fddf","MINTER_ROLE()":"d5391393","OPERATOR_ROLE()":"f5b541a6","allowToSellKey(address,uint256)":"882e9918","buyKey(uint256)":"9fef93f8","buyKeyFor(uint256,address)":"15534028","commission()":"e1489191","generateKey(bytes)":"8d5ea68b","generated(address)":"62bea295","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","initialize(address,address,uint256,address,uint256)":"f7c00e63","key()":"3943380c","keyGenerators(uint256)":"b77c0f00","needToCheckWhitelist()":"8fd7c568","priceWithCommission(uint256)":"5ba906c0","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","sellKey(uint256,uint256)":"0d54a882","sellPriceWithCommission(uint256)":"66c04491","setCommission(uint256,address,uint256)":"79894f96","setKeyContract(address)":"7d9edc96","setKeyGeneratos(uint256,address)":"8dc9330f","setNeedToCheckWhitelist(bool)":"b0afbfd2","setSigner(address)":"6c19e783","signer()":"238ac933","supportsInterface(bytes4)":"01ffc9a7"}},"irOptimized":"/// @use-src 0:\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\", 1:\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\", 2:\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\", 3:\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\", 4:\"@openzeppelin/contracts/access/IAccessControl.sol\", 7:\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\", 8:\"@openzeppelin/contracts/utils/introspection/IERC165.sol\", 9:\"abstract/AbstractRole.sol\", 10:\"contracts/DmtpTech.sol\"\nobject \"DmtpTech_1877\" {\n    code {\n        {\n            /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            /// @src 7:1857:1858  \"1\"\n            sstore(/** @src 7:2061:2082  \"_status = NOT_ENTERED\" */ 0x00, /** @src 7:1857:1858  \"1\" */ 0x01)\n            /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n            let _2 := datasize(\"DmtpTech_1877_deployed\")\n            codecopy(_1, dataoffset(\"DmtpTech_1877_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\", 1:\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\", 2:\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\", 3:\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\", 7:\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\", 9:\"abstract/AbstractRole.sol\", 10:\"contracts/DmtpTech.sol\", 12:\"libs/Signature.sol\"\n    object \"DmtpTech_1877_deployed\" {\n        code {\n            {\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                mstore(64, 128)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x01ffc9a7 {\n                        external_fun_supportsInterface()\n                    }\n                    case 0x0d54a882 { external_fun_sellKey() }\n                    case 0x15534028 { external_fun_buyKeyFor() }\n                    case 0x238ac933 { external_fun_signer() }\n                    case 0x248a9ca3 { external_fun_getRoleAdmin() }\n                    case 0x2f2ff15d { external_fun_grantRole() }\n                    case 0x36568abe { external_fun_renounceRole() }\n                    case 0x3943380c { external_fun_key() }\n                    case 0x5ba906c0 {\n                        external_fun_priceWithCommission()\n                    }\n                    case 0x62bea295 { external_fun_generated() }\n                    case 0x66c04491 {\n                        external_fun_sellPriceWithCommission()\n                    }\n                    case 0x6c19e783 { external_fun_setSigner() }\n                    case 0x79894f96 { external_fun_setCommission() }\n                    case 0x7d9edc96 { external_fun_setKeyContract() }\n                    case 0x81803632 {\n                        external_fun_A_HUNDRED_PERCENT()\n                    }\n                    case 0x882e9918 { external_fun_allowToSellKey() }\n                    case 0x8d5ea68b { external_fun_generateKey() }\n                    case 0x8dc9330f {\n                        external_fun_setKeyGeneratos()\n                    }\n                    case 0x8fd7c568 {\n                        external_fun_needToCheckWhitelist()\n                    }\n                    case 0x91d14854 { external_fun_hasRole() }\n                    case 0x9fef93f8 { external_fun_buyKey() }\n                    case 0xa217fddf {\n                        external_fun_DEFAULT_ADMIN_ROLE()\n                    }\n                    case 0xb0afbfd2 {\n                        external_fun_setNeedToCheckWhitelist()\n                    }\n                    case 0xb77c0f00 { external_fun_keyGenerators() }\n                    case 0xd5391393 { external_fun_MINTER_ROLE() }\n                    case 0xd547741f { external_fun_revokeRole() }\n                    case 0xe1489191 { external_fun_commission() }\n                    case 0xf5b541a6 { external_fun_OPERATOR_ROLE() }\n                    case 0xf7c00e63 { external_fun_initialize() }\n                }\n                revert(0, 0)\n            }\n            function cleanup_bool(value) -> cleaned\n            {\n                cleaned := iszero(iszero(value))\n            }\n            function external_fun_supportsInterface()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                let value := calldataload(4)\n                let _1 := and(value, shl(224, 0xffffffff))\n                if iszero(eq(value, _1))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:3551:3638  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                let expr := /** @src 0:3551:3598  \"interfaceId == type(IAccessControl).interfaceId\" */ eq(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ _1, /** @src 0:3566:3598  \"type(IAccessControl).interfaceId\" */ shl(224, 0x7965db0b))\n                /// @src 0:3551:3638  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                if iszero(expr)\n                {\n                    expr := /** @src 3:1134:1174  \"interfaceId == type(IERC165).interfaceId\" */ eq(_1, /** @src 3:1149:1174  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                }\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                let memPos := mload(64)\n                mstore(memPos, iszero(iszero(expr)))\n                return(memPos, 32)\n            }\n            function abi_decode_uint256_9368() -> value\n            { value := calldataload(4) }\n            function abi_decode_uint256() -> value\n            { value := calldataload(36) }\n            function abi_decode_uint256_9392() -> value\n            { value := calldataload(68) }\n            function abi_decode_uint256_9416() -> value\n            { value := calldataload(132) }\n            function external_fun_sellKey()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                let value0 := abi_decode_uint256_9368()\n                let value1 := abi_decode_uint256()\n                /// @src 7:2466:2569  \"modifier nonReentrant() {...\"\n                fun_nonReentrantBefore()\n                /// @src 10:3399:3505  \"require(...\"\n                require_helper_stringliteral_a02c(/** @src 10:3420:3447  \"allowToSellKey(seller, id_)\" */ fun_allowToSellKey(/** @src 2:966:976  \"msg.sender\" */ caller(), /** @src 10:3420:3447  \"allowToSellKey(seller, id_)\" */ value0))\n                /// @src 10:3532:3547  \"key.sellPriceOf\"\n                let expr_address := cleanup_address(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ cleanup_address(sload(/** @src 10:3532:3535  \"key\" */ 0x02)))\n                /// @src 10:3532:3552  \"key.sellPriceOf(id_)\"\n                let _1 := /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ mload(64)\n                /// @src 10:3532:3552  \"key.sellPriceOf(id_)\"\n                mstore(_1, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ shl(225, 0x54787371))\n                /// @src 10:3532:3552  \"key.sellPriceOf(id_)\"\n                let _2 := staticcall(gas(), expr_address, _1, sub(abi_encode_uint256(add(_1, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 4), /** @src 10:3532:3552  \"key.sellPriceOf(id_)\" */ value0), _1), _1, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 32)\n                /// @src 10:3532:3552  \"key.sellPriceOf(id_)\"\n                if iszero(_2) { revert_forward() }\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 10:3532:3552  \"key.sellPriceOf(id_)\"\n                if _2\n                {\n                    let _3 := /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 32\n                    /// @src 10:3532:3552  \"key.sellPriceOf(id_)\"\n                    if gt(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 32, /** @src 10:3532:3552  \"key.sellPriceOf(id_)\" */ returndatasize()) { _3 := returndatasize() }\n                    finalize_allocation(_1, _3)\n                    expr := abi_decode_uint256_fromMemory(_1, add(_1, _3))\n                }\n                /// @src 10:3562:3613  \"require(price_ == price, \\\"DMTP_TECH_PRICE_CHANGED\\\")\"\n                require_helper_stringliteral_8967(/** @src 10:3570:3585  \"price_ == price\" */ eq(value1, expr))\n                /// @src 10:3638:3683  \"(price * commission.rate) / A_HUNDRED_PERCENT\"\n                let expr_1 := checked_div_uint256(/** @src 10:3639:3662  \"price * commission.rate\" */ checked_mul_uint256(expr, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ sload(/** @src 10:3647:3657  \"commission\" */ 0x05)))\n                /// @src 10:3710:3721  \"price - fee\"\n                let expr_2 := checked_sub_uint256(expr, expr_1)\n                /// @src 10:3732:3756  \"key.burn(seller, id_, 1)\"\n                if iszero(extcodesize(expr_address))\n                {\n                    /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:3732:3756  \"key.burn(seller, id_, 1)\"\n                let _4 := /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ mload(64)\n                /// @src 10:3732:3756  \"key.burn(seller, id_, 1)\"\n                mstore(_4, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ shl(225, 0x7a94c565))\n                /// @src 10:3732:3756  \"key.burn(seller, id_, 1)\"\n                let _5 := call(gas(), expr_address, /** @src -1:-1:-1 */ 0, /** @src 10:3732:3756  \"key.burn(seller, id_, 1)\" */ _4, sub(abi_encode_address_uint256_rational_by(add(_4, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 4), /** @src 2:966:976  \"msg.sender\" */ caller(), /** @src 10:3732:3756  \"key.burn(seller, id_, 1)\" */ value0), _4), _4, /** @src -1:-1:-1 */ 0)\n                /// @src 10:3732:3756  \"key.burn(seller, id_, 1)\"\n                if iszero(_5) { revert_forward() }\n                if _5\n                {\n                    finalize_allocation(_4, /** @src -1:-1:-1 */ 0)\n                    /// @src 10:3732:3756  \"key.burn(seller, id_, 1)\"\n                    abi_decode(_4, _4)\n                }\n                /// @src 10:3767:3799  \"payable(seller).transfer(payout)\"\n                let _6 := /** @src -1:-1:-1 */ 0\n                /// @src 10:3767:3799  \"payable(seller).transfer(payout)\"\n                if iszero(expr_2) { _6 := 2300 }\n                if iszero(call(_6, /** @src 2:966:976  \"msg.sender\" */ caller(), /** @src 10:3767:3799  \"payable(seller).transfer(payout)\" */ expr_2, /** @src -1:-1:-1 */ 0, 0, 0, 0))\n                /// @src 10:3767:3799  \"payable(seller).transfer(payout)\"\n                { revert_forward() }\n                /// @src 10:3836:3905  \"(price * commission.keyGeneratorRate) /...\"\n                let expr_3 := checked_div_uint256(/** @src 10:3837:3872  \"price * commission.keyGeneratorRate\" */ checked_mul_uint256(expr, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ sload(/** @src 10:3845:3872  \"commission.keyGeneratorRate\" */ 7)))\n                /// @src 10:3919:3938  \"keyGeneratorFee > 0\"\n                let _7 := iszero(expr_3)\n                /// @src 10:3915:4018  \"if (keyGeneratorFee > 0) {...\"\n                if /** @src 10:3919:3938  \"keyGeneratorFee > 0\" */ iszero(_7)\n                /// @src 10:3915:4018  \"if (keyGeneratorFee > 0) {...\"\n                {\n                    /// @src 10:3954:3990  \"payable(keyGenerators[id_]).transfer\"\n                    let expr_address_1 := cleanup_address(/** @src 10:3954:3981  \"payable(keyGenerators[id_])\" */ cleanup_address(/** @src 10:3962:3980  \"keyGenerators[id_]\" */ read_from_storage_split_offset_address(mapping_index_access_mapping_uint256_address_of_uint256(value0))))\n                    /// @src 10:3954:4007  \"payable(keyGenerators[id_]).transfer(keyGeneratorFee)\"\n                    let _8 := /** @src -1:-1:-1 */ 0\n                    /// @src 10:3954:4007  \"payable(keyGenerators[id_]).transfer(keyGeneratorFee)\"\n                    if _7 { _8 := 2300 }\n                    if iszero(call(_8, expr_address_1, expr_3, /** @src -1:-1:-1 */ 0, 0, 0, 0))\n                    /// @src 10:3954:4007  \"payable(keyGenerators[id_]).transfer(keyGeneratorFee)\"\n                    { revert_forward() }\n                }\n                /// @src 10:4032:4051  \"commission.receiver\"\n                let _9 := /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ cleanup_address(sload(/** @src 10:4032:4051  \"commission.receiver\" */ 6))\n                /// @src 10:4028:4152  \"if (commission.receiver != address(0)) {...\"\n                if /** @src 10:4032:4065  \"commission.receiver != address(0)\" */ iszero(iszero(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ and(/** @src 10:4032:4065  \"commission.receiver != address(0)\" */ _9, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))))\n                /// @src 10:4028:4152  \"if (commission.receiver != address(0)) {...\"\n                {\n                    /// @src 10:4081:4118  \"payable(commission.receiver).transfer\"\n                    let expr_address_2 := cleanup_address(/** @src 10:4081:4109  \"payable(commission.receiver)\" */ cleanup_address(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ _9))\n                    /// @src 10:4119:4140  \"fee - keyGeneratorFee\"\n                    let expr_4 := checked_sub_uint256(expr_1, expr_3)\n                    /// @src 10:4081:4141  \"payable(commission.receiver).transfer(fee - keyGeneratorFee)\"\n                    let _10 := /** @src -1:-1:-1 */ 0\n                    /// @src 10:4081:4141  \"payable(commission.receiver).transfer(fee - keyGeneratorFee)\"\n                    if iszero(expr_4) { _10 := 2300 }\n                    if iszero(call(_10, expr_address_2, expr_4, /** @src -1:-1:-1 */ 0, 0, 0, 0))\n                    /// @src 10:4081:4141  \"payable(commission.receiver).transfer(fee - keyGeneratorFee)\"\n                    { revert_forward() }\n                }\n                /// @src 10:4167:4194  \"KeySold(id_, seller, price)\"\n                let _11 := /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ mload(64)\n                /// @src 10:4167:4194  \"KeySold(id_, seller, price)\"\n                log1(_11, sub(abi_encode_uint256_address_uint256(_11, value0, /** @src 2:966:976  \"msg.sender\" */ caller(), /** @src 10:4167:4194  \"KeySold(id_, seller, price)\" */ expr), _11), 0x76bf686fc9ca17368677b445c3982fe5bdba241b5b1ec5a879739a52e1620376)\n                /// @src 7:2531:2532  \"_\"\n                fun_nonReentrantAfter()\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n            function cleanup_address(value) -> cleaned\n            {\n                cleaned := and(value, sub(shl(160, 1), 1))\n            }\n            function abi_decode_address_9375() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address_9415() -> value\n            {\n                value := calldataload(100)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function external_fun_buyKeyFor()\n            {\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                let value0 := abi_decode_uint256_9368()\n                let value1 := abi_decode_address_9375()\n                /// @src 7:2466:2569  \"modifier nonReentrant() {...\"\n                fun_nonReentrantBefore()\n                /// @src 10:7203:7263  \"require(id_ <= _keyIdCounter, \\\"DMTP_TECH_PARAM_KEY_INVALID\\\")\"\n                require_helper_stringliteral_6f60(/** @src 10:7211:7231  \"id_ <= _keyIdCounter\" */ iszero(gt(value0, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ sload(/** @src 10:7218:7231  \"_keyIdCounter\" */ 0x01))))\n                /// @src 10:7290:7301  \"key.priceOf\"\n                let expr_address := cleanup_address(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ cleanup_address(sload(/** @src 10:7290:7293  \"key\" */ 0x02)))\n                /// @src 10:7290:7306  \"key.priceOf(id_)\"\n                let _1 := /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ mload(64)\n                /// @src 10:7290:7306  \"key.priceOf(id_)\"\n                mstore(_1, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ shl(224, 0xb9186d7d))\n                /// @src 10:7290:7306  \"key.priceOf(id_)\"\n                let _2 := staticcall(gas(), expr_address, _1, sub(abi_encode_uint256(add(_1, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 4), /** @src 10:7290:7306  \"key.priceOf(id_)\" */ value0), _1), _1, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 32)\n                /// @src 10:7290:7306  \"key.priceOf(id_)\"\n                if iszero(_2) { revert_forward() }\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 10:7290:7306  \"key.priceOf(id_)\"\n                if _2\n                {\n                    let _3 := /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 32\n                    /// @src 10:7290:7306  \"key.priceOf(id_)\"\n                    if gt(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 32, /** @src 10:7290:7306  \"key.priceOf(id_)\" */ returndatasize()) { _3 := returndatasize() }\n                    finalize_allocation(_1, _3)\n                    expr := abi_decode_uint256_fromMemory(_1, add(_1, _3))\n                }\n                /// @src 10:7331:7376  \"(price * commission.rate) / A_HUNDRED_PERCENT\"\n                let expr_1 := checked_div_uint256(/** @src 10:7332:7355  \"price * commission.rate\" */ checked_mul_uint256(expr, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ sload(/** @src 10:7340:7350  \"commission\" */ 0x05)))\n                /// @src 10:7425:7480  \"require(msg.value == payout, \\\"DMTP_TECH_PRICE_CHANGED\\\")\"\n                require_helper_stringliteral_8967(/** @src 10:7433:7452  \"msg.value == payout\" */ eq(/** @src 10:7433:7442  \"msg.value\" */ callvalue(), /** @src 10:7403:7414  \"price + fee\" */ checked_add_uint256(expr, expr_1)))\n                /// @src 10:7491:7522  \"key.mint(receiver_, id_, 1, \\\"\\\")\"\n                if iszero(extcodesize(expr_address))\n                {\n                    /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:7491:7522  \"key.mint(receiver_, id_, 1, \\\"\\\")\"\n                let _4 := /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ mload(64)\n                /// @src 10:7491:7522  \"key.mint(receiver_, id_, 1, \\\"\\\")\"\n                mstore(_4, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ shl(224, 0x731133e9))\n                /// @src 10:7491:7522  \"key.mint(receiver_, id_, 1, \\\"\\\")\"\n                let _5 := call(gas(), expr_address, /** @src -1:-1:-1 */ 0, /** @src 10:7491:7522  \"key.mint(receiver_, id_, 1, \\\"\\\")\" */ _4, sub(abi_encode_address_uint256_rational_by_stringliteral_c5d2(add(_4, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 4), /** @src 10:7491:7522  \"key.mint(receiver_, id_, 1, \\\"\\\")\" */ value1, value0), _4), _4, /** @src -1:-1:-1 */ 0)\n                /// @src 10:7491:7522  \"key.mint(receiver_, id_, 1, \\\"\\\")\"\n                if iszero(_5) { revert_forward() }\n                if _5\n                {\n                    finalize_allocation(_4, /** @src -1:-1:-1 */ 0)\n                    /// @src 10:7491:7522  \"key.mint(receiver_, id_, 1, \\\"\\\")\"\n                    abi_decode(_4, _4)\n                }\n                /// @src 10:7559:7628  \"(price * commission.keyGeneratorRate) /...\"\n                let expr_2 := checked_div_uint256(/** @src 10:7560:7595  \"price * commission.keyGeneratorRate\" */ checked_mul_uint256(expr, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ sload(/** @src 10:7568:7595  \"commission.keyGeneratorRate\" */ 7)))\n                /// @src 10:7642:7661  \"keyGeneratorFee > 0\"\n                let _6 := iszero(expr_2)\n                /// @src 10:7638:7741  \"if (keyGeneratorFee > 0) {...\"\n                if /** @src 10:7642:7661  \"keyGeneratorFee > 0\" */ iszero(_6)\n                /// @src 10:7638:7741  \"if (keyGeneratorFee > 0) {...\"\n                {\n                    /// @src 10:7677:7713  \"payable(keyGenerators[id_]).transfer\"\n                    let expr_address_1 := cleanup_address(/** @src 10:7677:7704  \"payable(keyGenerators[id_])\" */ cleanup_address(/** @src 10:7685:7703  \"keyGenerators[id_]\" */ read_from_storage_split_offset_address(mapping_index_access_mapping_uint256_address_of_uint256(value0))))\n                    /// @src 10:7677:7730  \"payable(keyGenerators[id_]).transfer(keyGeneratorFee)\"\n                    let _7 := /** @src -1:-1:-1 */ 0\n                    /// @src 10:7677:7730  \"payable(keyGenerators[id_]).transfer(keyGeneratorFee)\"\n                    if _6 { _7 := 2300 }\n                    if iszero(call(_7, expr_address_1, expr_2, /** @src -1:-1:-1 */ 0, 0, 0, 0))\n                    /// @src 10:7677:7730  \"payable(keyGenerators[id_]).transfer(keyGeneratorFee)\"\n                    { revert_forward() }\n                }\n                /// @src 10:7755:7774  \"commission.receiver\"\n                let _8 := /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ cleanup_address(sload(/** @src 10:7755:7774  \"commission.receiver\" */ 6))\n                /// @src 10:7751:7875  \"if (commission.receiver != address(0)) {...\"\n                if /** @src 10:7755:7788  \"commission.receiver != address(0)\" */ iszero(iszero(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ and(/** @src 10:7755:7788  \"commission.receiver != address(0)\" */ _8, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))))\n                /// @src 10:7751:7875  \"if (commission.receiver != address(0)) {...\"\n                {\n                    /// @src 10:7804:7841  \"payable(commission.receiver).transfer\"\n                    let expr_address_2 := cleanup_address(/** @src 10:7804:7832  \"payable(commission.receiver)\" */ cleanup_address(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ _8))\n                    /// @src 10:7842:7863  \"fee - keyGeneratorFee\"\n                    let expr_3 := checked_sub_uint256(expr_1, expr_2)\n                    /// @src 10:7804:7864  \"payable(commission.receiver).transfer(fee - keyGeneratorFee)\"\n                    let _9 := /** @src -1:-1:-1 */ 0\n                    /// @src 10:7804:7864  \"payable(commission.receiver).transfer(fee - keyGeneratorFee)\"\n                    if iszero(expr_3) { _9 := 2300 }\n                    if iszero(call(_9, expr_address_2, expr_3, /** @src -1:-1:-1 */ 0, 0, 0, 0))\n                    /// @src 10:7804:7864  \"payable(commission.receiver).transfer(fee - keyGeneratorFee)\"\n                    { revert_forward() }\n                }\n                /// @src 10:7890:7922  \"KeyBought(id_, receiver_, price)\"\n                let _10 := /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ mload(64)\n                /// @src 10:7890:7922  \"KeyBought(id_, receiver_, price)\"\n                log1(_10, sub(abi_encode_uint256_address_uint256(_10, value0, value1, expr), _10), 0xced28ea7ef5f4276044389e457757e3f21ca4368040c3b864e3890bcd56a9988)\n                /// @src 7:2531:2532  \"_\"\n                fun_nonReentrantAfter()\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n            function abi_decode(headStart, dataEnd)\n            {\n                if slt(sub(dataEnd, headStart), 0) { revert(0, 0) }\n            }\n            function external_fun_signer()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let value := and(sload(/** @src 10:1082:1103  \"address public signer\" */ 3), /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))\n                let memPos := mload(64)\n                mstore(memPos, value)\n                return(memPos, 32)\n            }\n            function external_fun_getRoleAdmin()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                let value := /** @src -1:-1:-1 */ 0\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                value := calldataload(4)\n                let ret := fun_getRoleAdmin(value)\n                let memPos := mload(64)\n                mstore(memPos, ret)\n                return(memPos, 32)\n            }\n            function external_fun_grantRole()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                let value := /** @src -1:-1:-1 */ 0\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                value := calldataload(4)\n                let value1 := abi_decode_address_9375()\n                /// @src 0:3202:3206  \"role\"\n                fun_checkRole(/** @src 0:5320:5338  \"getRoleAdmin(role)\" */ fun_getRoleAdmin(value))\n                /// @src 0:5350:5375  \"_grantRole(role, account)\"\n                pop(fun_grantRole(value, value1))\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n            function external_fun_renounceRole()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                let value := /** @src -1:-1:-1 */ 0\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                value := calldataload(4)\n                let value1 := abi_decode_address_9375()\n                /// @src 0:6437:6539  \"if (callerConfirmation != _msgSender()) {...\"\n                if /** @src 0:6441:6475  \"callerConfirmation != _msgSender()\" */ iszero(eq(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ and(/** @src 0:6441:6475  \"callerConfirmation != _msgSender()\" */ value1, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ sub(shl(160, 1), 1)), /** @src 2:966:976  \"msg.sender\" */ caller()))\n                /// @src 0:6437:6539  \"if (callerConfirmation != _msgSender()) {...\"\n                {\n                    /// @src 0:6498:6528  \"AccessControlBadConfirmation()\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:6498:6528  \"AccessControlBadConfirmation()\" */ shl(225, 0x334bd919))\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 4)\n                }\n                /// @src 0:6549:6586  \"_revokeRole(role, callerConfirmation)\"\n                pop(fun_revokeRole(value, value1))\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n            function external_fun_key()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let value := and(sload(/** @src 10:1061:1076  \"IKey public key\" */ 2), /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))\n                let memPos := mload(64)\n                mstore(memPos, value)\n                return(memPos, 32)\n            }\n            function abi_encode_uint256_uint256_uint256(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), value1)\n                mstore(add(headStart, 64), value2)\n            }\n            function external_fun_priceWithCommission()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                let value0 := abi_decode_uint256_9368()\n                let cleaned := and(sload(/** @src 10:5682:5685  \"key\" */ 0x02), /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))\n                /// @src 10:5682:5698  \"key.priceOf(id_)\"\n                let _1 := /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ mload(64)\n                /// @src 10:5682:5698  \"key.priceOf(id_)\"\n                mstore(_1, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ shl(224, 0xb9186d7d))\n                mstore(/** @src 10:5682:5698  \"key.priceOf(id_)\" */ add(_1, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 4), value0)\n                /// @src 10:5682:5698  \"key.priceOf(id_)\"\n                let _2 := staticcall(gas(), cleaned, _1, 36, _1, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 32)\n                /// @src 10:5682:5698  \"key.priceOf(id_)\"\n                if iszero(_2) { revert_forward() }\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 10:5682:5698  \"key.priceOf(id_)\"\n                if _2\n                {\n                    let _3 := /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 32\n                    /// @src 10:5682:5698  \"key.priceOf(id_)\"\n                    if gt(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 32, /** @src 10:5682:5698  \"key.priceOf(id_)\" */ returndatasize()) { _3 := returndatasize() }\n                    finalize_allocation(_1, _3)\n                    expr := abi_decode_uint256_fromMemory(_1, add(_1, _3))\n                }\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                let r := div(/** @src 10:5715:5738  \"price * commission.rate\" */ checked_mul_uint256(expr, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ sload(/** @src 10:5723:5733  \"commission\" */ 0x05)), /** @src 10:510:516  \"10_000\" */ 0x2710)\n                /// @src 10:5778:5789  \"price + fee\"\n                let expr_1 := checked_add_uint256(expr, r)\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_uint256_uint256_uint256(memPos, expr, r, expr_1), memPos))\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_9451(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 10:6629:6638  \"generated\" */ 0x04)\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address(slot, key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, slot)\n                dataSlot := keccak256(0, 0x40)\n            }\n            function abi_encode_uint256(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, value0)\n            }\n            function external_fun_generated()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ and(abi_decode_address(), sub(shl(160, 1), 1)))\n                mstore(32, 4)\n                let _1 := sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 0x40))\n                let memPos := mload(0x40)\n                mstore(memPos, _1)\n                return(memPos, 32)\n            }\n            function external_fun_sellPriceWithCommission()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                let value0 := abi_decode_uint256_9368()\n                let cleaned := and(sload(/** @src 10:5984:5987  \"key\" */ 0x02), /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))\n                /// @src 10:5984:6004  \"key.sellPriceOf(id_)\"\n                let _1 := /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ mload(64)\n                /// @src 10:5984:6004  \"key.sellPriceOf(id_)\"\n                mstore(_1, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ shl(225, 0x54787371))\n                mstore(/** @src 10:5984:6004  \"key.sellPriceOf(id_)\" */ add(_1, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 4), value0)\n                /// @src 10:5984:6004  \"key.sellPriceOf(id_)\"\n                let _2 := staticcall(gas(), cleaned, _1, 36, _1, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 32)\n                /// @src 10:5984:6004  \"key.sellPriceOf(id_)\"\n                if iszero(_2) { revert_forward() }\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 10:5984:6004  \"key.sellPriceOf(id_)\"\n                if _2\n                {\n                    let _3 := /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 32\n                    /// @src 10:5984:6004  \"key.sellPriceOf(id_)\"\n                    if gt(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 32, /** @src 10:5984:6004  \"key.sellPriceOf(id_)\" */ returndatasize()) { _3 := returndatasize() }\n                    finalize_allocation(_1, _3)\n                    expr := abi_decode_uint256_fromMemory(_1, add(_1, _3))\n                }\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                let r := div(/** @src 10:6021:6044  \"price * commission.rate\" */ checked_mul_uint256(expr, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ sload(/** @src 10:6029:6039  \"commission\" */ 0x05)), /** @src 10:510:516  \"10_000\" */ 0x2710)\n                /// @src 10:6084:6095  \"price - fee\"\n                let expr_1 := checked_sub_uint256(expr, r)\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_uint256_uint256_uint256(memPos, expr, r, expr_1), memPos))\n            }\n            function external_fun_setSigner()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                let value0 := abi_decode_address()\n                /// @src 0:3202:3206  \"role\"\n                fun_checkRole_9389()\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                let _1 := and(/** @src 10:2343:2364  \"signer_ != address(0)\" */ value0, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))\n                /// @src 10:2335:2400  \"require(signer_ != address(0), \\\"DMTP_TECH_PARAM_ADDRESS_INVALID\\\")\"\n                require_helper_stringliteral_c363(/** @src 10:2343:2364  \"signer_ != address(0)\" */ iszero(iszero(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ _1)))\n                sstore(/** @src 10:2411:2427  \"signer = signer_\" */ 0x03, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ or(and(sload(/** @src 10:2411:2427  \"signer = signer_\" */ 0x03), /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ shl(160, 0xffffffffffffffffffffffff)), _1))\n                /// @src 10:2443:2461  \"SignerSet(signer_)\"\n                let _2 := /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ mload(64)\n                mstore(_2, _1)\n                /// @src 10:2443:2461  \"SignerSet(signer_)\"\n                log1(_2, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 32, /** @src 10:2443:2461  \"SignerSet(signer_)\" */ 0x9eaa897564d022fb8c5efaf0acdb5d9d27b440b2aad44400b6e1c702e65b9ed3)\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n            function external_fun_setCommission()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 96)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                let value := /** @src -1:-1:-1 */ 0\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                value := calldataload(4)\n                let value1 := abi_decode_address_9375()\n                let value_1 := /** @src -1:-1:-1 */ 0\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                value_1 := calldataload(68)\n                /// @src 0:3202:3206  \"role\"\n                fun_checkRole_9389()\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                sstore(/** @src 10:5337:5356  \"commission.receiver\" */ 6, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ or(and(sload(/** @src 10:5337:5356  \"commission.receiver\" */ 6), /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ shl(160, 0xffffffffffffffffffffffff)), and(value1, sub(shl(160, 1), 1))))\n                sstore(/** @src 10:5337:5347  \"commission\" */ 0x05, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ value)\n                sstore(/** @src 10:5411:5438  \"commission.keyGeneratorRate\" */ 7, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ value_1)\n                /// @src 10:5474:5528  \"CommissionUpdated(rate_, receiver_, keyGeneratorRate_)\"\n                let _1 := /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ mload(64)\n                /// @src 10:5474:5528  \"CommissionUpdated(rate_, receiver_, keyGeneratorRate_)\"\n                log1(_1, sub(abi_encode_uint256_address_uint256(_1, value, value1, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ value_1), /** @src 10:5474:5528  \"CommissionUpdated(rate_, receiver_, keyGeneratorRate_)\" */ _1), 0x827988aa1b695ab4719b95a49399fb75159954cc25d5b37c53cf23e8a6a58d36)\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n            function external_fun_setKeyContract()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                let value0 := abi_decode_address()\n                /// @src 0:3202:3206  \"role\"\n                fun_checkRole_9389()\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                let _1 := and(/** @src 10:5046:5064  \"key_ != address(0)\" */ value0, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))\n                /// @src 10:5038:5100  \"require(key_ != address(0), \\\"DMTP_TECH_PARAM_ADDRESS_INVALID\\\")\"\n                require_helper_stringliteral_c363(/** @src 10:5046:5064  \"key_ != address(0)\" */ iszero(iszero(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ _1)))\n                sstore(/** @src 10:5111:5127  \"key = IKey(key_)\" */ 0x02, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ or(and(sload(/** @src 10:5111:5127  \"key = IKey(key_)\" */ 0x02), /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ shl(160, 0xffffffffffffffffffffffff)), _1))\n                /// @src 10:5143:5167  \"KeyContractUpdated(key_)\"\n                let _2 := /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ mload(64)\n                mstore(_2, _1)\n                /// @src 10:5143:5167  \"KeyContractUpdated(key_)\"\n                log1(_2, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 32, /** @src 10:5143:5167  \"KeyContractUpdated(key_)\" */ 0x9c421f75c1b2cd6cdf5bd68ae0986ad4518d273a5c59745ac6454392b0b709a5)\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n            function external_fun_A_HUNDRED_PERCENT()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let memPos := mload(64)\n                mstore(memPos, /** @src 10:510:516  \"10_000\" */ 0x2710)\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                return(memPos, 32)\n            }\n            function external_fun_allowToSellKey()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                let value0 := abi_decode_address()\n                let value := /** @src -1:-1:-1 */ 0\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                value := calldataload(36)\n                let ret := fun_allowToSellKey(value0, value)\n                let memPos := mload(64)\n                mstore(memPos, iszero(iszero(ret)))\n                return(memPos, 32)\n            }\n            function panic_error_0x41()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function external_fun_generateKey()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                let offset := calldataload(4)\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                if iszero(slt(add(offset, 35), calldatasize()))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                let length := calldataload(add(4, offset))\n                if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, add(and(add(length, 0x1f), not(31)), 32))\n                mstore(memPtr, length)\n                if gt(add(add(offset, length), 36), calldatasize())\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                calldatacopy(add(memPtr, 32), add(offset, 36), length)\n                mstore(add(add(memPtr, length), 32), /** @src -1:-1:-1 */ 0)\n                /// @src 10:4207:4951  \"function generateKey(bytes memory signature_) external nonReentrant {...\"\n                modifier_nonReentrant(memPtr)\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n            function external_fun_setKeyGeneratos()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                let value := /** @src -1:-1:-1 */ 0\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                value := calldataload(4)\n                let value1 := abi_decode_address_9375()\n                /// @src 0:3202:3206  \"role\"\n                fun_checkRole_9389()\n                /// @src 10:6290:6327  \"keyId_ > 0 && keyId_ <= _keyIdCounter\"\n                let expr := /** @src 10:6290:6300  \"keyId_ > 0\" */ iszero(iszero(value))\n                /// @src 10:6290:6327  \"keyId_ > 0 && keyId_ <= _keyIdCounter\"\n                if expr\n                {\n                    expr := /** @src 10:6304:6327  \"keyId_ <= _keyIdCounter\" */ iszero(gt(value, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ sload(/** @src 10:6314:6327  \"_keyIdCounter\" */ 0x01)))\n                }\n                /// @src 10:6269:6380  \"require(...\"\n                require_helper_stringliteral_6f60(expr)\n                /// @src 10:6390:6456  \"require(account_ != address(0), \\\"DMTP_TECH_PARAM_ADDRESS_INVALID\\\")\"\n                require_helper_stringliteral_c363(/** @src 10:6398:6420  \"account_ != address(0)\" */ iszero(iszero(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ and(/** @src 10:6398:6420  \"account_ != address(0)\" */ value1, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ sub(shl(160, 1), 1)))))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ value)\n                mstore(32, /** @src 10:6467:6480  \"keyGenerators\" */ 0x08)\n                /// @src 10:6467:6499  \"keyGenerators[keyId_] = account_\"\n                update_storage_value_offset_address_to_address(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 64), /** @src 10:6467:6499  \"keyGenerators[keyId_] = account_\" */ value1)\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n            function external_fun_needToCheckWhitelist()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let value := and(sload(/** @src 10:1249:1281  \"bool public needToCheckWhitelist\" */ 9), /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 0xff)\n                let memPos := mload(64)\n                mstore(memPos, iszero(iszero(value)))\n                return(memPos, 32)\n            }\n            function external_fun_hasRole()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                let value := /** @src -1:-1:-1 */ 0\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                value := calldataload(4)\n                let value1 := abi_decode_address_9375()\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ value)\n                mstore(32, /** @src 0:2887:2958  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                let value_1 := and(sload(/** @src 0:3901:3932  \"$._roles[role].hasRole[account]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 64), value1)), 0xff)\n                let memPos := mload(64)\n                mstore(memPos, iszero(iszero(value_1)))\n                return(memPos, 32)\n            }\n            function external_fun_buyKey()\n            {\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                let value0 := abi_decode_uint256_9368()\n                /// @src 7:2466:2569  \"modifier nonReentrant() {...\"\n                fun_nonReentrantBefore()\n                /// @src 10:2543:2603  \"require(id_ <= _keyIdCounter, \\\"DMTP_TECH_PARAM_KEY_INVALID\\\")\"\n                require_helper_stringliteral_6f60(/** @src 10:2551:2571  \"id_ <= _keyIdCounter\" */ iszero(gt(value0, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ sload(/** @src 10:2558:2571  \"_keyIdCounter\" */ 0x01))))\n                /// @src 10:2630:2641  \"key.priceOf\"\n                let expr_address := cleanup_address(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ cleanup_address(sload(/** @src 10:2630:2633  \"key\" */ 0x02)))\n                /// @src 10:2630:2646  \"key.priceOf(id_)\"\n                let _1 := /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ mload(64)\n                /// @src 10:2630:2646  \"key.priceOf(id_)\"\n                mstore(_1, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ shl(224, 0xb9186d7d))\n                /// @src 10:2630:2646  \"key.priceOf(id_)\"\n                let _2 := staticcall(gas(), expr_address, _1, sub(abi_encode_uint256(add(_1, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 4), /** @src 10:2630:2646  \"key.priceOf(id_)\" */ value0), _1), _1, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 32)\n                /// @src 10:2630:2646  \"key.priceOf(id_)\"\n                if iszero(_2) { revert_forward() }\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 10:2630:2646  \"key.priceOf(id_)\"\n                if _2\n                {\n                    let _3 := /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 32\n                    /// @src 10:2630:2646  \"key.priceOf(id_)\"\n                    if gt(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 32, /** @src 10:2630:2646  \"key.priceOf(id_)\" */ returndatasize()) { _3 := returndatasize() }\n                    finalize_allocation(_1, _3)\n                    expr := abi_decode_uint256_fromMemory(_1, add(_1, _3))\n                }\n                /// @src 10:2671:2716  \"(price * commission.rate) / A_HUNDRED_PERCENT\"\n                let expr_1 := checked_div_uint256(/** @src 10:2672:2695  \"price * commission.rate\" */ checked_mul_uint256(expr, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ sload(/** @src 10:2680:2690  \"commission\" */ 0x05)))\n                /// @src 10:2765:2820  \"require(msg.value == payout, \\\"DMTP_TECH_PRICE_CHANGED\\\")\"\n                require_helper_stringliteral_8967(/** @src 10:2773:2792  \"msg.value == payout\" */ eq(/** @src 10:2773:2782  \"msg.value\" */ callvalue(), /** @src 10:2743:2754  \"price + fee\" */ checked_add_uint256(expr, expr_1)))\n                /// @src 10:2831:2865  \"key.mint(_msgSender(), id_, 1, \\\"\\\")\"\n                if iszero(extcodesize(expr_address))\n                {\n                    /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:2831:2865  \"key.mint(_msgSender(), id_, 1, \\\"\\\")\"\n                let _4 := /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ mload(64)\n                /// @src 10:2831:2865  \"key.mint(_msgSender(), id_, 1, \\\"\\\")\"\n                mstore(_4, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ shl(224, 0x731133e9))\n                /// @src 10:2831:2865  \"key.mint(_msgSender(), id_, 1, \\\"\\\")\"\n                let _5 := call(gas(), expr_address, /** @src -1:-1:-1 */ 0, /** @src 10:2831:2865  \"key.mint(_msgSender(), id_, 1, \\\"\\\")\" */ _4, sub(abi_encode_address_uint256_rational_by_stringliteral_c5d2(add(_4, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 4), /** @src 2:966:976  \"msg.sender\" */ caller(), /** @src 10:2831:2865  \"key.mint(_msgSender(), id_, 1, \\\"\\\")\" */ value0), _4), _4, /** @src -1:-1:-1 */ 0)\n                /// @src 10:2831:2865  \"key.mint(_msgSender(), id_, 1, \\\"\\\")\"\n                if iszero(_5) { revert_forward() }\n                if _5\n                {\n                    finalize_allocation(_4, /** @src -1:-1:-1 */ 0)\n                    /// @src 10:2831:2865  \"key.mint(_msgSender(), id_, 1, \\\"\\\")\"\n                    abi_decode(_4, _4)\n                }\n                /// @src 10:2902:2971  \"(price * commission.keyGeneratorRate) /...\"\n                let expr_2 := checked_div_uint256(/** @src 10:2903:2938  \"price * commission.keyGeneratorRate\" */ checked_mul_uint256(expr, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ sload(/** @src 10:2911:2938  \"commission.keyGeneratorRate\" */ 7)))\n                /// @src 10:2985:3004  \"keyGeneratorFee > 0\"\n                let _6 := iszero(expr_2)\n                /// @src 10:2981:3084  \"if (keyGeneratorFee > 0) {...\"\n                if /** @src 10:2985:3004  \"keyGeneratorFee > 0\" */ iszero(_6)\n                /// @src 10:2981:3084  \"if (keyGeneratorFee > 0) {...\"\n                {\n                    /// @src 10:3020:3056  \"payable(keyGenerators[id_]).transfer\"\n                    let expr_address_1 := cleanup_address(/** @src 10:3020:3047  \"payable(keyGenerators[id_])\" */ cleanup_address(/** @src 10:3028:3046  \"keyGenerators[id_]\" */ read_from_storage_split_offset_address(mapping_index_access_mapping_uint256_address_of_uint256(value0))))\n                    /// @src 10:3020:3073  \"payable(keyGenerators[id_]).transfer(keyGeneratorFee)\"\n                    let _7 := /** @src -1:-1:-1 */ 0\n                    /// @src 10:3020:3073  \"payable(keyGenerators[id_]).transfer(keyGeneratorFee)\"\n                    if _6 { _7 := 2300 }\n                    if iszero(call(_7, expr_address_1, expr_2, /** @src -1:-1:-1 */ 0, 0, 0, 0))\n                    /// @src 10:3020:3073  \"payable(keyGenerators[id_]).transfer(keyGeneratorFee)\"\n                    { revert_forward() }\n                }\n                /// @src 10:3098:3117  \"commission.receiver\"\n                let _8 := /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ cleanup_address(sload(/** @src 10:3098:3117  \"commission.receiver\" */ 6))\n                /// @src 10:3094:3218  \"if (commission.receiver != address(0)) {...\"\n                if /** @src 10:3098:3131  \"commission.receiver != address(0)\" */ iszero(iszero(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ and(/** @src 10:3098:3131  \"commission.receiver != address(0)\" */ _8, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))))\n                /// @src 10:3094:3218  \"if (commission.receiver != address(0)) {...\"\n                {\n                    /// @src 10:3147:3184  \"payable(commission.receiver).transfer\"\n                    let expr_address_2 := cleanup_address(/** @src 10:3147:3175  \"payable(commission.receiver)\" */ cleanup_address(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ _8))\n                    /// @src 10:3185:3206  \"fee - keyGeneratorFee\"\n                    let expr_3 := checked_sub_uint256(expr_1, expr_2)\n                    /// @src 10:3147:3207  \"payable(commission.receiver).transfer(fee - keyGeneratorFee)\"\n                    let _9 := /** @src -1:-1:-1 */ 0\n                    /// @src 10:3147:3207  \"payable(commission.receiver).transfer(fee - keyGeneratorFee)\"\n                    if iszero(expr_3) { _9 := 2300 }\n                    if iszero(call(_9, expr_address_2, expr_3, /** @src -1:-1:-1 */ 0, 0, 0, 0))\n                    /// @src 10:3147:3207  \"payable(commission.receiver).transfer(fee - keyGeneratorFee)\"\n                    { revert_forward() }\n                }\n                /// @src 10:3233:3268  \"KeyBought(id_, _msgSender(), price)\"\n                let _10 := /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ mload(64)\n                /// @src 10:3233:3268  \"KeyBought(id_, _msgSender(), price)\"\n                log1(_10, sub(abi_encode_uint256_address_uint256(_10, value0, /** @src 2:966:976  \"msg.sender\" */ caller(), /** @src 10:3233:3268  \"KeyBought(id_, _msgSender(), price)\" */ expr), _10), 0xced28ea7ef5f4276044389e457757e3f21ca4368040c3b864e3890bcd56a9988)\n                /// @src 7:2531:2532  \"_\"\n                fun_nonReentrantAfter()\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n            function external_fun_DEFAULT_ADMIN_ROLE()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let memPos := mload(64)\n                mstore(memPos, 0)\n                return(memPos, 32)\n            }\n            function external_fun_setNeedToCheckWhitelist()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                let value := calldataload(4)\n                let _1 := iszero(value)\n                let _2 := iszero(_1)\n                if iszero(eq(value, _2))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:3202:3206  \"role\"\n                fun_checkRole_9389()\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                let _3 := sload(/** @src 10:6987:7007  \"needToCheckWhitelist\" */ 0x09)\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                if /** @src 10:6977:7007  \"check_ != needToCheckWhitelist\" */ eq(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ _2, iszero(iszero(and(_3, 0xff))))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 24)\n                    mstore(add(memPtr, 68), \"DMTP_TECH_CONFIG_HAS_SET\")\n                    revert(memPtr, 100)\n                }\n                sstore(/** @src 10:6987:7007  \"needToCheckWhitelist\" */ 0x09, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ or(and(_3, not(255)), and(_1, 0xff)))\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n            function mapping_index_access_mapping_uint256_address_of_uint256(key) -> dataSlot\n            {\n                mstore(0, key)\n                mstore(0x20, /** @src 10:3962:3975  \"keyGenerators\" */ 0x08)\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function external_fun_keyGenerators()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                let value := /** @src -1:-1:-1 */ 0\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                value := calldataload(4)\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ value)\n                mstore(32, /** @src 10:1195:1243  \"mapping(uint256 => address) public keyGenerators\" */ 8)\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                let value_1 := and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 0x40)), sub(shl(160, 1), 1))\n                let memPos := mload(0x40)\n                mstore(memPos, value_1)\n                return(memPos, 32)\n            }\n            function external_fun_MINTER_ROLE()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let memPos := mload(64)\n                mstore(memPos, /** @src 9:311:335  \"keccak256(\\\"MINTER_ROLE\\\")\" */ 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6)\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                return(memPos, 32)\n            }\n            function external_fun_revokeRole()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                let value := /** @src -1:-1:-1 */ 0\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                value := calldataload(4)\n                let value1 := abi_decode_address_9375()\n                /// @src 0:3202:3206  \"role\"\n                fun_checkRole(/** @src 0:5737:5755  \"getRoleAdmin(role)\" */ fun_getRoleAdmin(value))\n                /// @src 0:5767:5793  \"_revokeRole(role, account)\"\n                pop(fun_revokeRole(value, value1))\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n            function read_from_storage_split_offset_address(slot) -> value\n            {\n                value := and(sload(slot), sub(shl(160, 1), 1))\n            }\n            function abi_encode_uint256_address_uint256(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 64), value2)\n            }\n            function external_fun_commission()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let _1 := sload(/** @src 10:1160:1188  \"Commission public commission\" */ 5)\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                let cleaned := and(sload(/** @src 10:1160:1188  \"Commission public commission\" */ 6), /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))\n                let _2 := sload(/** @src 10:1160:1188  \"Commission public commission\" */ 7)\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_uint256_address_uint256(memPos, _1, cleaned, _2), memPos))\n            }\n            function external_fun_OPERATOR_ROLE()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let memPos := mload(64)\n                mstore(memPos, /** @src 9:243:269  \"keccak256(\\\"OPERATOR_ROLE\\\")\" */ 0x97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929)\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                return(memPos, 32)\n            }\n            function external_fun_initialize()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 160)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                let value0 := abi_decode_address()\n                let value1 := abi_decode_address_9375()\n                let value2 := abi_decode_uint256_9392()\n                let value3 := abi_decode_address_9415()\n                let value4 := abi_decode_uint256_9416()\n                let _1 := sload(/** @src 1:8837:8901  \"assembly {...\" */ 108904022758810753673719992590105913556127789646572562039383141376366747609600)\n                /// @src 1:4301:4317  \"!$._initializing\"\n                let expr := cleanup_bool(iszero(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ extract_from_storage_value_offset_t_bool(_1)))\n                /// @src 1:4726:4742  \"initialized == 0\"\n                let _2 := /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ and(extract_from_storage_value_offset_uint64(_1), 0xffffffffffffffff)\n                /// @src 1:4726:4760  \"initialized == 0 && isTopLevelCall\"\n                let expr_1 := /** @src 1:4726:4742  \"initialized == 0\" */ iszero(_2)\n                /// @src 1:4726:4760  \"initialized == 0 && isTopLevelCall\"\n                if expr_1 { expr_1 := expr }\n                /// @src 1:4790:4840  \"initialized == 1 && address(this).code.length == 0\"\n                let expr_2 := /** @src 1:4790:4806  \"initialized == 1\" */ eq(_2, /** @src 1:4805:4806  \"1\" */ 0x01)\n                /// @src 1:4790:4840  \"initialized == 1 && address(this).code.length == 0\"\n                if expr_2\n                {\n                    expr_2 := /** @src 1:4810:4840  \"address(this).code.length == 0\" */ iszero(/** @src 1:4810:4835  \"address(this).code.length\" */ extcodesize(/** @src 1:4818:4822  \"this\" */ address()))\n                }\n                /// @src 1:4855:4885  \"!initialSetup && !construction\"\n                let expr_3 := /** @src 1:4855:4868  \"!initialSetup\" */ iszero(expr_1)\n                /// @src 1:4855:4885  \"!initialSetup && !construction\"\n                if expr_3\n                {\n                    expr_3 := /** @src 1:4872:4885  \"!construction\" */ iszero(expr_2)\n                }\n                /// @src 1:4851:4942  \"if (!initialSetup && !construction) {...\"\n                if expr_3\n                {\n                    /// @src 1:4908:4931  \"InvalidInitialization()\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 1:4908:4931  \"InvalidInitialization()\" */ shl(224, 0xf92ee8a9))\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 4)\n                }\n                /// @src 1:4951:4969  \"$._initialized = 1\"\n                update_storage_value_offset_uint64_to_uint64()\n                /// @src 1:4979:5046  \"if (isTopLevelCall) {...\"\n                if expr\n                {\n                    /// @src 1:5013:5035  \"$._initializing = true\"\n                    update_storage_value_offset_t_bool_to_t_bool()\n                }\n                /// @src 10:2206:2233  \"commissionKeyGeneratorRate_\"\n                fun_init(value0, value1, value2, value3, value4)\n                /// @src 1:5066:5167  \"if (isTopLevelCall) {...\"\n                if expr\n                {\n                    /// @src 1:5100:5123  \"$._initializing = false\"\n                    update_storage_value_offset_bool_to_bool()\n                    /// @src 1:5142:5156  \"Initialized(1)\"\n                    let _3 := /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ mload(64)\n                    /// @src 1:5142:5156  \"Initialized(1)\"\n                    log1(_3, sub(abi_encode_rational_by(_3), _3), 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2)\n                }\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n            function require_helper_stringliteral_a02c(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 32)\n                    mstore(add(memPtr, 68), \"DMTP_TECH_NOT_ALLOW_TO_SELL_KEYS\")\n                    revert(memPtr, 100)\n                }\n            }\n            function abi_decode_uint256_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                value0 := mload(headStart)\n            }\n            function revert_forward()\n            {\n                let pos := mload(64)\n                returndatacopy(pos, 0, returndatasize())\n                revert(pos, returndatasize())\n            }\n            function require_helper_stringliteral_8967(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 23)\n                    mstore(add(memPtr, 68), \"DMTP_TECH_PRICE_CHANGED\")\n                    revert(memPtr, 100)\n                }\n            }\n            function panic_error_0x11()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x11)\n                revert(0, 0x24)\n            }\n            function checked_mul_uint256(x, y) -> product\n            {\n                product := mul(x, y)\n                if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n            }\n            function checked_div_uint256(x) -> r\n            {\n                let _1 := 0\n                _1 := 0\n                r := div(x, /** @src 10:510:516  \"10_000\" */ 0x2710)\n            }\n            /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n            function checked_sub_uint256(x, y) -> diff\n            {\n                diff := sub(x, y)\n                if gt(diff, x) { panic_error_0x11() }\n            }\n            function abi_encode_address_uint256_rational_by(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 96)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), value1)\n                mstore(add(headStart, 64), /** @src 10:3754:3755  \"1\" */ 0x01)\n            }\n            /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n            function require_helper_stringliteral_6f60(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 27)\n                    mstore(add(memPtr, 68), \"DMTP_TECH_PARAM_KEY_INVALID\")\n                    revert(memPtr, 100)\n                }\n            }\n            function checked_add_uint256_9453(x) -> sum\n            {\n                sum := add(x, /** @src 10:4746:4759  \"_keyIdCounter\" */ 0x01)\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                if gt(x, sum) { panic_error_0x11() }\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                sum := add(x, y)\n                if gt(x, sum) { panic_error_0x11() }\n            }\n            function abi_encode_address_uint256_rational_by_stringliteral_c5d2(headStart, value0, value1) -> tail\n            {\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), value1)\n                mstore(add(headStart, 64), /** @src 10:7218:7231  \"_keyIdCounter\" */ 0x01)\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                mstore(add(headStart, 96), 128)\n                mstore(add(headStart, 128), 0)\n                tail := add(headStart, 160)\n            }\n            /// @ast-id 171 @src 0:4759:4950  \"function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {...\"\n            function fun_getRoleAdmin(var_role) -> var\n            {\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ var_role)\n                mstore(0x20, /** @src 0:2887:2958  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                /// @src 0:4912:4943  \"return $._roles[role].adminRole\"\n                var := /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ sload(/** @src 0:4919:4943  \"$._roles[role].adminRole\" */ add(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 0x40), /** @src 0:4919:4943  \"$._roles[role].adminRole\" */ 1))\n            }\n            /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n            function require_helper_stringliteral_c363(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 31)\n                    mstore(add(memPtr, 68), \"DMTP_TECH_PARAM_ADDRESS_INVALID\")\n                    revert(memPtr, 100)\n                }\n            }\n            function update_storage_value_offset_address_to_address(slot, value)\n            {\n                sstore(slot, or(and(sload(slot), shl(160, 0xffffffffffffffffffffffff)), and(value, sub(shl(160, 1), 1))))\n            }\n            function update_storage_value_offset_uint256_to_uint256(value)\n            {\n                sstore(/** @src 10:4746:4759  \"_keyIdCounter\" */ 0x01, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ value)\n            }\n            function update_storage_value_offset_uint256_to_uint256_9503(value)\n            {\n                sstore(/** @src 10:1796:1823  \"commission.keyGeneratorRate\" */ 7, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ value)\n            }\n            function abi_encode_address_uint256(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), value1)\n            }\n            /// @ast-id 1747 @src 10:6512:6860  \"function allowToSellKey(...\"\n            function fun_allowToSellKey(var_seller, var_id) -> var\n            {\n                /// @src 10:6609:6613  \"bool\"\n                var := /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 0\n                /// @src 10:6625:6692  \"if (generated[seller_] != id_) {...\"\n                if /** @src 10:6629:6654  \"generated[seller_] != id_\" */ iszero(eq(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ sload(/** @src 10:6629:6647  \"generated[seller_]\" */ mapping_index_access_mapping_address_uint256_of_address_9451(var_seller)), /** @src 10:6629:6654  \"generated[seller_] != id_\" */ var_id))\n                /// @src 10:6625:6692  \"if (generated[seller_] != id_) {...\"\n                {\n                    /// @src 10:6670:6681  \"return true\"\n                    var := /** @src 10:6677:6681  \"true\" */ 0x01\n                    /// @src 10:6670:6681  \"return true\"\n                    leave\n                }\n                /// @src 10:6721:6753  \"IERC1155(address(key)).balanceOf\"\n                let expr_address := cleanup_address(/** @src 10:6721:6743  \"IERC1155(address(key))\" */ cleanup_address(/** @src 10:6730:6742  \"address(key)\" */ cleanup_address(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ cleanup_address(sload(/** @src 10:6738:6741  \"key\" */ 0x02)))))\n                /// @src 10:6721:6767  \"IERC1155(address(key)).balanceOf(seller_, id_)\"\n                let _1 := /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ mload(64)\n                /// @src 10:6721:6767  \"IERC1155(address(key)).balanceOf(seller_, id_)\"\n                mstore(_1, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ shl(225, 8317639))\n                /// @src 10:6721:6767  \"IERC1155(address(key)).balanceOf(seller_, id_)\"\n                let _2 := staticcall(gas(), expr_address, _1, sub(abi_encode_address_uint256(add(_1, /** @src 10:6629:6638  \"generated\" */ 0x04), /** @src 10:6721:6767  \"IERC1155(address(key)).balanceOf(seller_, id_)\" */ var_seller, var_id), _1), _1, 32)\n                if iszero(_2) { revert_forward() }\n                let expr := /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 0\n                /// @src 10:6721:6767  \"IERC1155(address(key)).balanceOf(seller_, id_)\"\n                if _2\n                {\n                    let _3 := 32\n                    if gt(32, returndatasize()) { _3 := returndatasize() }\n                    finalize_allocation(_1, _3)\n                    expr := abi_decode_uint256_fromMemory(_1, add(_1, _3))\n                }\n                /// @src 10:6777:6831  \"if (balances > 1) {...\"\n                if /** @src 10:6781:6793  \"balances > 1\" */ gt(expr, /** @src 10:6792:6793  \"1\" */ 0x01)\n                /// @src 10:6777:6831  \"if (balances > 1) {...\"\n                {\n                    /// @src 10:6809:6820  \"return true\"\n                    var := /** @src 10:6792:6793  \"1\" */ 0x01\n                    /// @src 10:6809:6820  \"return true\"\n                    leave\n                }\n                /// @src 10:6841:6853  \"return false\"\n                var := /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 0\n            }\n            /// @ast-id 945 @src 7:2466:2569  \"modifier nonReentrant() {...\"\n            function modifier_nonReentrant(var_signature_mpos)\n            {\n                fun_nonReentrantBefore()\n                /// @src 10:4324:4387  \"require(generated[sender] == 0, \\\"DMTP_TECH_ALREADY_ISSUED_KEY\\\")\"\n                require_helper_stringliteral_88ba(/** @src 10:4332:4354  \"generated[sender] == 0\" */ iszero(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ sload(/** @src 10:4332:4349  \"generated[sender]\" */ mapping_index_access_mapping_address_uint256_of_address_9451(/** @src 2:966:976  \"msg.sender\" */ caller()))))\n                /// @src 10:4398:4723  \"if (needToCheckWhitelist) {...\"\n                if /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ extract_from_storage_value_offset_bool(sload(/** @src 10:4402:4422  \"needToCheckWhitelist\" */ 0x09))\n                /// @src 10:4398:4723  \"if (needToCheckWhitelist) {...\"\n                {\n                    /// @src 10:4483:4537  \"abi.encodePacked(sender, block.chainid, address(this))\"\n                    let expr_mpos := /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ mload(64)\n                    /// @src 10:4483:4537  \"abi.encodePacked(sender, block.chainid, address(this))\"\n                    let _1 := add(expr_mpos, 0x20)\n                    let _2 := sub(abi_encode_packed_address_uint256_address(_1, /** @src 2:966:976  \"msg.sender\" */ caller(), /** @src 10:4508:4521  \"block.chainid\" */ chainid(), /** @src 10:4531:4535  \"this\" */ address()), /** @src 10:4483:4537  \"abi.encodePacked(sender, block.chainid, address(this))\" */ expr_mpos)\n                    mstore(expr_mpos, add(_2, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ not(31)))\n                    /// @src 10:4483:4537  \"abi.encodePacked(sender, block.chainid, address(this))\"\n                    finalize_allocation(expr_mpos, _2)\n                    /// @src 10:4602:4635  \"message.recoverSigner(signature_)\"\n                    let expr := fun_recoverSigner(/** @src 10:4456:4562  \"keccak256(...\" */ fun_prefixed(/** @src 10:4456:4551  \"keccak256(...\" */ keccak256(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ _1, mload(/** @src 10:4456:4551  \"keccak256(...\" */ expr_mpos))), /** @src 10:4602:4635  \"message.recoverSigner(signature_)\" */ var_signature_mpos)\n                    /// @src 10:4577:4712  \"require(...\"\n                    require_helper_stringliteral(/** @src 10:4602:4645  \"message.recoverSigner(signature_) == signer\" */ eq(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ and(/** @src 10:4602:4645  \"message.recoverSigner(signature_) == signer\" */ expr, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ sub(shl(160, 1), 1)), /** @src 10:4602:4645  \"message.recoverSigner(signature_) == signer\" */ cleanup_address(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ cleanup_address(sload(/** @src 10:4639:4645  \"signer\" */ 0x03)))))\n                }\n                /// @src 10:4746:4763  \"_keyIdCounter + 1\"\n                let expr_1 := checked_add_uint256_9453(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ sload(/** @src 10:4746:4759  \"_keyIdCounter\" */ 0x01))\n                /// @src 10:4774:4782  \"key.mint\"\n                let expr_address := cleanup_address(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ cleanup_address(sload(/** @src 10:4774:4777  \"key\" */ 0x02)))\n                /// @src 10:4774:4807  \"key.mint(_msgSender(), id, 1, \\\"\\\")\"\n                if iszero(extcodesize(expr_address))\n                {\n                    /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:4774:4807  \"key.mint(_msgSender(), id, 1, \\\"\\\")\"\n                let _3 := /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ mload(64)\n                /// @src 10:4774:4807  \"key.mint(_msgSender(), id, 1, \\\"\\\")\"\n                mstore(_3, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ shl(224, 0x731133e9))\n                /// @src 10:4774:4807  \"key.mint(_msgSender(), id, 1, \\\"\\\")\"\n                let _4 := call(gas(), expr_address, /** @src -1:-1:-1 */ 0, /** @src 10:4774:4807  \"key.mint(_msgSender(), id, 1, \\\"\\\")\" */ _3, sub(abi_encode_address_uint256_rational_by_stringliteral_c5d2(add(_3, /** @src 10:4332:4341  \"generated\" */ 0x04), /** @src 2:966:976  \"msg.sender\" */ caller(), /** @src 10:4774:4807  \"key.mint(_msgSender(), id, 1, \\\"\\\")\" */ expr_1), _3), _3, /** @src -1:-1:-1 */ 0)\n                /// @src 10:4774:4807  \"key.mint(_msgSender(), id, 1, \\\"\\\")\"\n                if iszero(_4) { revert_forward() }\n                if _4\n                {\n                    finalize_allocation(_3, /** @src -1:-1:-1 */ 0)\n                    /// @src 10:4774:4807  \"key.mint(_msgSender(), id, 1, \\\"\\\")\"\n                    abi_decode(_3, _3)\n                }\n                /// @src 10:4818:4836  \"_keyIdCounter = id\"\n                update_storage_value_offset_uint256_to_uint256(expr_1)\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                sstore(/** @src 10:4846:4863  \"generated[sender]\" */ mapping_index_access_mapping_address_uint256_of_address_9451(/** @src 2:966:976  \"msg.sender\" */ caller()), /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ expr_1)\n                /// @src 10:4878:4904  \"keyGenerators[id] = sender\"\n                update_storage_value_offset_address_to_address(/** @src 10:4878:4895  \"keyGenerators[id]\" */ mapping_index_access_mapping_uint256_address_of_uint256(expr_1), /** @src 2:966:976  \"msg.sender\" */ caller())\n                /// @src 10:4920:4944  \"KeyGenerated(id, sender)\"\n                let _5 := /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ mload(64)\n                /// @src 10:4920:4944  \"KeyGenerated(id, sender)\"\n                log1(_5, sub(abi_encode_uint256_address(_5, expr_1, /** @src 2:966:976  \"msg.sender\" */ caller()), /** @src 10:4920:4944  \"KeyGenerated(id, sender)\" */ _5), 0x21f36f1ce7fe044293979690e893402c51515f757aa4e48b13bcfb269a9b6410)\n                /// @src 7:2531:2532  \"_\"\n                fun_nonReentrantAfter()\n            }\n            /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n            function require_helper_stringliteral_88ba(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 28)\n                    mstore(add(memPtr, 68), \"DMTP_TECH_ALREADY_ISSUED_KEY\")\n                    revert(memPtr, 100)\n                }\n            }\n            function extract_from_storage_value_offset_bool(slot_value) -> value\n            {\n                value := and(slot_value, 0xff)\n            }\n            function abi_encode_packed_address_uint256_address(pos, value0, value1, value2) -> end\n            {\n                mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n                mstore(add(pos, 20), value1)\n                mstore(add(pos, 52), and(shl(96, value2), not(0xffffffffffffffffffffffff)))\n                end := add(pos, 72)\n            }\n            function require_helper_stringliteral(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 33)\n                    mstore(add(memPtr, 68), \"DMTP_TECH_PARAM_SIGNATURE_INVALI\")\n                    mstore(add(memPtr, 100), \"D\")\n                    revert(memPtr, 132)\n                }\n            }\n            function abi_encode_uint256_address(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n            }\n            function extract_from_storage_value_offset_t_bool(slot_value) -> value\n            {\n                value := and(shr(64, slot_value), 0xff)\n            }\n            function extract_from_storage_value_offset_uint64(slot_value) -> value\n            {\n                value := and(slot_value, 0xffffffffffffffff)\n            }\n            function update_storage_value_offset_uint64_to_uint64()\n            {\n                sstore(/** @src 1:8837:8901  \"assembly {...\" */ 108904022758810753673719992590105913556127789646572562039383141376366747609600, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ or(and(sload(/** @src 1:8837:8901  \"assembly {...\" */ 108904022758810753673719992590105913556127789646572562039383141376366747609600), /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ not(0xffffffffffffffff)), 1))\n            }\n            function update_storage_value_offset_t_bool_to_t_bool()\n            {\n                sstore(/** @src 1:8837:8901  \"assembly {...\" */ 108904022758810753673719992590105913556127789646572562039383141376366747609600, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ or(and(sload(/** @src 1:8837:8901  \"assembly {...\" */ 108904022758810753673719992590105913556127789646572562039383141376366747609600), /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ not(0xff0000000000000000)), 0x010000000000000000))\n            }\n            function update_storage_value_offset_bool_to_bool()\n            {\n                sstore(/** @src 1:8837:8901  \"assembly {...\" */ 108904022758810753673719992590105913556127789646572562039383141376366747609600, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ and(sload(/** @src 1:8837:8901  \"assembly {...\" */ 108904022758810753673719992590105913556127789646572562039383141376366747609600), /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ not(0xff0000000000000000)))\n            }\n            function abi_encode_rational_by(headStart) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, /** @src 1:4805:4806  \"1\" */ 0x01)\n            }\n            /// @ast-id 961 @src 7:2575:2882  \"function _nonReentrantBefore() private {...\"\n            function fun_nonReentrantBefore()\n            {\n                /// @src 7:2698:2784  \"if (_status == ENTERED) {...\"\n                if /** @src 7:2702:2720  \"_status == ENTERED\" */ eq(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ sload(/** @src 7:2702:2709  \"_status\" */ 0x00), /** @src 7:1899:1900  \"2\" */ 0x02)\n                /// @src 7:2698:2784  \"if (_status == ENTERED) {...\"\n                {\n                    /// @src 7:2743:2773  \"ReentrancyGuardReentrantCall()\"\n                    mstore(/** @src 7:2702:2709  \"_status\" */ 0x00, /** @src 7:2743:2773  \"ReentrancyGuardReentrantCall()\" */ shl(224, 0x3ee5aeb5))\n                    revert(/** @src 7:2702:2709  \"_status\" */ 0x00, /** @src 7:2743:2773  \"ReentrancyGuardReentrantCall()\" */ 4)\n                }\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                sstore(/** @src 7:2702:2709  \"_status\" */ 0x00, /** @src 7:1899:1900  \"2\" */ 0x02)\n            }\n            /// @ast-id 969 @src 7:2888:3096  \"function _nonReentrantAfter() private {...\"\n            function fun_nonReentrantAfter()\n            {\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                sstore(/** @src 7:3068:3089  \"_status = NOT_ENTERED\" */ 0x00, /** @src 7:1857:1858  \"1\" */ 0x01)\n            }\n            /// @ast-id 129 @src 0:4148:4251  \"function _checkRole(bytes32 role) internal view virtual {...\"\n            function fun_checkRole_9389()\n            {\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 9:243:269  \"keccak256(\\\"OPERATOR_ROLE\\\")\" */ 0x97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929)\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                mstore(0x20, /** @src 0:2887:2958  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                /// @src 0:4464:4572  \"if (!hasRole(role, account)) {...\"\n                if /** @src 0:4468:4491  \"!hasRole(role, account)\" */ iszero(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ and(sload(/** @src 0:3901:3932  \"$._roles[role].hasRole[account]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 0x40), /** @src 2:966:976  \"msg.sender\" */ caller())), /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 0xff))\n                /// @src 0:4464:4572  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 0:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\" */ shl(224, 0xe2517d3f))\n                    /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                    mstore(/** @src 0:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\" */ 4, /** @src 2:966:976  \"msg.sender\" */ caller())\n                    /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                    mstore(36, /** @src 9:243:269  \"keccak256(\\\"OPERATOR_ROLE\\\")\" */ 0x97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929)\n                    /// @src 0:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\"\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 68)\n                }\n            }\n            /// @ast-id 129 @src 0:4148:4251  \"function _checkRole(bytes32 role) internal view virtual {...\"\n            function fun_checkRole(var_role)\n            {\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ var_role)\n                mstore(0x20, /** @src 0:2887:2958  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                /// @src 0:4464:4572  \"if (!hasRole(role, account)) {...\"\n                if /** @src 0:4468:4491  \"!hasRole(role, account)\" */ iszero(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ and(sload(/** @src 0:3901:3932  \"$._roles[role].hasRole[account]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 0x40), /** @src 2:966:976  \"msg.sender\" */ caller())), /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 0xff))\n                /// @src 0:4464:4572  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 0:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\" */ shl(224, 0xe2517d3f))\n                    /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                    mstore(/** @src 0:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\" */ 4, /** @src 2:966:976  \"msg.sender\" */ caller())\n                    /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                    mstore(36, var_role)\n                    /// @src 0:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\"\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 68)\n                }\n            }\n            /// @ast-id 315 @src 0:7270:7657  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n            function fun_grantRole_9499(var_account) -> var\n            {\n                /// @src 0:7347:7351  \"bool\"\n                var := /** @src 0:2362:2366  \"0x00\" */ 0x00\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                mstore(/** @src 0:2362:2366  \"0x00\" */ 0x00, 0x00)\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                mstore(0x20, /** @src 0:2887:2958  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                /// @src 0:7432:7651  \"if (!hasRole(role, account)) {...\"\n                switch /** @src 0:7436:7459  \"!hasRole(role, account)\" */ iszero(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ and(sload(/** @src 0:3901:3932  \"$._roles[role].hasRole[account]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ keccak256(/** @src 0:2362:2366  \"0x00\" */ 0x00, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 0x40), /** @src 0:7437:7459  \"hasRole(role, account)\" */ var_account)), /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 0xff))\n                case /** @src 0:7432:7651  \"if (!hasRole(role, account)) {...\" */ 0 {\n                    /// @src 0:7628:7640  \"return false\"\n                    var := /** @src 0:2362:2366  \"0x00\" */ 0x00\n                    /// @src 0:7628:7640  \"return false\"\n                    leave\n                }\n                default /// @src 0:7432:7651  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                    mstore(/** @src 0:2362:2366  \"0x00\" */ 0x00, 0x00)\n                    /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                    mstore(0x20, /** @src 0:2887:2958  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                    /// @src 0:7475:7506  \"$._roles[role].hasRole[account]\"\n                    let _1 := mapping_index_access_mapping_address_uint256_of_address(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ keccak256(/** @src 0:2362:2366  \"0x00\" */ 0x00, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 0x40), /** @src 0:7475:7506  \"$._roles[role].hasRole[account]\" */ var_account)\n                    /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                    sstore(_1, or(and(sload(_1), not(255)), /** @src 0:7509:7513  \"true\" */ 0x01))\n                    /// @src 0:7532:7572  \"RoleGranted(role, account, _msgSender())\"\n                    log4(/** @src 0:2362:2366  \"0x00\" */ 0x00, 0x00, /** @src 0:7532:7572  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 0:2362:2366  \"0x00\" */ 0x00, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ and(/** @src 0:7532:7572  \"RoleGranted(role, account, _msgSender())\" */ var_account, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ sub(shl(160, 1), 1)), /** @src 2:966:976  \"msg.sender\" */ caller())\n                    /// @src 0:7586:7597  \"return true\"\n                    var := /** @src 0:7509:7513  \"true\" */ 0x01\n                    /// @src 0:7586:7597  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 315 @src 0:7270:7657  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n            function fun_grantRole_9500(var_account) -> var\n            {\n                /// @src 0:7347:7351  \"bool\"\n                var := /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 0\n                mstore(0, /** @src 9:243:269  \"keccak256(\\\"OPERATOR_ROLE\\\")\" */ 0x97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929)\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                mstore(0x20, /** @src 0:2887:2958  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                /// @src 0:7432:7651  \"if (!hasRole(role, account)) {...\"\n                switch /** @src 0:7436:7459  \"!hasRole(role, account)\" */ iszero(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ and(sload(/** @src 0:3901:3932  \"$._roles[role].hasRole[account]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ keccak256(0, 0x40), /** @src 0:7437:7459  \"hasRole(role, account)\" */ var_account)), /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 0xff))\n                case /** @src 0:7432:7651  \"if (!hasRole(role, account)) {...\" */ 0 {\n                    /// @src 0:7628:7640  \"return false\"\n                    var := /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 0\n                    /// @src 0:7628:7640  \"return false\"\n                    leave\n                }\n                default /// @src 0:7432:7651  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                    mstore(0, /** @src 9:243:269  \"keccak256(\\\"OPERATOR_ROLE\\\")\" */ 0x97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929)\n                    /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                    mstore(0x20, /** @src 0:2887:2958  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                    /// @src 0:7475:7506  \"$._roles[role].hasRole[account]\"\n                    let _1 := mapping_index_access_mapping_address_uint256_of_address(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ keccak256(0, 0x40), /** @src 0:7475:7506  \"$._roles[role].hasRole[account]\" */ var_account)\n                    /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                    sstore(_1, or(and(sload(_1), not(255)), /** @src 0:7509:7513  \"true\" */ 0x01))\n                    /// @src 0:7532:7572  \"RoleGranted(role, account, _msgSender())\"\n                    log4(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 0, 0, /** @src 0:7532:7572  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 9:243:269  \"keccak256(\\\"OPERATOR_ROLE\\\")\" */ 0x97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ and(/** @src 0:7532:7572  \"RoleGranted(role, account, _msgSender())\" */ var_account, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ sub(shl(160, 1), 1)), /** @src 2:966:976  \"msg.sender\" */ caller())\n                    /// @src 0:7586:7597  \"return true\"\n                    var := /** @src 0:7509:7513  \"true\" */ 0x01\n                    /// @src 0:7586:7597  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 315 @src 0:7270:7657  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n            function fun_grantRole(var_role, var_account) -> var\n            {\n                /// @src 0:7347:7351  \"bool\"\n                var := /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 0\n                mstore(0, var_role)\n                mstore(0x20, /** @src 0:2887:2958  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                /// @src 0:7432:7651  \"if (!hasRole(role, account)) {...\"\n                switch /** @src 0:7436:7459  \"!hasRole(role, account)\" */ iszero(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ and(sload(/** @src 0:3901:3932  \"$._roles[role].hasRole[account]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ keccak256(0, 0x40), /** @src 0:7437:7459  \"hasRole(role, account)\" */ var_account)), /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 0xff))\n                case /** @src 0:7432:7651  \"if (!hasRole(role, account)) {...\" */ 0 {\n                    /// @src 0:7628:7640  \"return false\"\n                    var := /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 0\n                    /// @src 0:7628:7640  \"return false\"\n                    leave\n                }\n                default /// @src 0:7432:7651  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                    mstore(0, var_role)\n                    mstore(0x20, /** @src 0:2887:2958  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                    /// @src 0:7475:7506  \"$._roles[role].hasRole[account]\"\n                    let _1 := mapping_index_access_mapping_address_uint256_of_address(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ keccak256(0, 0x40), /** @src 0:7475:7506  \"$._roles[role].hasRole[account]\" */ var_account)\n                    /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                    sstore(_1, or(and(sload(_1), not(255)), /** @src 0:7509:7513  \"true\" */ 0x01))\n                    /// @src 0:7532:7572  \"RoleGranted(role, account, _msgSender())\"\n                    log4(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 0, 0, /** @src 0:7532:7572  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, var_role, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ and(/** @src 0:7532:7572  \"RoleGranted(role, account, _msgSender())\" */ var_account, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ sub(shl(160, 1), 1)), /** @src 2:966:976  \"msg.sender\" */ caller())\n                    /// @src 0:7586:7597  \"return true\"\n                    var := /** @src 0:7509:7513  \"true\" */ 0x01\n                    /// @src 0:7586:7597  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 361 @src 0:7892:8280  \"function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n            function fun_revokeRole(var_role, var_account) -> var\n            {\n                /// @src 0:7970:7974  \"bool\"\n                var := /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 0\n                mstore(0, var_role)\n                mstore(0x20, /** @src 0:2887:2958  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                /// @src 0:8055:8274  \"if (hasRole(role, account)) {...\"\n                switch /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ and(sload(/** @src 0:3901:3932  \"$._roles[role].hasRole[account]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ keccak256(0, 0x40), /** @src 0:8059:8081  \"hasRole(role, account)\" */ var_account)), /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 0xff)\n                case /** @src 0:8055:8274  \"if (hasRole(role, account)) {...\" */ 0 {\n                    /// @src 0:8251:8263  \"return false\"\n                    var := /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 0\n                    /// @src 0:8251:8263  \"return false\"\n                    leave\n                }\n                default /// @src 0:8055:8274  \"if (hasRole(role, account)) {...\"\n                {\n                    /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                    mstore(0, var_role)\n                    mstore(0x20, /** @src 0:2887:2958  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                    /// @src 0:8097:8128  \"$._roles[role].hasRole[account]\"\n                    let _1 := mapping_index_access_mapping_address_uint256_of_address(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ keccak256(0, 0x40), /** @src 0:8097:8128  \"$._roles[role].hasRole[account]\" */ var_account)\n                    /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                    sstore(_1, and(sload(_1), not(255)))\n                    /// @src 0:8155:8195  \"RoleRevoked(role, account, _msgSender())\"\n                    log4(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 0, 0, /** @src 0:8155:8195  \"RoleRevoked(role, account, _msgSender())\" */ 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b, var_role, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ and(/** @src 0:8155:8195  \"RoleRevoked(role, account, _msgSender())\" */ var_account, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ sub(shl(160, 1), 1)), /** @src 2:966:976  \"msg.sender\" */ caller())\n                    /// @src 0:8209:8220  \"return true\"\n                    var := /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 1\n                    /// @src 0:8209:8220  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 2002 @src 12:762:919  \"function prefixed(bytes32 hash) internal pure returns (bytes32) {...\"\n            function fun_prefixed(var_hash) -> var_\n            {\n                /// @src 12:853:911  \"abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash)\"\n                let expr_mpos := /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ mload(64)\n                /// @src 12:853:911  \"abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash)\"\n                let _1 := add(expr_mpos, 0x20)\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                mstore(_1, 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000)\n                mstore(add(/** @src 12:853:911  \"abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash)\" */ expr_mpos, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 60), var_hash)\n                /// @src 12:853:911  \"abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash)\"\n                mstore(expr_mpos, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 60)\n                /// @src 12:853:911  \"abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash)\"\n                finalize_allocation(expr_mpos, 92)\n                /// @src 12:836:912  \"return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash))\"\n                var_ := /** @src 12:843:912  \"keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash))\" */ keccak256(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ _1, mload(/** @src 12:843:912  \"keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash))\" */ expr_mpos))\n            }\n            /// @ast-id 1986 @src 12:551:756  \"function recoverSigner(bytes32 message, bytes memory sig) internal pure returns (address) {...\"\n            function fun_recoverSigner(var_message, var_sig_mpos) -> var\n            {\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                if iszero(/** @src 12:195:211  \"sig.length == 65\" */ eq(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ mload(/** @src 12:195:205  \"sig.length\" */ var_sig_mpos), /** @src 12:209:211  \"65\" */ 0x41))\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:223:512  \"assembly {...\"\n                let var_r := mload(add(var_sig_mpos, 32))\n                let var_s := mload(add(var_sig_mpos, 64))\n                /// @src 12:522:538  \"return (v, r, s)\"\n                let var_v := /** @src 12:223:512  \"assembly {...\" */ byte(/** @src -1:-1:-1 */ 0, /** @src 12:223:512  \"assembly {...\" */ mload(add(var_sig_mpos, 96)))\n                /// @src 12:722:749  \"ecrecover(message, v, r, s)\"\n                let _1 := /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ mload(/** @src 12:223:512  \"assembly {...\" */ 64)\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                mstore(_1, var_message)\n                mstore(add(_1, /** @src 12:223:512  \"assembly {...\" */ 32), /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ var_v)\n                mstore(add(_1, /** @src 12:223:512  \"assembly {...\" */ 64), /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ var_r)\n                mstore(add(_1, /** @src 12:223:512  \"assembly {...\" */ 96), /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ var_s)\n                /// @src 12:722:749  \"ecrecover(message, v, r, s)\"\n                mstore(/** @src -1:-1:-1 */ 0, 0)\n                /// @src 12:722:749  \"ecrecover(message, v, r, s)\"\n                if iszero(staticcall(gas(), 1, _1, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 128, /** @src -1:-1:-1 */ 0, /** @src 12:223:512  \"assembly {...\" */ 32))\n                /// @src 12:722:749  \"ecrecover(message, v, r, s)\"\n                { revert_forward() }\n                /// @src 12:715:749  \"return ecrecover(message, v, r, s)\"\n                var := /** @src 12:722:749  \"ecrecover(message, v, r, s)\" */ mload(/** @src -1:-1:-1 */ 0)\n            }\n            /// @ast-id 1154 @src 10:1288:1860  \"function __init(...\"\n            function fun_init(var_key, var_signer, var_commissionRate, var_commissionReceiver, var_commissionKeyGeneratorRate)\n            {\n                /// @src 1:7146:7219  \"if (!_isInitializing()) {...\"\n                if /** @src 1:7150:7168  \"!_isInitializing()\" */ iszero(/** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ and(shr(64, sload(/** @src 1:8837:8901  \"assembly {...\" */ 108904022758810753673719992590105913556127789646572562039383141376366747609600)), /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ 0xff))\n                /// @src 1:7146:7219  \"if (!_isInitializing()) {...\"\n                {\n                    /// @src 1:7191:7208  \"NotInitializing()\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 1:7191:7208  \"NotInitializing()\" */ shl(227, 0x1afcd79f))\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 1:7191:7208  \"NotInitializing()\" */ 4)\n                }\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                sstore(/** @src 10:1517:1533  \"key = IKey(key_)\" */ 0x02, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ or(and(sload(/** @src 10:1517:1533  \"key = IKey(key_)\" */ 0x02), /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ shl(160, 0xffffffffffffffffffffffff)), and(/** @src 10:1523:1533  \"IKey(key_)\" */ var_key, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))))\n                /// @src 10:1583:1621  \"_grantRole(DEFAULT_ADMIN_ROLE, sender)\"\n                pop(fun_grantRole_9499(/** @src 2:966:976  \"msg.sender\" */ caller()))\n                /// @src 10:1631:1664  \"_grantRole(OPERATOR_ROLE, sender)\"\n                pop(fun_grantRole_9500(/** @src 2:966:976  \"msg.sender\" */ caller()))\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                sstore(/** @src 10:1675:1691  \"signer = signer_\" */ 0x03, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ or(and(sload(/** @src 10:1675:1691  \"signer = signer_\" */ 0x03), /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ shl(160, 0xffffffffffffffffffffffff)), and(var_signer, sub(shl(160, 1), 1))))\n                sstore(/** @src 10:1702:1712  \"commission\" */ 0x05, /** @src 10:1702:1735  \"commission.rate = commissionRate_\" */ var_commissionRate)\n                /// @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\"\n                sstore(/** @src 10:1745:1764  \"commission.receiver\" */ 6, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ or(and(sload(/** @src 10:1745:1764  \"commission.receiver\" */ 6), /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ shl(160, 0xffffffffffffffffffffffff)), and(/** @src 10:1745:1786  \"commission.receiver = commissionReceiver_\" */ var_commissionReceiver, /** @src 10:355:7931  \"contract DmtpTech is ContextUpgradeable, AbstractRole, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))))\n                /// @src 10:1796:1853  \"commission.keyGeneratorRate = commissionKeyGeneratorRate_\"\n                update_storage_value_offset_uint256_to_uint256_9503(var_commissionKeyGeneratorRate)\n            }\n        }\n        data \".metadata\" hex\"a164736f6c634300081c000a\"\n    }\n}\n","metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"keyGeneratorRate\",\"type\":\"uint256\"}],\"name\":\"CommissionUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"keyId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"KeyBought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"key\",\"type\":\"address\"}],\"name\":\"KeyContractUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"keyId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"kol\",\"type\":\"address\"}],\"name\":\"KeyGenerated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"keyId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"KeySold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"SignerSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"A_HUNDRED_PERCENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OPERATOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"seller_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"allowToSellKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"buyKey\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver_\",\"type\":\"address\"}],\"name\":\"buyKeyFor\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"commission\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"keyGeneratorRate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature_\",\"type\":\"bytes\"}],\"name\":\"generateKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"generated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"key_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"commissionRate_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"commissionReceiver_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"commissionKeyGeneratorRate_\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"key\",\"outputs\":[{\"internalType\":\"contract IKey\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"keyGenerators\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"needToCheckWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"priceWithCommission\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price_\",\"type\":\"uint256\"}],\"name\":\"sellKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"sellPriceWithCommission\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rate_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"keyGeneratorRate_\",\"type\":\"uint256\"}],\"name\":\"setCommission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"key_\",\"type\":\"address\"}],\"name\":\"setKeyContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"keyId_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account_\",\"type\":\"address\"}],\"name\":\"setKeyGeneratos\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"check_\",\"type\":\"bool\"}],\"name\":\"setNeedToCheckWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer_\",\"type\":\"address\"}],\"name\":\"setSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"signer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DmtpTech.sol\":\"DmtpTech\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/interfaces/IERC1155.sol\":{\"keccak256\":\"0x1528f3ef49ef2750b428564df007feb2d5c7a792bf79c6d125409c96322a4c00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://663f59a9b1e3b1d831edeeb83590e8d9582d560c603e91327372502c64534bd6\",\"dweb:/ipfs/QmeGBrXcnomfBriPJEWXwSs1t2j9C4H7AhjuZVWHknSd6A\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"abstract/AbstractRole.sol\":{\"keccak256\":\"0x0bd61b6e65ed5b02d757d737340e218dcb36faed2ca04ddfcc2fdb02d9bf98e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7e481c800ec34dd321a9db890ed35f224e6c046978fee1186788a8fb93ab4e2\",\"dweb:/ipfs/QmQpy4UWpCiuGZiUzr52fP5ksUHJS1ud3Wubik7Bdt5Fus\"]},\"contracts/DmtpTech.sol\":{\"keccak256\":\"0xa2bc15be83aaa340397e0622b2f54658d97adc9c2d4b91c4935710ef73568653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea026bcddfda056568fd0b7f3aeff155480f23f377b896fd607d8c50ccd1056d\",\"dweb:/ipfs/QmeQNfosCtAw2fUhMJ983aaLfw9Pn4jHXwcBf7Cc83eLbA\"]},\"interfaces/IKey.sol\":{\"keccak256\":\"0x695ff7c25529516f31b67b48c93e0fe98aebb1ff0d86afb582b0171842cf3d4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0fddf3f7ca9bf5b96842f104eae7978314fa3abb7575bacfeaf553e485ea5208\",\"dweb:/ipfs/QmRRtu7eLFFTWNJ1NVYaA5JyqM4iMNHsD5yPq6cuu5kPph\"]},\"libs/Signature.sol\":{\"keccak256\":\"0x103e1cc123af45f05ebf564ea41bf7cf33ee3e0ca5f34db96de2a8efd9ad3f56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd635a7536627714b09cae5b5b3c9ca1a93fbf64d88ea001276b817767e8788d\",\"dweb:/ipfs/QmVu2ZYS1w2nw8n4CNDj7rdYoaRayjAdQMjpYVkzCx4pNU\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":923,"contract":"contracts/DmtpTech.sol:DmtpTech","label":"_status","offset":0,"slot":"0","type":"t_uint256"},{"astId":1076,"contract":"contracts/DmtpTech.sol:DmtpTech","label":"_keyIdCounter","offset":0,"slot":"1","type":"t_uint256"},{"astId":1079,"contract":"contracts/DmtpTech.sol:DmtpTech","label":"key","offset":0,"slot":"2","type":"t_contract(IKey)1932"},{"astId":1081,"contract":"contracts/DmtpTech.sol:DmtpTech","label":"signer","offset":0,"slot":"3","type":"t_address"},{"astId":1085,"contract":"contracts/DmtpTech.sol:DmtpTech","label":"generated","offset":0,"slot":"4","type":"t_mapping(t_address,t_uint256)"},{"astId":1088,"contract":"contracts/DmtpTech.sol:DmtpTech","label":"commission","offset":0,"slot":"5","type":"t_struct(Commission)1074_storage"},{"astId":1092,"contract":"contracts/DmtpTech.sol:DmtpTech","label":"keyGenerators","offset":0,"slot":"8","type":"t_mapping(t_uint256,t_address)"},{"astId":1094,"contract":"contracts/DmtpTech.sol:DmtpTech","label":"needToCheckWhitelist","offset":0,"slot":"9","type":"t_bool"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(IKey)1932":{"encoding":"inplace","label":"contract IKey","numberOfBytes":"20"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_struct(Commission)1074_storage":{"encoding":"inplace","label":"struct DmtpTech.Commission","members":[{"astId":1069,"contract":"contracts/DmtpTech.sol:DmtpTech","label":"rate","offset":0,"slot":"0","type":"t_uint256"},{"astId":1071,"contract":"contracts/DmtpTech.sol:DmtpTech","label":"receiver","offset":0,"slot":"1","type":"t_address"},{"astId":1073,"contract":"contracts/DmtpTech.sol:DmtpTech","label":"keyGeneratorRate","offset":0,"slot":"2","type":"t_uint256"}],"numberOfBytes":"96"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"interfaces/IKey.sol":{"IKey":{"abi":[{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"priceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"priceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"sellPriceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"sellPriceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"assembly":"","bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"burn(address,uint256,uint256)":"f5298aca","mint(address,uint256,uint256,bytes)":"731133e9","priceOf(uint256)":"b9186d7d","priceOfBatch(uint256[])":"0e543d74","sellPriceOf(uint256)":"a8f0e6e2","sellPriceOfBatch(uint256[])":"c0eed2e0"}},"irOptimized":"","metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"priceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"priceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"sellPriceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"sellPriceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IKey.sol\":\"IKey\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"interfaces/IKey.sol\":{\"keccak256\":\"0x695ff7c25529516f31b67b48c93e0fe98aebb1ff0d86afb582b0171842cf3d4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0fddf3f7ca9bf5b96842f104eae7978314fa3abb7575bacfeaf553e485ea5208\",\"dweb:/ipfs/QmRRtu7eLFFTWNJ1NVYaA5JyqM4iMNHsD5yPq6cuu5kPph\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"libs/Signature.sol":{"Signature":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"assembly":"    /* \"libs/Signature.sol\":57:922  library Signature {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"libs/Signature.sol\":57:922  library Signature {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa164736f6c634300081c000a\n}\n","bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760119081601d823930815050f35b600080fdfe600080fdfea164736f6c634300081c000a","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x11 SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP ","sourceMap":"57:865:12:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea164736f6c634300081c000a","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP ","sourceMap":"57:865:12:-:0;;"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 12:\"libs/Signature.sol\"\nobject \"Signature_2003\" {\n    code {\n        {\n            /// @src 12:57:922  \"library Signature {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Signature_2003_deployed\")\n            codecopy(_1, dataoffset(\"Signature_2003_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 12:\"libs/Signature.sol\"\n    object \"Signature_2003_deployed\" {\n        code {\n            {\n                /// @src 12:57:922  \"library Signature {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a164736f6c634300081c000a\"\n    }\n}\n","metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"libs/Signature.sol\":\"Signature\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"libs/Signature.sol\":{\"keccak256\":\"0x103e1cc123af45f05ebf564ea41bf7cf33ee3e0ca5f34db96de2a8efd9ad3f56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd635a7536627714b09cae5b5b3c9ca1a93fbf64d88ea001276b817767e8788d\",\"dweb:/ipfs/QmVu2ZYS1w2nw8n4CNDj7rdYoaRayjAdQMjpYVkzCx4pNU\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}}}}}