{"id":"8ecb7ffd3ce89bef8ec023be325599fc","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (proxy/ERC1967/ERC1967Proxy.sol)\n\npragma solidity ^0.8.20;\n\nimport {Proxy} from \"../Proxy.sol\";\nimport {ERC1967Utils} from \"./ERC1967Utils.sol\";\n\n/**\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n * implementation address that can be changed. This address is stored in storage in the location specified by\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967], so that it doesn't conflict with the storage layout of the\n * implementation behind the proxy.\n */\ncontract ERC1967Proxy is Proxy {\n    /**\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `implementation`.\n     *\n     * If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an\n     * encoded function call, and allows initializing the storage of the proxy like a Solidity constructor.\n     *\n     * Requirements:\n     *\n     * - If `data` is empty, `msg.value` must be zero.\n     */\n    constructor(address implementation, bytes memory _data) payable {\n        ERC1967Utils.upgradeToAndCall(implementation, _data);\n    }\n\n    /**\n     * @dev Returns the current implementation address.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\n     */\n    function _implementation() internal view virtual override returns (address) {\n        return ERC1967Utils.getImplementation();\n    }\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.21;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"},"@openzeppelin/contracts/proxy/Proxy.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback\n     * function and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n}\n"},"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (proxy/transparent/ProxyAdmin.sol)\n\npragma solidity ^0.8.20;\n\nimport {ITransparentUpgradeableProxy} from \"./TransparentUpgradeableProxy.sol\";\nimport {Ownable} from \"../../access/Ownable.sol\";\n\n/**\n * @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an\n * explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.\n */\ncontract ProxyAdmin is Ownable {\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgrade(address,address)`\n     * and `upgradeAndCall(address,address,bytes)` are present, and `upgrade` must be used if no function should be called,\n     * while `upgradeAndCall` will invoke the `receive` function if the third argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeAndCall(address,address,bytes)` is present, and the third argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev Sets the initial owner who can perform upgrades.\n     */\n    constructor(address initialOwner) Ownable(initialOwner) {}\n\n    /**\n     * @dev Upgrades `proxy` to `implementation` and calls a function on the new implementation.\n     * See {TransparentUpgradeableProxy-_dispatchUpgradeToAndCall}.\n     *\n     * Requirements:\n     *\n     * - This contract must be the admin of `proxy`.\n     * - If `data` is empty, `msg.value` must be zero.\n     */\n    function upgradeAndCall(\n        ITransparentUpgradeableProxy proxy,\n        address implementation,\n        bytes memory data\n    ) public payable virtual onlyOwner {\n        proxy.upgradeToAndCall{value: msg.value}(implementation, data);\n    }\n}\n"},"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (proxy/transparent/TransparentUpgradeableProxy.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC1967Utils} from \"../ERC1967/ERC1967Utils.sol\";\nimport {ERC1967Proxy} from \"../ERC1967/ERC1967Proxy.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {ProxyAdmin} from \"./ProxyAdmin.sol\";\n\n/**\n * @dev Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy}\n * does not implement this interface directly, and its upgradeability mechanism is implemented by an internal dispatch\n * mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not\n * include them in the ABI so this interface must be used to interact with it.\n */\ninterface ITransparentUpgradeableProxy is IERC1967 {\n    /// @dev See {UUPSUpgradeable-upgradeToAndCall}\n    function upgradeToAndCall(address newImplementation, bytes calldata data) external payable;\n}\n\n/**\n * @dev This contract implements a proxy that is upgradeable through an associated {ProxyAdmin} instance.\n *\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\n * clashing], which can potentially be used in an attack, this contract uses the\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\n * things that go hand in hand:\n *\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\n * that call matches the {ITransparentUpgradeableProxy-upgradeToAndCall} function exposed by the proxy itself.\n * 2. If the admin calls the proxy, it can call the `upgradeToAndCall` function but any other call won't be forwarded to\n * the implementation. If the admin tries to call a function on the implementation it will fail with an error indicating\n * the proxy admin cannot fallback to the target implementation.\n *\n * These properties mean that the admin account can only be used for upgrading the proxy, so it's best if it's a\n * dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to\n * call a function from the proxy implementation. For this reason, the proxy deploys an instance of {ProxyAdmin} and\n * allows upgrades only if they come through it. You should think of the `ProxyAdmin` instance as the administrative\n * interface of the proxy, including the ability to change who can trigger upgrades by transferring ownership.\n *\n * NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not\n * inherit from that interface, and instead `upgradeToAndCall` is implicitly implemented using a custom dispatch\n * mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to\n * fully implement transparency without decoding reverts caused by selector clashes between the proxy and the\n * implementation.\n *\n * NOTE: This proxy does not inherit from {Context} deliberately. The {ProxyAdmin} of this contract won't send a\n * meta-transaction in any way, and any other meta-transaction setup should be made in the implementation contract.\n *\n * IMPORTANT: This contract avoids unnecessary storage reads by setting the admin only during construction as an\n * immutable variable, preventing any changes thereafter. However, the admin slot defined in ERC-1967 can still be\n * overwritten by the implementation logic pointed to by this proxy. In such cases, the contract may end up in an\n * undesirable state where the admin slot is different from the actual admin. Relying on the value of the admin slot\n * is generally fine if the implementation is trusted.\n *\n * WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the\n * compiler will not check that there are no selector conflicts, due to the note above. A selector clash between any new\n * function and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This\n * could render the `upgradeToAndCall` function inaccessible, preventing upgradeability and compromising transparency.\n */\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\n    // An immutable address for the admin to avoid unnecessary SLOADs before each call\n    // at the expense of removing the ability to change the admin once it's set.\n    // This is acceptable if the admin is always a ProxyAdmin instance or similar contract\n    // with its own ability to transfer the permissions to another account.\n    address private immutable _admin;\n\n    /**\n     * @dev The proxy caller is the current admin, and can't fallback to the proxy target.\n     */\n    error ProxyDeniedAdminAccess();\n\n    /**\n     * @dev Initializes an upgradeable proxy managed by an instance of a {ProxyAdmin} with an `initialOwner`,\n     * backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in\n     * {ERC1967Proxy-constructor}.\n     */\n    constructor(address _logic, address initialOwner, bytes memory _data) payable ERC1967Proxy(_logic, _data) {\n        _admin = address(new ProxyAdmin(initialOwner));\n        // Set the storage value and emit an event for ERC-1967 compatibility\n        ERC1967Utils.changeAdmin(_proxyAdmin());\n    }\n\n    /**\n     * @dev Returns the admin of this proxy.\n     */\n    function _proxyAdmin() internal view virtual returns (address) {\n        return _admin;\n    }\n\n    /**\n     * @dev If caller is the admin process the call internally, otherwise transparently fallback to the proxy behavior.\n     */\n    function _fallback() internal virtual override {\n        if (msg.sender == _proxyAdmin()) {\n            if (msg.sig != ITransparentUpgradeableProxy.upgradeToAndCall.selector) {\n                revert ProxyDeniedAdminAccess();\n            } else {\n                _dispatchUpgradeToAndCall();\n            }\n        } else {\n            super._fallback();\n        }\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy. See {ERC1967Utils-upgradeToAndCall}.\n     *\n     * Requirements:\n     *\n     * - If `data` is empty, `msg.value` must be zero.\n     */\n    function _dispatchUpgradeToAndCall() private {\n        (address newImplementation, bytes memory data) = abi.decode(msg.data[4:], (address, bytes));\n        ERC1967Utils.upgradeToAndCall(newImplementation, data);\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/Errors.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"contracts/proxy/DmtpProxy.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (proxy/transparent/TransparentUpgradeableProxy.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {ERC1967Proxy} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\";\nimport {ITransparentUpgradeableProxy} from \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\";\nimport {IERC1967} from \"@openzeppelin/contracts/interfaces/IERC1967.sol\";\nimport \"./DmtpProxyAdmin.sol\";\n\n/**\n * @dev This contract implements a proxy that is upgradeable through an associated {ProxyAdmin} instance.\n *\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\n * clashing], which can potentially be used in an attack, this contract uses the\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\n * things that go hand in hand:\n *\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\n * that call matches the {ITransparentUpgradeableProxy-upgradeToAndCall} function exposed by the proxy itself.\n * 2. If the admin calls the proxy, it can call the `upgradeToAndCall` function but any other call won't be forwarded to\n * the implementation. If the admin tries to call a function on the implementation it will fail with an error indicating\n * the proxy admin cannot fallback to the target implementation.\n *\n * These properties mean that the admin account can only be used for upgrading the proxy, so it's best if it's a\n * dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to\n * call a function from the proxy implementation. For this reason, the proxy deploys an instance of {ProxyAdmin} and\n * allows upgrades only if they come through it. You should think of the `ProxyAdmin` instance as the administrative\n * interface of the proxy, including the ability to change who can trigger upgrades by transferring ownership.\n *\n * NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not\n * inherit from that interface, and instead `upgradeToAndCall` is implicitly implemented using a custom dispatch\n * mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to\n * fully implement transparency without decoding reverts caused by selector clashes between the proxy and the\n * implementation.\n *\n * NOTE: This proxy does not inherit from {Context} deliberately. The {ProxyAdmin} of this contract won't send a\n * meta-transaction in any way, and any other meta-transaction setup should be made in the implementation contract.\n *\n * IMPORTANT: This contract avoids unnecessary storage reads by setting the admin only during construction as an\n * immutable variable, preventing any changes thereafter. However, the admin slot defined in ERC-1967 can still be\n * overwritten by the implementation logic pointed to by this proxy. In such cases, the contract may end up in an\n * undesirable state where the admin slot is different from the actual admin. Relying on the value of the admin slot\n * is generally fine if the implementation is trusted.\n *\n * WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the\n * compiler will not check that there are no selector conflicts, due to the note above. A selector clash between any new\n * function and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This\n * could render the `upgradeToAndCall` function inaccessible, preventing upgradeability and compromising transparency.\n */\ncontract DmtpProxy is ERC1967Proxy {\n    // An immutable address for the admin to avoid unnecessary SLOADs before each call\n    // at the expense of removing the ability to change the admin once it's set.\n    // This is acceptable if the admin is always a ProxyAdmin instance or similar contract\n    // with its own ability to transfer the permissions to another account.\n    address private immutable _admin;\n\n    /**\n     * @dev The proxy caller is the current admin, and can't fallback to the proxy target.\n     */\n    error ProxyDeniedAdminAccess();\n\n    /**\n     * @dev Initializes an upgradeable proxy managed by an instance of a {ProxyAdmin} with an `initialOwner`,\n     * backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in\n     * {ERC1967Proxy-constructor}.\n     */\n    constructor(\n        address _logic,\n        address initialOwner\n    ) payable ERC1967Proxy(_logic, bytes(\"\")) {\n        _admin = address(new DmtpProxyAdmin(initialOwner));\n        // Set the storage value and emit an event for ERC-1967 compatibility\n        ERC1967Utils.changeAdmin(_proxyAdmin());\n    }\n\n    /**\n     * @dev Returns the admin of this proxy.\n     */\n    function _proxyAdmin() internal view virtual returns (address) {\n        return _admin;\n    }\n\n    /**\n     * @dev If caller is the admin process the call internally, otherwise transparently fallback to the proxy behavior.\n     */\n    function _fallback() internal virtual override {\n        if (msg.sender == _proxyAdmin()) {\n            if (\n                msg.sig !=\n                ITransparentUpgradeableProxy.upgradeToAndCall.selector\n            ) {\n                revert ProxyDeniedAdminAccess();\n            } else {\n                _dispatchUpgradeToAndCall();\n            }\n        } else {\n            super._fallback();\n        }\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy. See {ERC1967Utils-upgradeToAndCall}.\n     *\n     * Requirements:\n     *\n     * - If `data` is empty, `msg.value` must be zero.\n     */\n    function _dispatchUpgradeToAndCall() private {\n        (address newImplementation, bytes memory data) = abi.decode(\n            msg.data[4:],\n            (address, bytes)\n        );\n        ERC1967Utils.upgradeToAndCall(newImplementation, data);\n    }\n}\n"},"contracts/proxy/DmtpProxyAdmin.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\";\n\ncontract DmtpProxyAdmin is ProxyAdmin {\n    constructor(address initialOwner) ProxyAdmin(initialOwner) {}\n\n    function isAdminOf(address proxy) external view returns (bool) {\n        // We need to manually run the static call since the getter cannot be flagged as view\n        // bytes4(keccak256(\"implementation()\")) == 0x5c60da1b\n        (bool success, ) = address(proxy).staticcall(hex\"5c60da1b\");\n        return success;\n    }\n}\n"}},"settings":{"viaIR":true,"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"none"},"outputSelection":{"*":{"*":["evm.assembly","irOptimized","devdoc","abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}},"evmVersion":"paris"}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1019],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":1020,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,1019],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","exportedSymbols":{"IERC1967":[168]},"id":169,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1967","contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"133:101:1","text":" @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."},"fullyImplemented":true,"id":168,"linearizedBaseContracts":[168],"name":"IERC1967","nameLocation":"245:8:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"260:68:1","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":155,"name":"Upgraded","nameLocation":"339:8:1","nodeType":"EventDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"364:14:1","nodeType":"VariableDeclaration","scope":155,"src":"348:30:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"348:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"347:32:1"},"src":"333:47:1"},{"anonymous":false,"documentation":{"id":156,"nodeType":"StructuredDocumentation","src":"386:67:1","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":162,"name":"AdminChanged","nameLocation":"464:12:1","nodeType":"EventDefinition","parameters":{"id":161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":158,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"485:13:1","nodeType":"VariableDeclaration","scope":162,"src":"477:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":157,"name":"address","nodeType":"ElementaryTypeName","src":"477:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":160,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"508:8:1","nodeType":"VariableDeclaration","scope":162,"src":"500:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":159,"name":"address","nodeType":"ElementaryTypeName","src":"500:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"476:41:1"},"src":"458:60:1"},{"anonymous":false,"documentation":{"id":163,"nodeType":"StructuredDocumentation","src":"524:59:1","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":167,"name":"BeaconUpgraded","nameLocation":"594:14:1","nodeType":"EventDefinition","parameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":165,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"625:6:1","nodeType":"VariableDeclaration","scope":167,"src":"609:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":164,"name":"address","nodeType":"ElementaryTypeName","src":"609:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"608:24:1"},"src":"588:45:1"}],"scope":169,"src":"235:400:1","usedErrors":[],"usedEvents":[155,162,167]}],"src":"107:529:1"},"id":1},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol","exportedSymbols":{"ERC1967Proxy":[206],"ERC1967Utils":[500],"Proxy":[536]},"id":207,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":170,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:2"},{"absolutePath":"@openzeppelin/contracts/proxy/Proxy.sol","file":"../Proxy.sol","id":172,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":207,"sourceUnit":537,"src":"140:35:2","symbolAliases":[{"foreign":{"id":171,"name":"Proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"148:5:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","file":"./ERC1967Utils.sol","id":174,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":207,"sourceUnit":501,"src":"176:48:2","symbolAliases":[{"foreign":{"id":173,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"184:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":176,"name":"Proxy","nameLocations":["625:5:2"],"nodeType":"IdentifierPath","referencedDeclaration":536,"src":"625:5:2"},"id":177,"nodeType":"InheritanceSpecifier","src":"625:5:2"}],"canonicalName":"ERC1967Proxy","contractDependencies":[],"contractKind":"contract","documentation":{"id":175,"nodeType":"StructuredDocumentation","src":"226:373:2","text":" @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n implementation address that can be changed. This address is stored in storage in the location specified by\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967], so that it doesn't conflict with the storage layout of the\n implementation behind the proxy."},"fullyImplemented":true,"id":206,"linearizedBaseContracts":[206,536],"name":"ERC1967Proxy","nameLocation":"609:12:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":192,"nodeType":"Block","src":"1145:69:2","statements":[{"expression":{"arguments":[{"id":188,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"1185:14:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":189,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"1201:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":185,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"1155:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$500_$","typeString":"type(library ERC1967Utils)"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1168:16:2","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":315,"src":"1155:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1155:52:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":191,"nodeType":"ExpressionStatement","src":"1155:52:2"}]},"documentation":{"id":178,"nodeType":"StructuredDocumentation","src":"637:439:2","text":" @dev Initializes the upgradeable proxy with an initial implementation specified by `implementation`.\n If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an\n encoded function call, and allows initializing the storage of the proxy like a Solidity constructor.\n Requirements:\n - If `data` is empty, `msg.value` must be zero."},"id":193,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":180,"mutability":"mutable","name":"implementation","nameLocation":"1101:14:2","nodeType":"VariableDeclaration","scope":193,"src":"1093:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":179,"name":"address","nodeType":"ElementaryTypeName","src":"1093:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":182,"mutability":"mutable","name":"_data","nameLocation":"1130:5:2","nodeType":"VariableDeclaration","scope":193,"src":"1117:18:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":181,"name":"bytes","nodeType":"ElementaryTypeName","src":"1117:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1092:44:2"},"returnParameters":{"id":184,"nodeType":"ParameterList","parameters":[],"src":"1145:0:2"},"scope":206,"src":"1081:133:2","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[517],"body":{"id":204,"nodeType":"Block","src":"1659:56:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":200,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"1676:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$500_$","typeString":"type(library ERC1967Utils)"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1689:17:2","memberName":"getImplementation","nodeType":"MemberAccess","referencedDeclaration":252,"src":"1676:30:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1676:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":199,"id":203,"nodeType":"Return","src":"1669:39:2"}]},"documentation":{"id":194,"nodeType":"StructuredDocumentation","src":"1220:358:2","text":" @dev Returns the current implementation address.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"},"id":205,"implemented":true,"kind":"function","modifiers":[],"name":"_implementation","nameLocation":"1592:15:2","nodeType":"FunctionDefinition","overrides":{"id":196,"nodeType":"OverrideSpecifier","overrides":[],"src":"1632:8:2"},"parameters":{"id":195,"nodeType":"ParameterList","parameters":[],"src":"1607:2:2"},"returnParameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":205,"src":"1650:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":197,"name":"address","nodeType":"ElementaryTypeName","src":"1650:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1649:9:2"},"scope":206,"src":"1583:132:2","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":207,"src":"600:1117:2","usedErrors":[226,239,740,1032],"usedEvents":[155]}],"src":"114:1604:2"},"id":2},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","exportedSymbols":{"Address":[989],"ERC1967Utils":[500],"IBeacon":[546],"IERC1967":[168],"StorageSlot":[1165]},"id":501,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":208,"literals":["solidity","^","0.8",".21"],"nodeType":"PragmaDirective","src":"114:24:3"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":210,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":501,"sourceUnit":547,"src":"140:46:3","symbolAliases":[{"foreign":{"id":209,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"148:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","file":"../../interfaces/IERC1967.sol","id":212,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":501,"sourceUnit":169,"src":"187:55:3","symbolAliases":[{"foreign":{"id":211,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"195:8:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":214,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":501,"sourceUnit":990,"src":"243:48:3","symbolAliases":[{"foreign":{"id":213,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"251:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":216,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":501,"sourceUnit":1166,"src":"292:56:3","symbolAliases":[{"foreign":{"id":215,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"300:11:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1967Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":217,"nodeType":"StructuredDocumentation","src":"350:145:3","text":" @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."},"fullyImplemented":true,"id":500,"linearizedBaseContracts":[500],"name":"ERC1967Utils","nameLocation":"504:12:3","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"523:170:3","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."},"id":221,"mutability":"constant","name":"IMPLEMENTATION_SLOT","nameLocation":"789:19:3","nodeType":"VariableDeclaration","scope":500,"src":"763:114:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"763:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"811:66:3","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"documentation":{"id":222,"nodeType":"StructuredDocumentation","src":"884:69:3","text":" @dev The `implementation` of the proxy is invalid."},"errorSelector":"4c9c8ce3","id":226,"name":"ERC1967InvalidImplementation","nameLocation":"964:28:3","nodeType":"ErrorDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":224,"mutability":"mutable","name":"implementation","nameLocation":"1001:14:3","nodeType":"VariableDeclaration","scope":226,"src":"993:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":223,"name":"address","nodeType":"ElementaryTypeName","src":"993:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"992:24:3"},"src":"958:59:3"},{"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"1023:60:3","text":" @dev The `admin` of the proxy is invalid."},"errorSelector":"62e77ba2","id":231,"name":"ERC1967InvalidAdmin","nameLocation":"1094:19:3","nodeType":"ErrorDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"admin","nameLocation":"1122:5:3","nodeType":"VariableDeclaration","scope":231,"src":"1114:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"1114:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1113:15:3"},"src":"1088:41:3"},{"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"1135:61:3","text":" @dev The `beacon` of the proxy is invalid."},"errorSelector":"64ced0ec","id":236,"name":"ERC1967InvalidBeacon","nameLocation":"1207:20:3","nodeType":"ErrorDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"beacon","nameLocation":"1236:6:3","nodeType":"VariableDeclaration","scope":236,"src":"1228:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"1228:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1227:16:3"},"src":"1201:43:3"},{"documentation":{"id":237,"nodeType":"StructuredDocumentation","src":"1250:82:3","text":" @dev An upgrade function sees `msg.value > 0` that may be lost."},"errorSelector":"b398979f","id":239,"name":"ERC1967NonPayable","nameLocation":"1343:17:3","nodeType":"ErrorDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[],"src":"1360:2:3"},"src":"1337:26:3"},{"body":{"id":251,"nodeType":"Block","src":"1502:77:3","statements":[{"expression":{"expression":{"arguments":[{"id":247,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"1546:19:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":245,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"1519:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1165_$","typeString":"type(library StorageSlot)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1531:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1076,"src":"1519:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1047_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1519:47:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1047_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":249,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1567:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1046,"src":"1519:53:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":244,"id":250,"nodeType":"Return","src":"1512:60:3"}]},"documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"1369:67:3","text":" @dev Returns the current implementation address."},"id":252,"implemented":true,"kind":"function","modifiers":[],"name":"getImplementation","nameLocation":"1450:17:3","nodeType":"FunctionDefinition","parameters":{"id":241,"nodeType":"ParameterList","parameters":[],"src":"1467:2:3"},"returnParameters":{"id":244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":252,"src":"1493:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":242,"name":"address","nodeType":"ElementaryTypeName","src":"1493:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1492:9:3"},"scope":500,"src":"1441:138:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":278,"nodeType":"Block","src":"1734:218:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":258,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"1748:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:4:3","memberName":"code","nodeType":"MemberAccess","src":"1748:22:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1771:6:3","memberName":"length","nodeType":"MemberAccess","src":"1748:29:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1781:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1748:34:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":268,"nodeType":"IfStatement","src":"1744:119:3","trueBody":{"id":267,"nodeType":"Block","src":"1784:79:3","statements":[{"errorCall":{"arguments":[{"id":264,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"1834:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":263,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"1805:28:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1805:47:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":266,"nodeType":"RevertStatement","src":"1798:54:3"}]}},{"expression":{"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":272,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"1899:19:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":269,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"1872:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1165_$","typeString":"type(library StorageSlot)"}},"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1884:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1076,"src":"1872:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1047_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1872:47:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1047_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1920:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1046,"src":"1872:53:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":275,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"1928:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1872:73:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":277,"nodeType":"ExpressionStatement","src":"1872:73:3"}]},"documentation":{"id":253,"nodeType":"StructuredDocumentation","src":"1585:81:3","text":" @dev Stores a new address in the ERC-1967 implementation slot."},"id":279,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1680:18:3","nodeType":"FunctionDefinition","parameters":{"id":256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":255,"mutability":"mutable","name":"newImplementation","nameLocation":"1707:17:3","nodeType":"VariableDeclaration","scope":279,"src":"1699:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":254,"name":"address","nodeType":"ElementaryTypeName","src":"1699:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1698:27:3"},"returnParameters":{"id":257,"nodeType":"ParameterList","parameters":[],"src":"1734:0:3"},"scope":500,"src":"1671:281:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":314,"nodeType":"Block","src":"2345:263:3","statements":[{"expression":{"arguments":[{"id":288,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"2374:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":287,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"2355:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2355:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":290,"nodeType":"ExpressionStatement","src":"2355:37:3"},{"eventCall":{"arguments":[{"id":294,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"2425:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":291,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"2407:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$168_$","typeString":"type(contract IERC1967)"}},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2416:8:3","memberName":"Upgraded","nodeType":"MemberAccess","referencedDeclaration":155,"src":"2407:17:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2407:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":296,"nodeType":"EmitStatement","src":"2402:41:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":297,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"2458:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2463:6:3","memberName":"length","nodeType":"MemberAccess","src":"2458:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2472:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2458:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":312,"nodeType":"Block","src":"2559:43:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":309,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"2573:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":311,"nodeType":"ExpressionStatement","src":"2573:18:3"}]},"id":313,"nodeType":"IfStatement","src":"2454:148:3","trueBody":{"id":308,"nodeType":"Block","src":"2475:78:3","statements":[{"expression":{"arguments":[{"id":304,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"2518:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":305,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"2537:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":301,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"2489:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$989_$","typeString":"type(library Address)"}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2497:20:3","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":906,"src":"2489:28:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2489:53:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":307,"nodeType":"ExpressionStatement","src":"2489:53:3"}]}}]},"documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"1958:301:3","text":" @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."},"id":315,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeToAndCall","nameLocation":"2273:16:3","nodeType":"FunctionDefinition","parameters":{"id":285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"newImplementation","nameLocation":"2298:17:3","nodeType":"VariableDeclaration","scope":315,"src":"2290:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"2290:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":284,"mutability":"mutable","name":"data","nameLocation":"2330:4:3","nodeType":"VariableDeclaration","scope":315,"src":"2317:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":283,"name":"bytes","nodeType":"ElementaryTypeName","src":"2317:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2289:46:3"},"returnParameters":{"id":286,"nodeType":"ParameterList","parameters":[],"src":"2345:0:3"},"scope":500,"src":"2264:344:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":316,"nodeType":"StructuredDocumentation","src":"2614:145:3","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"id":319,"mutability":"constant","name":"ADMIN_SLOT","nameLocation":"2855:10:3","nodeType":"VariableDeclaration","scope":500,"src":"2829:105:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":317,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2829:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2868:66:3","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":331,"nodeType":"Block","src":"3339:68:3","statements":[{"expression":{"expression":{"arguments":[{"id":327,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"3383:10:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":325,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"3356:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1165_$","typeString":"type(library StorageSlot)"}},"id":326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3368:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1076,"src":"3356:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1047_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3356:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1047_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":329,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3395:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1046,"src":"3356:44:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":324,"id":330,"nodeType":"Return","src":"3349:51:3"}]},"documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"2941:341:3","text":" @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"id":332,"implemented":true,"kind":"function","modifiers":[],"name":"getAdmin","nameLocation":"3296:8:3","nodeType":"FunctionDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[],"src":"3304:2:3"},"returnParameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":332,"src":"3330:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":322,"name":"address","nodeType":"ElementaryTypeName","src":"3330:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3329:9:3"},"scope":500,"src":"3287:120:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":362,"nodeType":"Block","src":"3535:172:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":338,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"3549:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3569:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3561:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"3561:7:3","typeDescriptions":{}}},"id":342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3561:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3549:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":352,"nodeType":"IfStatement","src":"3545:91:3","trueBody":{"id":351,"nodeType":"Block","src":"3573:63:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3622:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3614:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":345,"name":"address","nodeType":"ElementaryTypeName","src":"3614:7:3","typeDescriptions":{}}},"id":348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3614:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":344,"name":"ERC1967InvalidAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"3594:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3594:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":350,"nodeType":"RevertStatement","src":"3587:38:3"}]}},{"expression":{"id":360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":356,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"3672:10:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":353,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"3645:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1165_$","typeString":"type(library StorageSlot)"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3657:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1076,"src":"3645:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1047_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3645:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1047_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":358,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3684:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1046,"src":"3645:44:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":359,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"3692:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3645:55:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":361,"nodeType":"ExpressionStatement","src":"3645:55:3"}]},"documentation":{"id":333,"nodeType":"StructuredDocumentation","src":"3413:72:3","text":" @dev Stores a new address in the ERC-1967 admin slot."},"id":363,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"3499:9:3","nodeType":"FunctionDefinition","parameters":{"id":336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":335,"mutability":"mutable","name":"newAdmin","nameLocation":"3517:8:3","nodeType":"VariableDeclaration","scope":363,"src":"3509:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":334,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3508:18:3"},"returnParameters":{"id":337,"nodeType":"ParameterList","parameters":[],"src":"3535:0:3"},"scope":500,"src":"3490:217:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":381,"nodeType":"Block","src":"3875:94:3","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":372,"name":"getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"3912:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3912:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":374,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"3924:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":369,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"3890:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$168_$","typeString":"type(contract IERC1967)"}},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3899:12:3","memberName":"AdminChanged","nodeType":"MemberAccess","referencedDeclaration":162,"src":"3890:21:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3890:43:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":376,"nodeType":"EmitStatement","src":"3885:48:3"},{"expression":{"arguments":[{"id":378,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"3953:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":377,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"3943:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3943:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":380,"nodeType":"ExpressionStatement","src":"3943:19:3"}]},"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"3713:109:3","text":" @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."},"id":382,"implemented":true,"kind":"function","modifiers":[],"name":"changeAdmin","nameLocation":"3836:11:3","nodeType":"FunctionDefinition","parameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":366,"mutability":"mutable","name":"newAdmin","nameLocation":"3856:8:3","nodeType":"VariableDeclaration","scope":382,"src":"3848:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"3848:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3847:18:3"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[],"src":"3875:0:3"},"scope":500,"src":"3827:142:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"3975:201:3","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"id":386,"mutability":"constant","name":"BEACON_SLOT","nameLocation":"4272:11:3","nodeType":"VariableDeclaration","scope":500,"src":"4246:106:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":384,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4246:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4286:66:3","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":398,"nodeType":"Block","src":"4468:69:3","statements":[{"expression":{"expression":{"arguments":[{"id":394,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"4512:11:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":392,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"4485:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1165_$","typeString":"type(library StorageSlot)"}},"id":393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4497:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1076,"src":"4485:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1047_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4485:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1047_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":396,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4525:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1046,"src":"4485:45:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":391,"id":397,"nodeType":"Return","src":"4478:52:3"}]},"documentation":{"id":387,"nodeType":"StructuredDocumentation","src":"4359:51:3","text":" @dev Returns the current beacon."},"id":399,"implemented":true,"kind":"function","modifiers":[],"name":"getBeacon","nameLocation":"4424:9:3","nodeType":"FunctionDefinition","parameters":{"id":388,"nodeType":"ParameterList","parameters":[],"src":"4433:2:3"},"returnParameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":399,"src":"4459:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":389,"name":"address","nodeType":"ElementaryTypeName","src":"4459:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4458:9:3"},"scope":500,"src":"4415:122:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":444,"nodeType":"Block","src":"4667:390:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":405,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"4681:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4691:4:3","memberName":"code","nodeType":"MemberAccess","src":"4681:14:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4696:6:3","memberName":"length","nodeType":"MemberAccess","src":"4681:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4706:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4681:26:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":415,"nodeType":"IfStatement","src":"4677:95:3","trueBody":{"id":414,"nodeType":"Block","src":"4709:63:3","statements":[{"errorCall":{"arguments":[{"id":411,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"4751:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":410,"name":"ERC1967InvalidBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"4730:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4730:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":413,"nodeType":"RevertStatement","src":"4723:38:3"}]}},{"expression":{"id":423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":419,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"4809:11:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":416,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"4782:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1165_$","typeString":"type(library StorageSlot)"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4794:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1076,"src":"4782:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1047_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1047_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":421,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4822:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1046,"src":"4782:45:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":422,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"4830:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4782:57:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":424,"nodeType":"ExpressionStatement","src":"4782:57:3"},{"assignments":[426],"declarations":[{"constant":false,"id":426,"mutability":"mutable","name":"beaconImplementation","nameLocation":"4858:20:3","nodeType":"VariableDeclaration","scope":444,"src":"4850:28:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":425,"name":"address","nodeType":"ElementaryTypeName","src":"4850:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":432,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":428,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"4889:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":427,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"4881:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$546_$","typeString":"type(contract IBeacon)"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4881:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$546","typeString":"contract IBeacon"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4900:14:3","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":545,"src":"4881:33:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4881:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4850:66:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":433,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"4930:20:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4951:4:3","memberName":"code","nodeType":"MemberAccess","src":"4930:25:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4956:6:3","memberName":"length","nodeType":"MemberAccess","src":"4930:32:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4966:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4930:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":443,"nodeType":"IfStatement","src":"4926:125:3","trueBody":{"id":442,"nodeType":"Block","src":"4969:82:3","statements":[{"errorCall":{"arguments":[{"id":439,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"5019:20:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":438,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"4990:28:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4990:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":441,"nodeType":"RevertStatement","src":"4983:57:3"}]}}]},"documentation":{"id":400,"nodeType":"StructuredDocumentation","src":"4543:72:3","text":" @dev Stores a new beacon in the ERC-1967 beacon slot."},"id":445,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"4629:10:3","nodeType":"FunctionDefinition","parameters":{"id":403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":402,"mutability":"mutable","name":"newBeacon","nameLocation":"4648:9:3","nodeType":"VariableDeclaration","scope":445,"src":"4640:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":401,"name":"address","nodeType":"ElementaryTypeName","src":"4640:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4639:19:3"},"returnParameters":{"id":404,"nodeType":"ParameterList","parameters":[],"src":"4667:0:3"},"scope":500,"src":"4620:437:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":484,"nodeType":"Block","src":"5661:263:3","statements":[{"expression":{"arguments":[{"id":454,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"5682:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":453,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"5671:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5671:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":456,"nodeType":"ExpressionStatement","src":"5671:21:3"},{"eventCall":{"arguments":[{"id":460,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"5731:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":457,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"5707:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$168_$","typeString":"type(contract IERC1967)"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5716:14:3","memberName":"BeaconUpgraded","nodeType":"MemberAccess","referencedDeclaration":167,"src":"5707:23:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5707:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":462,"nodeType":"EmitStatement","src":"5702:39:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":463,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"5756:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5761:6:3","memberName":"length","nodeType":"MemberAccess","src":"5756:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5770:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5756:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":482,"nodeType":"Block","src":"5875:43:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":479,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"5889:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5889:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":481,"nodeType":"ExpressionStatement","src":"5889:18:3"}]},"id":483,"nodeType":"IfStatement","src":"5752:166:3","trueBody":{"id":478,"nodeType":"Block","src":"5773:96:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":471,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"5824:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":470,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"5816:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$546_$","typeString":"type(contract IBeacon)"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5816:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$546","typeString":"contract IBeacon"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5835:14:3","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":545,"src":"5816:33:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5816:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":475,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"5853:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":467,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"5787:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$989_$","typeString":"type(library Address)"}},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5795:20:3","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":906,"src":"5787:28:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5787:71:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":477,"nodeType":"ExpressionStatement","src":"5787:71:3"}]}}]},"documentation":{"id":446,"nodeType":"StructuredDocumentation","src":"5063:514:3","text":" @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."},"id":485,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeBeaconToAndCall","nameLocation":"5591:22:3","nodeType":"FunctionDefinition","parameters":{"id":451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":448,"mutability":"mutable","name":"newBeacon","nameLocation":"5622:9:3","nodeType":"VariableDeclaration","scope":485,"src":"5614:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":447,"name":"address","nodeType":"ElementaryTypeName","src":"5614:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":450,"mutability":"mutable","name":"data","nameLocation":"5646:4:3","nodeType":"VariableDeclaration","scope":485,"src":"5633:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":449,"name":"bytes","nodeType":"ElementaryTypeName","src":"5633:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5613:38:3"},"returnParameters":{"id":452,"nodeType":"ParameterList","parameters":[],"src":"5661:0:3"},"scope":500,"src":"5582:342:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":498,"nodeType":"Block","src":"6149:86:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":489,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"6163:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6167:5:3","memberName":"value","nodeType":"MemberAccess","src":"6163:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6175:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6163:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":497,"nodeType":"IfStatement","src":"6159:70:3","trueBody":{"id":496,"nodeType":"Block","src":"6178:51:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":493,"name":"ERC1967NonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"6199:17:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6199:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":495,"nodeType":"RevertStatement","src":"6192:26:3"}]}}]},"documentation":{"id":486,"nodeType":"StructuredDocumentation","src":"5930:178:3","text":" @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."},"id":499,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNonPayable","nameLocation":"6122:16:3","nodeType":"FunctionDefinition","parameters":{"id":487,"nodeType":"ParameterList","parameters":[],"src":"6138:2:3"},"returnParameters":{"id":488,"nodeType":"ParameterList","parameters":[],"src":"6149:0:3"},"scope":500,"src":"6113:122:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":501,"src":"496:5741:3","usedErrors":[226,231,236,239],"usedEvents":[]}],"src":"114:6124:3"},"id":3},"@openzeppelin/contracts/proxy/Proxy.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/Proxy.sol","exportedSymbols":{"Proxy":[536]},"id":537,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":502,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:4"},{"abstract":true,"baseContracts":[],"canonicalName":"Proxy","contractDependencies":[],"contractKind":"contract","documentation":{"id":503,"nodeType":"StructuredDocumentation","src":"125:598:4","text":" @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."},"fullyImplemented":false,"id":536,"linearizedBaseContracts":[536],"name":"Proxy","nameLocation":"742:5:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":510,"nodeType":"Block","src":"1009:835:4","statements":[{"AST":{"nativeSrc":"1028:810:4","nodeType":"YulBlock","src":"1028:810:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1281:1:4","nodeType":"YulLiteral","src":"1281:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"1284:1:4","nodeType":"YulLiteral","src":"1284:1:4","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"1287:12:4","nodeType":"YulIdentifier","src":"1287:12:4"},"nativeSrc":"1287:14:4","nodeType":"YulFunctionCall","src":"1287:14:4"}],"functionName":{"name":"calldatacopy","nativeSrc":"1268:12:4","nodeType":"YulIdentifier","src":"1268:12:4"},"nativeSrc":"1268:34:4","nodeType":"YulFunctionCall","src":"1268:34:4"},"nativeSrc":"1268:34:4","nodeType":"YulExpressionStatement","src":"1268:34:4"},{"nativeSrc":"1429:74:4","nodeType":"YulVariableDeclaration","src":"1429:74:4","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"1456:3:4","nodeType":"YulIdentifier","src":"1456:3:4"},"nativeSrc":"1456:5:4","nodeType":"YulFunctionCall","src":"1456:5:4"},{"name":"implementation","nativeSrc":"1463:14:4","nodeType":"YulIdentifier","src":"1463:14:4"},{"kind":"number","nativeSrc":"1479:1:4","nodeType":"YulLiteral","src":"1479:1:4","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"1482:12:4","nodeType":"YulIdentifier","src":"1482:12:4"},"nativeSrc":"1482:14:4","nodeType":"YulFunctionCall","src":"1482:14:4"},{"kind":"number","nativeSrc":"1498:1:4","nodeType":"YulLiteral","src":"1498:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"1501:1:4","nodeType":"YulLiteral","src":"1501:1:4","type":"","value":"0"}],"functionName":{"name":"delegatecall","nativeSrc":"1443:12:4","nodeType":"YulIdentifier","src":"1443:12:4"},"nativeSrc":"1443:60:4","nodeType":"YulFunctionCall","src":"1443:60:4"},"variables":[{"name":"result","nativeSrc":"1433:6:4","nodeType":"YulTypedName","src":"1433:6:4","type":""}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1571:1:4","nodeType":"YulLiteral","src":"1571:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"1574:1:4","nodeType":"YulLiteral","src":"1574:1:4","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1577:14:4","nodeType":"YulIdentifier","src":"1577:14:4"},"nativeSrc":"1577:16:4","nodeType":"YulFunctionCall","src":"1577:16:4"}],"functionName":{"name":"returndatacopy","nativeSrc":"1556:14:4","nodeType":"YulIdentifier","src":"1556:14:4"},"nativeSrc":"1556:38:4","nodeType":"YulFunctionCall","src":"1556:38:4"},"nativeSrc":"1556:38:4","nodeType":"YulExpressionStatement","src":"1556:38:4"},{"cases":[{"body":{"nativeSrc":"1689:59:4","nodeType":"YulBlock","src":"1689:59:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1714:1:4","nodeType":"YulLiteral","src":"1714:1:4","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1717:14:4","nodeType":"YulIdentifier","src":"1717:14:4"},"nativeSrc":"1717:16:4","nodeType":"YulFunctionCall","src":"1717:16:4"}],"functionName":{"name":"revert","nativeSrc":"1707:6:4","nodeType":"YulIdentifier","src":"1707:6:4"},"nativeSrc":"1707:27:4","nodeType":"YulFunctionCall","src":"1707:27:4"},"nativeSrc":"1707:27:4","nodeType":"YulExpressionStatement","src":"1707:27:4"}]},"nativeSrc":"1682:66:4","nodeType":"YulCase","src":"1682:66:4","value":{"kind":"number","nativeSrc":"1687:1:4","nodeType":"YulLiteral","src":"1687:1:4","type":"","value":"0"}},{"body":{"nativeSrc":"1769:59:4","nodeType":"YulBlock","src":"1769:59:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1794:1:4","nodeType":"YulLiteral","src":"1794:1:4","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1797:14:4","nodeType":"YulIdentifier","src":"1797:14:4"},"nativeSrc":"1797:16:4","nodeType":"YulFunctionCall","src":"1797:16:4"}],"functionName":{"name":"return","nativeSrc":"1787:6:4","nodeType":"YulIdentifier","src":"1787:6:4"},"nativeSrc":"1787:27:4","nodeType":"YulFunctionCall","src":"1787:27:4"},"nativeSrc":"1787:27:4","nodeType":"YulExpressionStatement","src":"1787:27:4"}]},"nativeSrc":"1761:67:4","nodeType":"YulCase","src":"1761:67:4","value":"default"}],"expression":{"name":"result","nativeSrc":"1615:6:4","nodeType":"YulIdentifier","src":"1615:6:4"},"nativeSrc":"1608:220:4","nodeType":"YulSwitch","src":"1608:220:4"}]},"evmVersion":"paris","externalReferences":[{"declaration":506,"isOffset":false,"isSlot":false,"src":"1463:14:4","valueSize":1}],"id":509,"nodeType":"InlineAssembly","src":"1019:819:4"}]},"documentation":{"id":504,"nodeType":"StructuredDocumentation","src":"754:190:4","text":" @dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."},"id":511,"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"958:9:4","nodeType":"FunctionDefinition","parameters":{"id":507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":506,"mutability":"mutable","name":"implementation","nameLocation":"976:14:4","nodeType":"VariableDeclaration","scope":511,"src":"968:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":505,"name":"address","nodeType":"ElementaryTypeName","src":"968:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"967:24:4"},"returnParameters":{"id":508,"nodeType":"ParameterList","parameters":[],"src":"1009:0:4"},"scope":536,"src":"949:895:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"documentation":{"id":512,"nodeType":"StructuredDocumentation","src":"1850:173:4","text":" @dev This is a virtual function that should be overridden so it returns the address to which the fallback\n function and {_fallback} should delegate."},"id":517,"implemented":false,"kind":"function","modifiers":[],"name":"_implementation","nameLocation":"2037:15:4","nodeType":"FunctionDefinition","parameters":{"id":513,"nodeType":"ParameterList","parameters":[],"src":"2052:2:4"},"returnParameters":{"id":516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":515,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":517,"src":"2086:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":514,"name":"address","nodeType":"ElementaryTypeName","src":"2086:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2085:9:4"},"scope":536,"src":"2028:67:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":526,"nodeType":"Block","src":"2361:45:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":522,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"2381:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2381:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":521,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"2371:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2371:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":525,"nodeType":"ExpressionStatement","src":"2371:28:4"}]},"documentation":{"id":518,"nodeType":"StructuredDocumentation","src":"2101:217:4","text":" @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internal call site, it will return directly to the external caller."},"id":527,"implemented":true,"kind":"function","modifiers":[],"name":"_fallback","nameLocation":"2332:9:4","nodeType":"FunctionDefinition","parameters":{"id":519,"nodeType":"ParameterList","parameters":[],"src":"2341:2:4"},"returnParameters":{"id":520,"nodeType":"ParameterList","parameters":[],"src":"2361:0:4"},"scope":536,"src":"2323:83:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":534,"nodeType":"Block","src":"2639:28:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":531,"name":"_fallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"2649:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2649:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":533,"nodeType":"ExpressionStatement","src":"2649:11:4"}]},"documentation":{"id":528,"nodeType":"StructuredDocumentation","src":"2412:186:4","text":" @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."},"id":535,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"2611:2:4"},"returnParameters":{"id":530,"nodeType":"ParameterList","parameters":[],"src":"2639:0:4"},"scope":536,"src":"2603:64:4","stateMutability":"payable","virtual":true,"visibility":"external"}],"scope":537,"src":"724:1945:4","usedErrors":[],"usedEvents":[]}],"src":"99:2571:4"},"id":4},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[546]},"id":547,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":538,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":539,"nodeType":"StructuredDocumentation","src":"134:79:5","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":546,"linearizedBaseContracts":[546],"name":"IBeacon","nameLocation":"224:7:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":540,"nodeType":"StructuredDocumentation","src":"238:168:5","text":" @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."},"functionSelector":"5c60da1b","id":545,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"420:14:5","nodeType":"FunctionDefinition","parameters":{"id":541,"nodeType":"ParameterList","parameters":[],"src":"434:2:5"},"returnParameters":{"id":544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":545,"src":"460:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":542,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"459:9:5"},"scope":546,"src":"411:58:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":547,"src":"214:257:5","usedErrors":[],"usedEvents":[]}],"src":"108:364:5"},"id":5},"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol","exportedSymbols":{"ITransparentUpgradeableProxy":[616],"Ownable":[147],"ProxyAdmin":[594]},"id":595,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":548,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"116:24:6"},{"absolutePath":"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol","file":"./TransparentUpgradeableProxy.sol","id":550,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":595,"sourceUnit":731,"src":"142:79:6","symbolAliases":[{"foreign":{"id":549,"name":"ITransparentUpgradeableProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"150:28:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"../../access/Ownable.sol","id":552,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":595,"sourceUnit":148,"src":"222:49:6","symbolAliases":[{"foreign":{"id":551,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"230:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":554,"name":"Ownable","nameLocations":["525:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"525:7:6"},"id":555,"nodeType":"InheritanceSpecifier","src":"525:7:6"}],"canonicalName":"ProxyAdmin","contractDependencies":[],"contractKind":"contract","documentation":{"id":553,"nodeType":"StructuredDocumentation","src":"273:228:6","text":" @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an\n explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}."},"fullyImplemented":true,"id":594,"linearizedBaseContracts":[594,147,1019],"name":"ProxyAdmin","nameLocation":"511:10:6","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":556,"nodeType":"StructuredDocumentation","src":"539:643:6","text":" @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgrade(address,address)`\n and `upgradeAndCall(address,address,bytes)` are present, and `upgrade` must be used if no function should be called,\n while `upgradeAndCall` will invoke the `receive` function if the third argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeAndCall(address,address,bytes)` is present, and the third argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."},"functionSelector":"ad3cb1cc","id":559,"mutability":"constant","name":"UPGRADE_INTERFACE_VERSION","nameLocation":"1210:25:6","nodeType":"VariableDeclaration","scope":594,"src":"1187:58:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":557,"name":"string","nodeType":"ElementaryTypeName","src":"1187:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"352e302e30","id":558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1238:7:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c","typeString":"literal_string \"5.0.0\""},"value":"5.0.0"},"visibility":"public"},{"body":{"id":568,"nodeType":"Block","src":"1385:2:6","statements":[]},"documentation":{"id":560,"nodeType":"StructuredDocumentation","src":"1252:72:6","text":" @dev Sets the initial owner who can perform upgrades."},"id":569,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":565,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"1371:12:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":566,"kind":"baseConstructorSpecifier","modifierName":{"id":564,"name":"Ownable","nameLocations":["1363:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1363:7:6"},"nodeType":"ModifierInvocation","src":"1363:21:6"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":562,"mutability":"mutable","name":"initialOwner","nameLocation":"1349:12:6","nodeType":"VariableDeclaration","scope":569,"src":"1341:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":561,"name":"address","nodeType":"ElementaryTypeName","src":"1341:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1340:22:6"},"returnParameters":{"id":567,"nodeType":"ParameterList","parameters":[],"src":"1385:0:6"},"scope":594,"src":"1329:58:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":592,"nodeType":"Block","src":"1883:79:6","statements":[{"expression":{"arguments":[{"id":588,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"1934:14:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":589,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"1950:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":582,"name":"proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"1893:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$616","typeString":"contract ITransparentUpgradeableProxy"}},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1899:16:6","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":615,"src":"1893:22:6","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory) payable external"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":585,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1923:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1927:5:6","memberName":"value","nodeType":"MemberAccess","src":"1923:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1893:40:6","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$returns$__$value","typeString":"function (address,bytes memory) payable external"}},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1893:62:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":591,"nodeType":"ExpressionStatement","src":"1893:62:6"}]},"documentation":{"id":570,"nodeType":"StructuredDocumentation","src":"1393:319:6","text":" @dev Upgrades `proxy` to `implementation` and calls a function on the new implementation.\n See {TransparentUpgradeableProxy-_dispatchUpgradeToAndCall}.\n Requirements:\n - This contract must be the admin of `proxy`.\n - If `data` is empty, `msg.value` must be zero."},"functionSelector":"9623609d","id":593,"implemented":true,"kind":"function","modifiers":[{"id":580,"kind":"modifierInvocation","modifierName":{"id":579,"name":"onlyOwner","nameLocations":["1873:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1873:9:6"},"nodeType":"ModifierInvocation","src":"1873:9:6"}],"name":"upgradeAndCall","nameLocation":"1726:14:6","nodeType":"FunctionDefinition","parameters":{"id":578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":573,"mutability":"mutable","name":"proxy","nameLocation":"1779:5:6","nodeType":"VariableDeclaration","scope":593,"src":"1750:34:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$616","typeString":"contract ITransparentUpgradeableProxy"},"typeName":{"id":572,"nodeType":"UserDefinedTypeName","pathNode":{"id":571,"name":"ITransparentUpgradeableProxy","nameLocations":["1750:28:6"],"nodeType":"IdentifierPath","referencedDeclaration":616,"src":"1750:28:6"},"referencedDeclaration":616,"src":"1750:28:6","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$616","typeString":"contract ITransparentUpgradeableProxy"}},"visibility":"internal"},{"constant":false,"id":575,"mutability":"mutable","name":"implementation","nameLocation":"1802:14:6","nodeType":"VariableDeclaration","scope":593,"src":"1794:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":574,"name":"address","nodeType":"ElementaryTypeName","src":"1794:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":577,"mutability":"mutable","name":"data","nameLocation":"1839:4:6","nodeType":"VariableDeclaration","scope":593,"src":"1826:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":576,"name":"bytes","nodeType":"ElementaryTypeName","src":"1826:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1740:109:6"},"returnParameters":{"id":581,"nodeType":"ParameterList","parameters":[],"src":"1883:0:6"},"scope":594,"src":"1717:245:6","stateMutability":"payable","virtual":true,"visibility":"public"}],"scope":595,"src":"502:1462:6","usedErrors":[13,18],"usedEvents":[24]}],"src":"116:1849:6"},"id":6},"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol","exportedSymbols":{"ERC1967Proxy":[206],"ERC1967Utils":[500],"IERC1967":[168],"ITransparentUpgradeableProxy":[616],"ProxyAdmin":[594],"TransparentUpgradeableProxy":[730]},"id":731,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":596,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"133:24:7"},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","file":"../ERC1967/ERC1967Utils.sol","id":598,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":731,"sourceUnit":501,"src":"159:57:7","symbolAliases":[{"foreign":{"id":597,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"167:12:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol","file":"../ERC1967/ERC1967Proxy.sol","id":600,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":731,"sourceUnit":207,"src":"217:57:7","symbolAliases":[{"foreign":{"id":599,"name":"ERC1967Proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"225:12:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","file":"../../interfaces/IERC1967.sol","id":602,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":731,"sourceUnit":169,"src":"275:55:7","symbolAliases":[{"foreign":{"id":601,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"283:8:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol","file":"./ProxyAdmin.sol","id":604,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":731,"sourceUnit":595,"src":"331:44:7","symbolAliases":[{"foreign":{"id":603,"name":"ProxyAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"339:10:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":606,"name":"IERC1967","nameLocations":["865:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":168,"src":"865:8:7"},"id":607,"nodeType":"InheritanceSpecifier","src":"865:8:7"}],"canonicalName":"ITransparentUpgradeableProxy","contractDependencies":[],"contractKind":"interface","documentation":{"id":605,"nodeType":"StructuredDocumentation","src":"377:445:7","text":" @dev Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy}\n does not implement this interface directly, and its upgradeability mechanism is implemented by an internal dispatch\n mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not\n include them in the ABI so this interface must be used to interact with it."},"fullyImplemented":false,"id":616,"linearizedBaseContracts":[616,168],"name":"ITransparentUpgradeableProxy","nameLocation":"833:28:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":608,"nodeType":"StructuredDocumentation","src":"880:47:7","text":"@dev See {UUPSUpgradeable-upgradeToAndCall}"},"functionSelector":"4f1ef286","id":615,"implemented":false,"kind":"function","modifiers":[],"name":"upgradeToAndCall","nameLocation":"941:16:7","nodeType":"FunctionDefinition","parameters":{"id":613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":610,"mutability":"mutable","name":"newImplementation","nameLocation":"966:17:7","nodeType":"VariableDeclaration","scope":615,"src":"958:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":609,"name":"address","nodeType":"ElementaryTypeName","src":"958:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":612,"mutability":"mutable","name":"data","nameLocation":"1000:4:7","nodeType":"VariableDeclaration","scope":615,"src":"985:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":611,"name":"bytes","nodeType":"ElementaryTypeName","src":"985:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"957:48:7"},"returnParameters":{"id":614,"nodeType":"ParameterList","parameters":[],"src":"1022:0:7"},"scope":616,"src":"932:91:7","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":731,"src":"823:202:7","usedErrors":[],"usedEvents":[155,162,167]},{"abstract":false,"baseContracts":[{"baseName":{"id":618,"name":"ERC1967Proxy","nameLocations":["4354:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":206,"src":"4354:12:7"},"id":619,"nodeType":"InheritanceSpecifier","src":"4354:12:7"}],"canonicalName":"TransparentUpgradeableProxy","contractDependencies":[594],"contractKind":"contract","documentation":{"id":617,"nodeType":"StructuredDocumentation","src":"1027:3286:7","text":" @dev This contract implements a proxy that is upgradeable through an associated {ProxyAdmin} instance.\n To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\n clashing], which can potentially be used in an attack, this contract uses the\n https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\n things that go hand in hand:\n 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\n that call matches the {ITransparentUpgradeableProxy-upgradeToAndCall} function exposed by the proxy itself.\n 2. If the admin calls the proxy, it can call the `upgradeToAndCall` function but any other call won't be forwarded to\n the implementation. If the admin tries to call a function on the implementation it will fail with an error indicating\n the proxy admin cannot fallback to the target implementation.\n These properties mean that the admin account can only be used for upgrading the proxy, so it's best if it's a\n dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to\n call a function from the proxy implementation. For this reason, the proxy deploys an instance of {ProxyAdmin} and\n allows upgrades only if they come through it. You should think of the `ProxyAdmin` instance as the administrative\n interface of the proxy, including the ability to change who can trigger upgrades by transferring ownership.\n NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not\n inherit from that interface, and instead `upgradeToAndCall` is implicitly implemented using a custom dispatch\n mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to\n fully implement transparency without decoding reverts caused by selector clashes between the proxy and the\n implementation.\n NOTE: This proxy does not inherit from {Context} deliberately. The {ProxyAdmin} of this contract won't send a\n meta-transaction in any way, and any other meta-transaction setup should be made in the implementation contract.\n IMPORTANT: This contract avoids unnecessary storage reads by setting the admin only during construction as an\n immutable variable, preventing any changes thereafter. However, the admin slot defined in ERC-1967 can still be\n overwritten by the implementation logic pointed to by this proxy. In such cases, the contract may end up in an\n undesirable state where the admin slot is different from the actual admin. Relying on the value of the admin slot\n is generally fine if the implementation is trusted.\n WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the\n compiler will not check that there are no selector conflicts, due to the note above. A selector clash between any new\n function and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This\n could render the `upgradeToAndCall` function inaccessible, preventing upgradeability and compromising transparency."},"fullyImplemented":true,"id":730,"linearizedBaseContracts":[730,206,536],"name":"TransparentUpgradeableProxy","nameLocation":"4323:27:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":621,"mutability":"immutable","name":"_admin","nameLocation":"4734:6:7","nodeType":"VariableDeclaration","scope":730,"src":"4708:32:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":620,"name":"address","nodeType":"ElementaryTypeName","src":"4708:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":622,"nodeType":"StructuredDocumentation","src":"4747:102:7","text":" @dev The proxy caller is the current admin, and can't fallback to the proxy target."},"errorSelector":"d2b576ec","id":624,"name":"ProxyDeniedAdminAccess","nameLocation":"4860:22:7","nodeType":"ErrorDefinition","parameters":{"id":623,"nodeType":"ParameterList","parameters":[],"src":"4882:2:7"},"src":"4854:31:7"},{"body":{"id":656,"nodeType":"Block","src":"5263:190:7","statements":[{"expression":{"id":647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":638,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"5273:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":644,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"5305:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"5290:14:7","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_address_$returns$_t_contract$_ProxyAdmin_$594_$","typeString":"function (address) returns (contract ProxyAdmin)"},"typeName":{"id":642,"nodeType":"UserDefinedTypeName","pathNode":{"id":641,"name":"ProxyAdmin","nameLocations":["5294:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":594,"src":"5294:10:7"},"referencedDeclaration":594,"src":"5294:10:7","typeDescriptions":{"typeIdentifier":"t_contract$_ProxyAdmin_$594","typeString":"contract ProxyAdmin"}}},"id":645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5290:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ProxyAdmin_$594","typeString":"contract ProxyAdmin"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ProxyAdmin_$594","typeString":"contract ProxyAdmin"}],"id":640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5282:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":639,"name":"address","nodeType":"ElementaryTypeName","src":"5282:7:7","typeDescriptions":{}}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5282:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5273:46:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":648,"nodeType":"ExpressionStatement","src":"5273:46:7"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":652,"name":"_proxyAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"5432:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5432:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":649,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"5407:12:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$500_$","typeString":"type(library ERC1967Utils)"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5420:11:7","memberName":"changeAdmin","nodeType":"MemberAccess","referencedDeclaration":382,"src":"5407:24:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5407:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":655,"nodeType":"ExpressionStatement","src":"5407:39:7"}]},"documentation":{"id":625,"nodeType":"StructuredDocumentation","src":"4891:261:7","text":" @dev Initializes an upgradeable proxy managed by an instance of a {ProxyAdmin} with an `initialOwner`,\n backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in\n {ERC1967Proxy-constructor}."},"id":657,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":634,"name":"_logic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"5248:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":635,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5256:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":636,"kind":"baseConstructorSpecifier","modifierName":{"id":633,"name":"ERC1967Proxy","nameLocations":["5235:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":206,"src":"5235:12:7"},"nodeType":"ModifierInvocation","src":"5235:27:7"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":627,"mutability":"mutable","name":"_logic","nameLocation":"5177:6:7","nodeType":"VariableDeclaration","scope":657,"src":"5169:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":626,"name":"address","nodeType":"ElementaryTypeName","src":"5169:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":629,"mutability":"mutable","name":"initialOwner","nameLocation":"5193:12:7","nodeType":"VariableDeclaration","scope":657,"src":"5185:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":628,"name":"address","nodeType":"ElementaryTypeName","src":"5185:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":631,"mutability":"mutable","name":"_data","nameLocation":"5220:5:7","nodeType":"VariableDeclaration","scope":657,"src":"5207:18:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":630,"name":"bytes","nodeType":"ElementaryTypeName","src":"5207:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5168:58:7"},"returnParameters":{"id":637,"nodeType":"ParameterList","parameters":[],"src":"5263:0:7"},"scope":730,"src":"5157:296:7","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":665,"nodeType":"Block","src":"5583:30:7","statements":[{"expression":{"id":663,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"5600:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":662,"id":664,"nodeType":"Return","src":"5593:13:7"}]},"documentation":{"id":658,"nodeType":"StructuredDocumentation","src":"5459:56:7","text":" @dev Returns the admin of this proxy."},"id":666,"implemented":true,"kind":"function","modifiers":[],"name":"_proxyAdmin","nameLocation":"5529:11:7","nodeType":"FunctionDefinition","parameters":{"id":659,"nodeType":"ParameterList","parameters":[],"src":"5540:2:7"},"returnParameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":666,"src":"5574:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":660,"name":"address","nodeType":"ElementaryTypeName","src":"5574:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5573:9:7"},"scope":730,"src":"5520:93:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[527],"body":{"id":699,"nodeType":"Block","src":"5802:322:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":671,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"5816:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5820:6:7","memberName":"sender","nodeType":"MemberAccess","src":"5816:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":673,"name":"_proxyAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"5830:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5830:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5816:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":697,"nodeType":"Block","src":"6076:42:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":692,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967271,"src":"6090:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_TransparentUpgradeableProxy_$730_$","typeString":"type(contract super TransparentUpgradeableProxy)"}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6096:9:7","memberName":"_fallback","nodeType":"MemberAccess","referencedDeclaration":527,"src":"6090:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6090:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":696,"nodeType":"ExpressionStatement","src":"6090:17:7"}]},"id":698,"nodeType":"IfStatement","src":"5812:306:7","trueBody":{"id":691,"nodeType":"Block","src":"5845:225:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":676,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"5863:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5867:3:7","memberName":"sig","nodeType":"MemberAccess","src":"5863:7:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":678,"name":"ITransparentUpgradeableProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"5874:28:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ITransparentUpgradeableProxy_$616_$","typeString":"type(contract ITransparentUpgradeableProxy)"}},"id":679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5903:16:7","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":615,"src":"5874:45:7","typeDescriptions":{"typeIdentifier":"t_function_declaration_payable$_t_address_$_t_bytes_calldata_ptr_$returns$__$","typeString":"function ITransparentUpgradeableProxy.upgradeToAndCall(address,bytes calldata) payable"}},"id":680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5920:8:7","memberName":"selector","nodeType":"MemberAccess","src":"5874:54:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"5863:65:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":689,"nodeType":"Block","src":"6000:60:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":686,"name":"_dispatchUpgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"6018:25:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6018:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":688,"nodeType":"ExpressionStatement","src":"6018:27:7"}]},"id":690,"nodeType":"IfStatement","src":"5859:201:7","trueBody":{"id":685,"nodeType":"Block","src":"5930:64:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":682,"name":"ProxyDeniedAdminAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"5955:22:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5955:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":684,"nodeType":"RevertStatement","src":"5948:31:7"}]}}]}}]},"documentation":{"id":667,"nodeType":"StructuredDocumentation","src":"5619:131:7","text":" @dev If caller is the admin process the call internally, otherwise transparently fallback to the proxy behavior."},"id":700,"implemented":true,"kind":"function","modifiers":[],"name":"_fallback","nameLocation":"5764:9:7","nodeType":"FunctionDefinition","overrides":{"id":669,"nodeType":"OverrideSpecifier","overrides":[],"src":"5793:8:7"},"parameters":{"id":668,"nodeType":"ParameterList","parameters":[],"src":"5773:2:7"},"returnParameters":{"id":670,"nodeType":"ParameterList","parameters":[],"src":"5802:0:7"},"scope":730,"src":"5755:369:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":728,"nodeType":"Block","src":"6371:172:7","statements":[{"assignments":[705,707],"declarations":[{"constant":false,"id":705,"mutability":"mutable","name":"newImplementation","nameLocation":"6390:17:7","nodeType":"VariableDeclaration","scope":728,"src":"6382:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":704,"name":"address","nodeType":"ElementaryTypeName","src":"6382:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":707,"mutability":"mutable","name":"data","nameLocation":"6422:4:7","nodeType":"VariableDeclaration","scope":728,"src":"6409:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":706,"name":"bytes","nodeType":"ElementaryTypeName","src":"6409:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":720,"initialValue":{"arguments":[{"baseExpression":{"expression":{"id":710,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"6441:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6445:4:7","memberName":"data","nodeType":"MemberAccess","src":"6441:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"6441:12:7","startExpression":{"hexValue":"34","id":712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6450:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},{"components":[{"id":715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6456:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":714,"name":"address","nodeType":"ElementaryTypeName","src":"6456:7:7","typeDescriptions":{}}},{"id":717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6465:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":716,"name":"bytes","nodeType":"ElementaryTypeName","src":"6465:5:7","typeDescriptions":{}}}],"id":718,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6455:16:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_address_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(address),type(bytes storage pointer))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"},{"typeIdentifier":"t_tuple$_t_type$_t_address_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(address),type(bytes storage pointer))"}],"expression":{"id":708,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"6430:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6434:6:7","memberName":"decode","nodeType":"MemberAccess","src":"6430:10:7","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6430:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_payable_$_t_bytes_memory_ptr_$","typeString":"tuple(address payable,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6381:91:7"},{"expression":{"arguments":[{"id":724,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"6512:17:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":725,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"6531:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":721,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"6482:12:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$500_$","typeString":"type(library ERC1967Utils)"}},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6495:16:7","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":315,"src":"6482:29:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6482:54:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":727,"nodeType":"ExpressionStatement","src":"6482:54:7"}]},"documentation":{"id":701,"nodeType":"StructuredDocumentation","src":"6130:191:7","text":" @dev Upgrade the implementation of the proxy. See {ERC1967Utils-upgradeToAndCall}.\n Requirements:\n - If `data` is empty, `msg.value` must be zero."},"id":729,"implemented":true,"kind":"function","modifiers":[],"name":"_dispatchUpgradeToAndCall","nameLocation":"6335:25:7","nodeType":"FunctionDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[],"src":"6360:2:7"},"returnParameters":{"id":703,"nodeType":"ParameterList","parameters":[],"src":"6371:0:7"},"scope":730,"src":"6326:217:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":731,"src":"4314:2231:7","usedErrors":[226,231,239,624,740,1032],"usedEvents":[155,162]}],"src":"133:6413:7"},"id":7},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[989],"Errors":[1041]},"id":990,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":732,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","file":"./Errors.sol","id":734,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":990,"sourceUnit":1042,"src":"127:36:8","symbolAliases":[{"foreign":{"id":733,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"135:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":735,"nodeType":"StructuredDocumentation","src":"165:67:8","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":989,"linearizedBaseContracts":[989],"name":"Address","nameLocation":"241:7:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":736,"nodeType":"StructuredDocumentation","src":"255:75:8","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":740,"name":"AddressEmptyCode","nameLocation":"341:16:8","nodeType":"ErrorDefinition","parameters":{"id":739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":738,"mutability":"mutable","name":"target","nameLocation":"366:6:8","nodeType":"VariableDeclaration","scope":740,"src":"358:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":737,"name":"address","nodeType":"ElementaryTypeName","src":"358:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"357:16:8"},"src":"335:39:8"},{"body":{"id":786,"nodeType":"Block","src":"1361:278:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":750,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"1383:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$989","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$989","typeString":"library Address"}],"id":749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1375:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":748,"name":"address","nodeType":"ElementaryTypeName","src":"1375:7:8","typeDescriptions":{}}},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1375:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1389:7:8","memberName":"balance","nodeType":"MemberAccess","src":"1375:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":753,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"1399:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1375:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":767,"nodeType":"IfStatement","src":"1371:125:8","trueBody":{"id":766,"nodeType":"Block","src":"1407:89:8","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":760,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"1463:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$989","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$989","typeString":"library Address"}],"id":759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1455:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":758,"name":"address","nodeType":"ElementaryTypeName","src":"1455:7:8","typeDescriptions":{}}},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:7:8","memberName":"balance","nodeType":"MemberAccess","src":"1455:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":763,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"1478:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":755,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"1428:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$1041_$","typeString":"type(library Errors)"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:19:8","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":1029,"src":"1428:26:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1428:57:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":765,"nodeType":"RevertStatement","src":"1421:64:8"}]}},{"assignments":[769,null],"declarations":[{"constant":false,"id":769,"mutability":"mutable","name":"success","nameLocation":"1512:7:8","nodeType":"VariableDeclaration","scope":786,"src":"1507:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":768,"name":"bool","nodeType":"ElementaryTypeName","src":"1507:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":776,"initialValue":{"arguments":[{"hexValue":"","id":774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1555:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":770,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"1525:9:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:4:8","memberName":"call","nodeType":"MemberAccess","src":"1525:14:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":772,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"1547:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1525:29:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1525:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1506:52:8"},{"condition":{"id":778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1572:8:8","subExpression":{"id":777,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"1573:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":785,"nodeType":"IfStatement","src":"1568:65:8","trueBody":{"id":784,"nodeType":"Block","src":"1582:51:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":779,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"1603:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$1041_$","typeString":"type(library Errors)"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1610:10:8","memberName":"FailedCall","nodeType":"MemberAccess","referencedDeclaration":1032,"src":"1603:17:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1603:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":783,"nodeType":"RevertStatement","src":"1596:26:8"}]}}]},"documentation":{"id":741,"nodeType":"StructuredDocumentation","src":"380:905:8","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":787,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1299:9:8","nodeType":"FunctionDefinition","parameters":{"id":746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":743,"mutability":"mutable","name":"recipient","nameLocation":"1325:9:8","nodeType":"VariableDeclaration","scope":787,"src":"1309:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":742,"name":"address","nodeType":"ElementaryTypeName","src":"1309:15:8","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":745,"mutability":"mutable","name":"amount","nameLocation":"1344:6:8","nodeType":"VariableDeclaration","scope":787,"src":"1336:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":744,"name":"uint256","nodeType":"ElementaryTypeName","src":"1336:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1308:43:8"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[],"src":"1361:0:8"},"scope":989,"src":"1290:349:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":803,"nodeType":"Block","src":"2573:62:8","statements":[{"expression":{"arguments":[{"id":798,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"2612:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":799,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"2620:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2626:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":797,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"2590:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2590:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":796,"id":802,"nodeType":"Return","src":"2583:45:8"}]},"documentation":{"id":788,"nodeType":"StructuredDocumentation","src":"1645:834:8","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":804,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2493:12:8","nodeType":"FunctionDefinition","parameters":{"id":793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":790,"mutability":"mutable","name":"target","nameLocation":"2514:6:8","nodeType":"VariableDeclaration","scope":804,"src":"2506:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":789,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":792,"mutability":"mutable","name":"data","nameLocation":"2535:4:8","nodeType":"VariableDeclaration","scope":804,"src":"2522:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":791,"name":"bytes","nodeType":"ElementaryTypeName","src":"2522:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2505:35:8"},"returnParameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":795,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":804,"src":"2559:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":794,"name":"bytes","nodeType":"ElementaryTypeName","src":"2559:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2558:14:8"},"scope":989,"src":"2484:151:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":853,"nodeType":"Block","src":"3072:294:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":818,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"3094:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$989","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$989","typeString":"library Address"}],"id":817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3086:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":816,"name":"address","nodeType":"ElementaryTypeName","src":"3086:7:8","typeDescriptions":{}}},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3086:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3100:7:8","memberName":"balance","nodeType":"MemberAccess","src":"3086:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"3110:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3086:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":835,"nodeType":"IfStatement","src":"3082:123:8","trueBody":{"id":834,"nodeType":"Block","src":"3117:88:8","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":828,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"3173:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$989","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$989","typeString":"library Address"}],"id":827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3165:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":826,"name":"address","nodeType":"ElementaryTypeName","src":"3165:7:8","typeDescriptions":{}}},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3165:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3179:7:8","memberName":"balance","nodeType":"MemberAccess","src":"3165:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"3188:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":823,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"3138:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$1041_$","typeString":"type(library Errors)"}},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3145:19:8","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":1029,"src":"3138:26:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3138:56:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":833,"nodeType":"RevertStatement","src":"3131:63:8"}]}},{"assignments":[837,839],"declarations":[{"constant":false,"id":837,"mutability":"mutable","name":"success","nameLocation":"3220:7:8","nodeType":"VariableDeclaration","scope":853,"src":"3215:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":836,"name":"bool","nodeType":"ElementaryTypeName","src":"3215:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":839,"mutability":"mutable","name":"returndata","nameLocation":"3242:10:8","nodeType":"VariableDeclaration","scope":853,"src":"3229:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":838,"name":"bytes","nodeType":"ElementaryTypeName","src":"3229:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":846,"initialValue":{"arguments":[{"id":844,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"3282:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":840,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"3256:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3263:4:8","memberName":"call","nodeType":"MemberAccess","src":"3256:11:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"3275:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3256:25:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3256:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3214:73:8"},{"expression":{"arguments":[{"id":848,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"3331:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":849,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"3339:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":850,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"3348:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":847,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"3304:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3304:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":815,"id":852,"nodeType":"Return","src":"3297:62:8"}]},"documentation":{"id":805,"nodeType":"StructuredDocumentation","src":"2641:313:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":854,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"2968:21:8","nodeType":"FunctionDefinition","parameters":{"id":812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":807,"mutability":"mutable","name":"target","nameLocation":"2998:6:8","nodeType":"VariableDeclaration","scope":854,"src":"2990:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":806,"name":"address","nodeType":"ElementaryTypeName","src":"2990:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":809,"mutability":"mutable","name":"data","nameLocation":"3019:4:8","nodeType":"VariableDeclaration","scope":854,"src":"3006:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":808,"name":"bytes","nodeType":"ElementaryTypeName","src":"3006:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":811,"mutability":"mutable","name":"value","nameLocation":"3033:5:8","nodeType":"VariableDeclaration","scope":854,"src":"3025:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":810,"name":"uint256","nodeType":"ElementaryTypeName","src":"3025:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2989:50:8"},"returnParameters":{"id":815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":814,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":854,"src":"3058:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":813,"name":"bytes","nodeType":"ElementaryTypeName","src":"3058:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3057:14:8"},"scope":989,"src":"2959:407:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":879,"nodeType":"Block","src":"3605:154:8","statements":[{"assignments":[865,867],"declarations":[{"constant":false,"id":865,"mutability":"mutable","name":"success","nameLocation":"3621:7:8","nodeType":"VariableDeclaration","scope":879,"src":"3616:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":864,"name":"bool","nodeType":"ElementaryTypeName","src":"3616:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":867,"mutability":"mutable","name":"returndata","nameLocation":"3643:10:8","nodeType":"VariableDeclaration","scope":879,"src":"3630:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":866,"name":"bytes","nodeType":"ElementaryTypeName","src":"3630:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":872,"initialValue":{"arguments":[{"id":870,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"3675:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":868,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"3657:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3664:10:8","memberName":"staticcall","nodeType":"MemberAccess","src":"3657:17:8","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3657:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3615:65:8"},{"expression":{"arguments":[{"id":874,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"3724:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":875,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"3732:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":876,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"3741:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":873,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"3697:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3697:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":863,"id":878,"nodeType":"Return","src":"3690:62:8"}]},"documentation":{"id":855,"nodeType":"StructuredDocumentation","src":"3372:128:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":880,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3514:18:8","nodeType":"FunctionDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"target","nameLocation":"3541:6:8","nodeType":"VariableDeclaration","scope":880,"src":"3533:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"3533:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":859,"mutability":"mutable","name":"data","nameLocation":"3562:4:8","nodeType":"VariableDeclaration","scope":880,"src":"3549:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":858,"name":"bytes","nodeType":"ElementaryTypeName","src":"3549:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3532:35:8"},"returnParameters":{"id":863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":880,"src":"3591:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":861,"name":"bytes","nodeType":"ElementaryTypeName","src":"3591:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3590:14:8"},"scope":989,"src":"3505:254:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":905,"nodeType":"Block","src":"3997:156:8","statements":[{"assignments":[891,893],"declarations":[{"constant":false,"id":891,"mutability":"mutable","name":"success","nameLocation":"4013:7:8","nodeType":"VariableDeclaration","scope":905,"src":"4008:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":890,"name":"bool","nodeType":"ElementaryTypeName","src":"4008:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":893,"mutability":"mutable","name":"returndata","nameLocation":"4035:10:8","nodeType":"VariableDeclaration","scope":905,"src":"4022:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":892,"name":"bytes","nodeType":"ElementaryTypeName","src":"4022:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":898,"initialValue":{"arguments":[{"id":896,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"4069:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":894,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"4049:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4056:12:8","memberName":"delegatecall","nodeType":"MemberAccess","src":"4049:19:8","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4049:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4007:67:8"},{"expression":{"arguments":[{"id":900,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"4118:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":901,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"4126:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":902,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"4135:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":899,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"4091:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4091:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":889,"id":904,"nodeType":"Return","src":"4084:62:8"}]},"documentation":{"id":881,"nodeType":"StructuredDocumentation","src":"3765:130:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":906,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"3909:20:8","nodeType":"FunctionDefinition","parameters":{"id":886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":883,"mutability":"mutable","name":"target","nameLocation":"3938:6:8","nodeType":"VariableDeclaration","scope":906,"src":"3930:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":882,"name":"address","nodeType":"ElementaryTypeName","src":"3930:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":885,"mutability":"mutable","name":"data","nameLocation":"3959:4:8","nodeType":"VariableDeclaration","scope":906,"src":"3946:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":884,"name":"bytes","nodeType":"ElementaryTypeName","src":"3946:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3929:35:8"},"returnParameters":{"id":889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":906,"src":"3983:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":887,"name":"bytes","nodeType":"ElementaryTypeName","src":"3983:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3982:14:8"},"scope":989,"src":"3900:253:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":945,"nodeType":"Block","src":"4579:424:8","statements":[{"condition":{"id":919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4593:8:8","subExpression":{"id":918,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"4594:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":943,"nodeType":"Block","src":"4653:344:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":925,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"4841:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4852:6:8","memberName":"length","nodeType":"MemberAccess","src":"4841:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4862:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4841:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":929,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"4867:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4874:4:8","memberName":"code","nodeType":"MemberAccess","src":"4867:11:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4879:6:8","memberName":"length","nodeType":"MemberAccess","src":"4867:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4889:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4867:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4841:49:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":940,"nodeType":"IfStatement","src":"4837:119:8","trueBody":{"id":939,"nodeType":"Block","src":"4892:64:8","statements":[{"errorCall":{"arguments":[{"id":936,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"4934:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":935,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"4917:16:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4917:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":938,"nodeType":"RevertStatement","src":"4910:31:8"}]}},{"expression":{"id":941,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"4976:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":917,"id":942,"nodeType":"Return","src":"4969:17:8"}]},"id":944,"nodeType":"IfStatement","src":"4589:408:8","trueBody":{"id":924,"nodeType":"Block","src":"4603:44:8","statements":[{"expression":{"arguments":[{"id":921,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"4625:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":920,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"4617:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4617:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":923,"nodeType":"ExpressionStatement","src":"4617:19:8"}]}}]},"documentation":{"id":907,"nodeType":"StructuredDocumentation","src":"4159:257:8","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."},"id":946,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4430:26:8","nodeType":"FunctionDefinition","parameters":{"id":914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":909,"mutability":"mutable","name":"target","nameLocation":"4474:6:8","nodeType":"VariableDeclaration","scope":946,"src":"4466:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":908,"name":"address","nodeType":"ElementaryTypeName","src":"4466:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":911,"mutability":"mutable","name":"success","nameLocation":"4495:7:8","nodeType":"VariableDeclaration","scope":946,"src":"4490:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":910,"name":"bool","nodeType":"ElementaryTypeName","src":"4490:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":913,"mutability":"mutable","name":"returndata","nameLocation":"4525:10:8","nodeType":"VariableDeclaration","scope":946,"src":"4512:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":912,"name":"bytes","nodeType":"ElementaryTypeName","src":"4512:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4456:85:8"},"returnParameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":916,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":946,"src":"4565:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":915,"name":"bytes","nodeType":"ElementaryTypeName","src":"4565:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4564:14:8"},"scope":989,"src":"4421:582:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":967,"nodeType":"Block","src":"5307:122:8","statements":[{"condition":{"id":957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5321:8:8","subExpression":{"id":956,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"5322:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":965,"nodeType":"Block","src":"5381:42:8","statements":[{"expression":{"id":963,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"5402:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":955,"id":964,"nodeType":"Return","src":"5395:17:8"}]},"id":966,"nodeType":"IfStatement","src":"5317:106:8","trueBody":{"id":962,"nodeType":"Block","src":"5331:44:8","statements":[{"expression":{"arguments":[{"id":959,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"5353:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":958,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"5345:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5345:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":961,"nodeType":"ExpressionStatement","src":"5345:19:8"}]}}]},"documentation":{"id":947,"nodeType":"StructuredDocumentation","src":"5009:191:8","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."},"id":968,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5214:16:8","nodeType":"FunctionDefinition","parameters":{"id":952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":949,"mutability":"mutable","name":"success","nameLocation":"5236:7:8","nodeType":"VariableDeclaration","scope":968,"src":"5231:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":948,"name":"bool","nodeType":"ElementaryTypeName","src":"5231:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":951,"mutability":"mutable","name":"returndata","nameLocation":"5258:10:8","nodeType":"VariableDeclaration","scope":968,"src":"5245:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":950,"name":"bytes","nodeType":"ElementaryTypeName","src":"5245:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5230:39:8"},"returnParameters":{"id":955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":954,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":968,"src":"5293:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":953,"name":"bytes","nodeType":"ElementaryTypeName","src":"5293:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5292:14:8"},"scope":989,"src":"5205:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":987,"nodeType":"Block","src":"5598:432:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":974,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"5674:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5685:6:8","memberName":"length","nodeType":"MemberAccess","src":"5674:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5694:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5674:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":985,"nodeType":"Block","src":"5973:51:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":980,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"5994:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$1041_$","typeString":"type(library Errors)"}},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6001:10:8","memberName":"FailedCall","nodeType":"MemberAccess","referencedDeclaration":1032,"src":"5994:17:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5994:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":984,"nodeType":"RevertStatement","src":"5987:26:8"}]},"id":986,"nodeType":"IfStatement","src":"5670:354:8","trueBody":{"id":979,"nodeType":"Block","src":"5697:270:8","statements":[{"AST":{"nativeSrc":"5824:133:8","nodeType":"YulBlock","src":"5824:133:8","statements":[{"nativeSrc":"5842:40:8","nodeType":"YulVariableDeclaration","src":"5842:40:8","value":{"arguments":[{"name":"returndata","nativeSrc":"5871:10:8","nodeType":"YulIdentifier","src":"5871:10:8"}],"functionName":{"name":"mload","nativeSrc":"5865:5:8","nodeType":"YulIdentifier","src":"5865:5:8"},"nativeSrc":"5865:17:8","nodeType":"YulFunctionCall","src":"5865:17:8"},"variables":[{"name":"returndata_size","nativeSrc":"5846:15:8","nodeType":"YulTypedName","src":"5846:15:8","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5910:2:8","nodeType":"YulLiteral","src":"5910:2:8","type":"","value":"32"},{"name":"returndata","nativeSrc":"5914:10:8","nodeType":"YulIdentifier","src":"5914:10:8"}],"functionName":{"name":"add","nativeSrc":"5906:3:8","nodeType":"YulIdentifier","src":"5906:3:8"},"nativeSrc":"5906:19:8","nodeType":"YulFunctionCall","src":"5906:19:8"},{"name":"returndata_size","nativeSrc":"5927:15:8","nodeType":"YulIdentifier","src":"5927:15:8"}],"functionName":{"name":"revert","nativeSrc":"5899:6:8","nodeType":"YulIdentifier","src":"5899:6:8"},"nativeSrc":"5899:44:8","nodeType":"YulFunctionCall","src":"5899:44:8"},"nativeSrc":"5899:44:8","nodeType":"YulExpressionStatement","src":"5899:44:8"}]},"evmVersion":"paris","externalReferences":[{"declaration":971,"isOffset":false,"isSlot":false,"src":"5871:10:8","valueSize":1},{"declaration":971,"isOffset":false,"isSlot":false,"src":"5914:10:8","valueSize":1}],"flags":["memory-safe"],"id":978,"nodeType":"InlineAssembly","src":"5799:158:8"}]}}]},"documentation":{"id":969,"nodeType":"StructuredDocumentation","src":"5435:103:8","text":" @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."},"id":988,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5552:7:8","nodeType":"FunctionDefinition","parameters":{"id":972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":971,"mutability":"mutable","name":"returndata","nameLocation":"5573:10:8","nodeType":"VariableDeclaration","scope":988,"src":"5560:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":970,"name":"bytes","nodeType":"ElementaryTypeName","src":"5560:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5559:25:8"},"returnParameters":{"id":973,"nodeType":"ParameterList","parameters":[],"src":"5598:0:8"},"scope":989,"src":"5543:487:8","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":990,"src":"233:5799:8","usedErrors":[740],"usedEvents":[]}],"src":"101:5932:8"},"id":8},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1019]},"id":1020,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":991,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:9"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":992,"nodeType":"StructuredDocumentation","src":"127:496:9","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1019,"linearizedBaseContracts":[1019],"name":"Context","nameLocation":"642:7:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1000,"nodeType":"Block","src":"718:34:9","statements":[{"expression":{"expression":{"id":997,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"735:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:9","memberName":"sender","nodeType":"MemberAccess","src":"735:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":996,"id":999,"nodeType":"Return","src":"728:17:9"}]},"id":1001,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:9","nodeType":"FunctionDefinition","parameters":{"id":993,"nodeType":"ParameterList","parameters":[],"src":"675:2:9"},"returnParameters":{"id":996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":995,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1001,"src":"709:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":994,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:9"},"scope":1019,"src":"656:96:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1009,"nodeType":"Block","src":"825:32:9","statements":[{"expression":{"expression":{"id":1006,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"842:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:9","memberName":"data","nodeType":"MemberAccess","src":"842:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1005,"id":1008,"nodeType":"Return","src":"835:15:9"}]},"id":1010,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:9","nodeType":"FunctionDefinition","parameters":{"id":1002,"nodeType":"ParameterList","parameters":[],"src":"775:2:9"},"returnParameters":{"id":1005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1010,"src":"809:14:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1003,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:9"},"scope":1019,"src":"758:99:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1017,"nodeType":"Block","src":"935:25:9","statements":[{"expression":{"hexValue":"30","id":1015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1014,"id":1016,"nodeType":"Return","src":"945:8:9"}]},"id":1018,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:9","nodeType":"FunctionDefinition","parameters":{"id":1011,"nodeType":"ParameterList","parameters":[],"src":"892:2:9"},"returnParameters":{"id":1014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1013,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1018,"src":"926:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1012,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:9"},"scope":1019,"src":"863:97:9","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1020,"src":"624:338:9","usedErrors":[],"usedEvents":[]}],"src":"101:862:9"},"id":9},"@openzeppelin/contracts/utils/Errors.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","exportedSymbols":{"Errors":[1041]},"id":1042,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1021,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"Errors","contractDependencies":[],"contractKind":"library","documentation":{"id":1022,"nodeType":"StructuredDocumentation","src":"126:284:10","text":" @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"},"fullyImplemented":true,"id":1041,"linearizedBaseContracts":[1041],"name":"Errors","nameLocation":"419:6:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1023,"nodeType":"StructuredDocumentation","src":"432:94:10","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cf479181","id":1029,"name":"InsufficientBalance","nameLocation":"537:19:10","nodeType":"ErrorDefinition","parameters":{"id":1028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1025,"mutability":"mutable","name":"balance","nameLocation":"565:7:10","nodeType":"VariableDeclaration","scope":1029,"src":"557:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1024,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1027,"mutability":"mutable","name":"needed","nameLocation":"582:6:10","nodeType":"VariableDeclaration","scope":1029,"src":"574:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1026,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"556:33:10"},"src":"531:59:10"},{"documentation":{"id":1030,"nodeType":"StructuredDocumentation","src":"596:89:10","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"d6bda275","id":1032,"name":"FailedCall","nameLocation":"696:10:10","nodeType":"ErrorDefinition","parameters":{"id":1031,"nodeType":"ParameterList","parameters":[],"src":"706:2:10"},"src":"690:19:10"},{"documentation":{"id":1033,"nodeType":"StructuredDocumentation","src":"715:46:10","text":" @dev The deployment failed."},"errorSelector":"b06ebf3d","id":1035,"name":"FailedDeployment","nameLocation":"772:16:10","nodeType":"ErrorDefinition","parameters":{"id":1034,"nodeType":"ParameterList","parameters":[],"src":"788:2:10"},"src":"766:25:10"},{"documentation":{"id":1036,"nodeType":"StructuredDocumentation","src":"797:58:10","text":" @dev A necessary precompile is missing."},"errorSelector":"42b01bce","id":1040,"name":"MissingPrecompile","nameLocation":"866:17:10","nodeType":"ErrorDefinition","parameters":{"id":1039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1038,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1040,"src":"884:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1037,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"883:9:10"},"src":"860:33:10"}],"scope":1042,"src":"411:484:10","usedErrors":[1029,1032,1035,1040],"usedEvents":[]}],"src":"100:796:10"},"id":10},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[1165]},"id":1166,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1043,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1044,"nodeType":"StructuredDocumentation","src":"219:1187:11","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":1165,"linearizedBaseContracts":[1165],"name":"StorageSlot","nameLocation":"1415:11:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1047,"members":[{"constant":false,"id":1046,"mutability":"mutable","name":"value","nameLocation":"1470:5:11","nodeType":"VariableDeclaration","scope":1047,"src":"1462:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1045,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:11","nodeType":"StructDefinition","scope":1165,"src":"1433:49:11","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1050,"members":[{"constant":false,"id":1049,"mutability":"mutable","name":"value","nameLocation":"1522:5:11","nodeType":"VariableDeclaration","scope":1050,"src":"1517:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1048,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:11","nodeType":"StructDefinition","scope":1165,"src":"1488:46:11","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1053,"members":[{"constant":false,"id":1052,"mutability":"mutable","name":"value","nameLocation":"1577:5:11","nodeType":"VariableDeclaration","scope":1053,"src":"1569:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1051,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:11","nodeType":"StructDefinition","scope":1165,"src":"1540:49:11","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1056,"members":[{"constant":false,"id":1055,"mutability":"mutable","name":"value","nameLocation":"1632:5:11","nodeType":"VariableDeclaration","scope":1056,"src":"1624:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1054,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:11","nodeType":"StructDefinition","scope":1165,"src":"1595:49:11","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":1059,"members":[{"constant":false,"id":1058,"mutability":"mutable","name":"value","nameLocation":"1685:5:11","nodeType":"VariableDeclaration","scope":1059,"src":"1678:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1057,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:11","nodeType":"StructDefinition","scope":1165,"src":"1650:47:11","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":1062,"members":[{"constant":false,"id":1061,"mutability":"mutable","name":"value","nameLocation":"1738:5:11","nodeType":"VariableDeclaration","scope":1062,"src":"1731:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1060,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:11","nodeType":"StructDefinition","scope":1165,"src":"1703:47:11","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":1065,"members":[{"constant":false,"id":1064,"mutability":"mutable","name":"value","nameLocation":"1789:5:11","nodeType":"VariableDeclaration","scope":1065,"src":"1783:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1063,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:11","nodeType":"StructDefinition","scope":1165,"src":"1756:45:11","visibility":"public"},{"body":{"id":1075,"nodeType":"Block","src":"1983:79:11","statements":[{"AST":{"nativeSrc":"2018:38:11","nodeType":"YulBlock","src":"2018:38:11","statements":[{"nativeSrc":"2032:14:11","nodeType":"YulAssignment","src":"2032:14:11","value":{"name":"slot","nativeSrc":"2042:4:11","nodeType":"YulIdentifier","src":"2042:4:11"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:11","nodeType":"YulIdentifier","src":"2032:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1072,"isOffset":false,"isSlot":true,"src":"2032:6:11","suffix":"slot","valueSize":1},{"declaration":1068,"isOffset":false,"isSlot":false,"src":"2042:4:11","valueSize":1}],"flags":["memory-safe"],"id":1074,"nodeType":"InlineAssembly","src":"1993:63:11"}]},"documentation":{"id":1066,"nodeType":"StructuredDocumentation","src":"1807:87:11","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1076,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:11","nodeType":"FunctionDefinition","parameters":{"id":1069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1068,"mutability":"mutable","name":"slot","nameLocation":"1931:4:11","nodeType":"VariableDeclaration","scope":1076,"src":"1923:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1067,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:11"},"returnParameters":{"id":1073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1072,"mutability":"mutable","name":"r","nameLocation":"1980:1:11","nodeType":"VariableDeclaration","scope":1076,"src":"1960:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1047_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1071,"nodeType":"UserDefinedTypeName","pathNode":{"id":1070,"name":"AddressSlot","nameLocations":["1960:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1047,"src":"1960:11:11"},"referencedDeclaration":1047,"src":"1960:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1047_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:11"},"scope":1165,"src":"1899:163:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1086,"nodeType":"Block","src":"2243:79:11","statements":[{"AST":{"nativeSrc":"2278:38:11","nodeType":"YulBlock","src":"2278:38:11","statements":[{"nativeSrc":"2292:14:11","nodeType":"YulAssignment","src":"2292:14:11","value":{"name":"slot","nativeSrc":"2302:4:11","nodeType":"YulIdentifier","src":"2302:4:11"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:11","nodeType":"YulIdentifier","src":"2292:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1083,"isOffset":false,"isSlot":true,"src":"2292:6:11","suffix":"slot","valueSize":1},{"declaration":1079,"isOffset":false,"isSlot":false,"src":"2302:4:11","valueSize":1}],"flags":["memory-safe"],"id":1085,"nodeType":"InlineAssembly","src":"2253:63:11"}]},"documentation":{"id":1077,"nodeType":"StructuredDocumentation","src":"2068:86:11","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":1087,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:11","nodeType":"FunctionDefinition","parameters":{"id":1080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1079,"mutability":"mutable","name":"slot","nameLocation":"2191:4:11","nodeType":"VariableDeclaration","scope":1087,"src":"2183:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1078,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:11"},"returnParameters":{"id":1084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1083,"mutability":"mutable","name":"r","nameLocation":"2240:1:11","nodeType":"VariableDeclaration","scope":1087,"src":"2220:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1050_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1082,"nodeType":"UserDefinedTypeName","pathNode":{"id":1081,"name":"BooleanSlot","nameLocations":["2220:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1050,"src":"2220:11:11"},"referencedDeclaration":1050,"src":"2220:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1050_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:11"},"scope":1165,"src":"2159:163:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1097,"nodeType":"Block","src":"2503:79:11","statements":[{"AST":{"nativeSrc":"2538:38:11","nodeType":"YulBlock","src":"2538:38:11","statements":[{"nativeSrc":"2552:14:11","nodeType":"YulAssignment","src":"2552:14:11","value":{"name":"slot","nativeSrc":"2562:4:11","nodeType":"YulIdentifier","src":"2562:4:11"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:11","nodeType":"YulIdentifier","src":"2552:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1094,"isOffset":false,"isSlot":true,"src":"2552:6:11","suffix":"slot","valueSize":1},{"declaration":1090,"isOffset":false,"isSlot":false,"src":"2562:4:11","valueSize":1}],"flags":["memory-safe"],"id":1096,"nodeType":"InlineAssembly","src":"2513:63:11"}]},"documentation":{"id":1088,"nodeType":"StructuredDocumentation","src":"2328:86:11","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":1098,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:11","nodeType":"FunctionDefinition","parameters":{"id":1091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1090,"mutability":"mutable","name":"slot","nameLocation":"2451:4:11","nodeType":"VariableDeclaration","scope":1098,"src":"2443:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1089,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:11"},"returnParameters":{"id":1095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1094,"mutability":"mutable","name":"r","nameLocation":"2500:1:11","nodeType":"VariableDeclaration","scope":1098,"src":"2480:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1053_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1093,"nodeType":"UserDefinedTypeName","pathNode":{"id":1092,"name":"Bytes32Slot","nameLocations":["2480:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1053,"src":"2480:11:11"},"referencedDeclaration":1053,"src":"2480:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1053_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:11"},"scope":1165,"src":"2419:163:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1108,"nodeType":"Block","src":"2763:79:11","statements":[{"AST":{"nativeSrc":"2798:38:11","nodeType":"YulBlock","src":"2798:38:11","statements":[{"nativeSrc":"2812:14:11","nodeType":"YulAssignment","src":"2812:14:11","value":{"name":"slot","nativeSrc":"2822:4:11","nodeType":"YulIdentifier","src":"2822:4:11"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:11","nodeType":"YulIdentifier","src":"2812:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1105,"isOffset":false,"isSlot":true,"src":"2812:6:11","suffix":"slot","valueSize":1},{"declaration":1101,"isOffset":false,"isSlot":false,"src":"2822:4:11","valueSize":1}],"flags":["memory-safe"],"id":1107,"nodeType":"InlineAssembly","src":"2773:63:11"}]},"documentation":{"id":1099,"nodeType":"StructuredDocumentation","src":"2588:86:11","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":1109,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:11","nodeType":"FunctionDefinition","parameters":{"id":1102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1101,"mutability":"mutable","name":"slot","nameLocation":"2711:4:11","nodeType":"VariableDeclaration","scope":1109,"src":"2703:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1100,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:11"},"returnParameters":{"id":1106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1105,"mutability":"mutable","name":"r","nameLocation":"2760:1:11","nodeType":"VariableDeclaration","scope":1109,"src":"2740:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1056_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1104,"nodeType":"UserDefinedTypeName","pathNode":{"id":1103,"name":"Uint256Slot","nameLocations":["2740:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1056,"src":"2740:11:11"},"referencedDeclaration":1056,"src":"2740:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1056_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:11"},"scope":1165,"src":"2679:163:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1119,"nodeType":"Block","src":"3020:79:11","statements":[{"AST":{"nativeSrc":"3055:38:11","nodeType":"YulBlock","src":"3055:38:11","statements":[{"nativeSrc":"3069:14:11","nodeType":"YulAssignment","src":"3069:14:11","value":{"name":"slot","nativeSrc":"3079:4:11","nodeType":"YulIdentifier","src":"3079:4:11"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:11","nodeType":"YulIdentifier","src":"3069:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1116,"isOffset":false,"isSlot":true,"src":"3069:6:11","suffix":"slot","valueSize":1},{"declaration":1112,"isOffset":false,"isSlot":false,"src":"3079:4:11","valueSize":1}],"flags":["memory-safe"],"id":1118,"nodeType":"InlineAssembly","src":"3030:63:11"}]},"documentation":{"id":1110,"nodeType":"StructuredDocumentation","src":"2848:85:11","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":1120,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:11","nodeType":"FunctionDefinition","parameters":{"id":1113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1112,"mutability":"mutable","name":"slot","nameLocation":"2969:4:11","nodeType":"VariableDeclaration","scope":1120,"src":"2961:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1111,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:11"},"returnParameters":{"id":1117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1116,"mutability":"mutable","name":"r","nameLocation":"3017:1:11","nodeType":"VariableDeclaration","scope":1120,"src":"2998:20:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$1059_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":1115,"nodeType":"UserDefinedTypeName","pathNode":{"id":1114,"name":"Int256Slot","nameLocations":["2998:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":1059,"src":"2998:10:11"},"referencedDeclaration":1059,"src":"2998:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$1059_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:11"},"scope":1165,"src":"2938:161:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1130,"nodeType":"Block","src":"3277:79:11","statements":[{"AST":{"nativeSrc":"3312:38:11","nodeType":"YulBlock","src":"3312:38:11","statements":[{"nativeSrc":"3326:14:11","nodeType":"YulAssignment","src":"3326:14:11","value":{"name":"slot","nativeSrc":"3336:4:11","nodeType":"YulIdentifier","src":"3336:4:11"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:11","nodeType":"YulIdentifier","src":"3326:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1127,"isOffset":false,"isSlot":true,"src":"3326:6:11","suffix":"slot","valueSize":1},{"declaration":1123,"isOffset":false,"isSlot":false,"src":"3336:4:11","valueSize":1}],"flags":["memory-safe"],"id":1129,"nodeType":"InlineAssembly","src":"3287:63:11"}]},"documentation":{"id":1121,"nodeType":"StructuredDocumentation","src":"3105:85:11","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":1131,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:11","nodeType":"FunctionDefinition","parameters":{"id":1124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1123,"mutability":"mutable","name":"slot","nameLocation":"3226:4:11","nodeType":"VariableDeclaration","scope":1131,"src":"3218:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1122,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:11"},"returnParameters":{"id":1128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1127,"mutability":"mutable","name":"r","nameLocation":"3274:1:11","nodeType":"VariableDeclaration","scope":1131,"src":"3255:20:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1062_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1126,"nodeType":"UserDefinedTypeName","pathNode":{"id":1125,"name":"StringSlot","nameLocations":["3255:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":1062,"src":"3255:10:11"},"referencedDeclaration":1062,"src":"3255:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1062_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:11"},"scope":1165,"src":"3195:161:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1141,"nodeType":"Block","src":"3558:85:11","statements":[{"AST":{"nativeSrc":"3593:44:11","nodeType":"YulBlock","src":"3593:44:11","statements":[{"nativeSrc":"3607:20:11","nodeType":"YulAssignment","src":"3607:20:11","value":{"name":"store.slot","nativeSrc":"3617:10:11","nodeType":"YulIdentifier","src":"3617:10:11"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:11","nodeType":"YulIdentifier","src":"3607:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1138,"isOffset":false,"isSlot":true,"src":"3607:6:11","suffix":"slot","valueSize":1},{"declaration":1134,"isOffset":false,"isSlot":true,"src":"3617:10:11","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":1140,"nodeType":"InlineAssembly","src":"3568:69:11"}]},"documentation":{"id":1132,"nodeType":"StructuredDocumentation","src":"3362:101:11","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1142,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:11","nodeType":"FunctionDefinition","parameters":{"id":1135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1134,"mutability":"mutable","name":"store","nameLocation":"3506:5:11","nodeType":"VariableDeclaration","scope":1142,"src":"3491:20:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1133,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:11"},"returnParameters":{"id":1139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1138,"mutability":"mutable","name":"r","nameLocation":"3555:1:11","nodeType":"VariableDeclaration","scope":1142,"src":"3536:20:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1062_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1137,"nodeType":"UserDefinedTypeName","pathNode":{"id":1136,"name":"StringSlot","nameLocations":["3536:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":1062,"src":"3536:10:11"},"referencedDeclaration":1062,"src":"3536:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1062_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:11"},"scope":1165,"src":"3468:175:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1152,"nodeType":"Block","src":"3818:79:11","statements":[{"AST":{"nativeSrc":"3853:38:11","nodeType":"YulBlock","src":"3853:38:11","statements":[{"nativeSrc":"3867:14:11","nodeType":"YulAssignment","src":"3867:14:11","value":{"name":"slot","nativeSrc":"3877:4:11","nodeType":"YulIdentifier","src":"3877:4:11"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:11","nodeType":"YulIdentifier","src":"3867:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1149,"isOffset":false,"isSlot":true,"src":"3867:6:11","suffix":"slot","valueSize":1},{"declaration":1145,"isOffset":false,"isSlot":false,"src":"3877:4:11","valueSize":1}],"flags":["memory-safe"],"id":1151,"nodeType":"InlineAssembly","src":"3828:63:11"}]},"documentation":{"id":1143,"nodeType":"StructuredDocumentation","src":"3649:84:11","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":1153,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:11","nodeType":"FunctionDefinition","parameters":{"id":1146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1145,"mutability":"mutable","name":"slot","nameLocation":"3768:4:11","nodeType":"VariableDeclaration","scope":1153,"src":"3760:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1144,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:11"},"returnParameters":{"id":1150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1149,"mutability":"mutable","name":"r","nameLocation":"3815:1:11","nodeType":"VariableDeclaration","scope":1153,"src":"3797:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1065_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1148,"nodeType":"UserDefinedTypeName","pathNode":{"id":1147,"name":"BytesSlot","nameLocations":["3797:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":1065,"src":"3797:9:11"},"referencedDeclaration":1065,"src":"3797:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1065_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:11"},"scope":1165,"src":"3738:159:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1163,"nodeType":"Block","src":"4094:85:11","statements":[{"AST":{"nativeSrc":"4129:44:11","nodeType":"YulBlock","src":"4129:44:11","statements":[{"nativeSrc":"4143:20:11","nodeType":"YulAssignment","src":"4143:20:11","value":{"name":"store.slot","nativeSrc":"4153:10:11","nodeType":"YulIdentifier","src":"4153:10:11"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:11","nodeType":"YulIdentifier","src":"4143:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1160,"isOffset":false,"isSlot":true,"src":"4143:6:11","suffix":"slot","valueSize":1},{"declaration":1156,"isOffset":false,"isSlot":true,"src":"4153:10:11","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":1162,"nodeType":"InlineAssembly","src":"4104:69:11"}]},"documentation":{"id":1154,"nodeType":"StructuredDocumentation","src":"3903:99:11","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1164,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:11","nodeType":"FunctionDefinition","parameters":{"id":1157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1156,"mutability":"mutable","name":"store","nameLocation":"4043:5:11","nodeType":"VariableDeclaration","scope":1164,"src":"4029:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1155,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:11"},"returnParameters":{"id":1161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1160,"mutability":"mutable","name":"r","nameLocation":"4091:1:11","nodeType":"VariableDeclaration","scope":1164,"src":"4073:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1065_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1159,"nodeType":"UserDefinedTypeName","pathNode":{"id":1158,"name":"BytesSlot","nameLocations":["4073:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":1065,"src":"4073:9:11"},"referencedDeclaration":1065,"src":"4073:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1065_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:11"},"scope":1165,"src":"4007:172:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1166,"src":"1407:2774:11","usedErrors":[],"usedEvents":[]}],"src":"193:3989:11"},"id":11},"contracts/proxy/DmtpProxy.sol":{"ast":{"absolutePath":"contracts/proxy/DmtpProxy.sol","exportedSymbols":{"DmtpProxy":[1291],"DmtpProxyAdmin":[1326],"ERC1967Proxy":[206],"ERC1967Utils":[500],"IERC1967":[168],"ITransparentUpgradeableProxy":[616],"Ownable":[147],"ProxyAdmin":[594]},"id":1292,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1167,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"133:24:12"},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","file":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","id":1169,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1292,"sourceUnit":501,"src":"159:84:12","symbolAliases":[{"foreign":{"id":1168,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"167:12:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol","file":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol","id":1171,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1292,"sourceUnit":207,"src":"244:84:12","symbolAliases":[{"foreign":{"id":1170,"name":"ERC1967Proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"252:12:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol","file":"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol","id":1173,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1292,"sourceUnit":731,"src":"329:119:12","symbolAliases":[{"foreign":{"id":1172,"name":"ITransparentUpgradeableProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"337:28:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","file":"@openzeppelin/contracts/interfaces/IERC1967.sol","id":1175,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1292,"sourceUnit":169,"src":"449:73:12","symbolAliases":[{"foreign":{"id":1174,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"457:8:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/proxy/DmtpProxyAdmin.sol","file":"./DmtpProxyAdmin.sol","id":1176,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1292,"sourceUnit":1327,"src":"523:30:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1178,"name":"ERC1967Proxy","nameLocations":["3864:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":206,"src":"3864:12:12"},"id":1179,"nodeType":"InheritanceSpecifier","src":"3864:12:12"}],"canonicalName":"DmtpProxy","contractDependencies":[1326],"contractKind":"contract","documentation":{"id":1177,"nodeType":"StructuredDocumentation","src":"555:3286:12","text":" @dev This contract implements a proxy that is upgradeable through an associated {ProxyAdmin} instance.\n To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\n clashing], which can potentially be used in an attack, this contract uses the\n https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\n things that go hand in hand:\n 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\n that call matches the {ITransparentUpgradeableProxy-upgradeToAndCall} function exposed by the proxy itself.\n 2. If the admin calls the proxy, it can call the `upgradeToAndCall` function but any other call won't be forwarded to\n the implementation. If the admin tries to call a function on the implementation it will fail with an error indicating\n the proxy admin cannot fallback to the target implementation.\n These properties mean that the admin account can only be used for upgrading the proxy, so it's best if it's a\n dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to\n call a function from the proxy implementation. For this reason, the proxy deploys an instance of {ProxyAdmin} and\n allows upgrades only if they come through it. You should think of the `ProxyAdmin` instance as the administrative\n interface of the proxy, including the ability to change who can trigger upgrades by transferring ownership.\n NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not\n inherit from that interface, and instead `upgradeToAndCall` is implicitly implemented using a custom dispatch\n mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to\n fully implement transparency without decoding reverts caused by selector clashes between the proxy and the\n implementation.\n NOTE: This proxy does not inherit from {Context} deliberately. The {ProxyAdmin} of this contract won't send a\n meta-transaction in any way, and any other meta-transaction setup should be made in the implementation contract.\n IMPORTANT: This contract avoids unnecessary storage reads by setting the admin only during construction as an\n immutable variable, preventing any changes thereafter. However, the admin slot defined in ERC-1967 can still be\n overwritten by the implementation logic pointed to by this proxy. In such cases, the contract may end up in an\n undesirable state where the admin slot is different from the actual admin. Relying on the value of the admin slot\n is generally fine if the implementation is trusted.\n WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the\n compiler will not check that there are no selector conflicts, due to the note above. A selector clash between any new\n function and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This\n could render the `upgradeToAndCall` function inaccessible, preventing upgradeability and compromising transparency."},"fullyImplemented":true,"id":1291,"linearizedBaseContracts":[1291,206,536],"name":"DmtpProxy","nameLocation":"3851:9:12","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1181,"mutability":"immutable","name":"_admin","nameLocation":"4244:6:12","nodeType":"VariableDeclaration","scope":1291,"src":"4218:32:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1180,"name":"address","nodeType":"ElementaryTypeName","src":"4218:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":1182,"nodeType":"StructuredDocumentation","src":"4257:102:12","text":" @dev The proxy caller is the current admin, and can't fallback to the proxy target."},"errorSelector":"d2b576ec","id":1184,"name":"ProxyDeniedAdminAccess","nameLocation":"4370:22:12","nodeType":"ErrorDefinition","parameters":{"id":1183,"nodeType":"ParameterList","parameters":[],"src":"4392:2:12"},"src":"4364:31:12"},{"body":{"id":1217,"nodeType":"Block","src":"4779:194:12","statements":[{"expression":{"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1199,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"4789:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":1205,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"4825:12:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"4806:18:12","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_address_$returns$_t_contract$_DmtpProxyAdmin_$1326_$","typeString":"function (address) returns (contract DmtpProxyAdmin)"},"typeName":{"id":1203,"nodeType":"UserDefinedTypeName","pathNode":{"id":1202,"name":"DmtpProxyAdmin","nameLocations":["4810:14:12"],"nodeType":"IdentifierPath","referencedDeclaration":1326,"src":"4810:14:12"},"referencedDeclaration":1326,"src":"4810:14:12","typeDescriptions":{"typeIdentifier":"t_contract$_DmtpProxyAdmin_$1326","typeString":"contract DmtpProxyAdmin"}}},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4806:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_DmtpProxyAdmin_$1326","typeString":"contract DmtpProxyAdmin"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DmtpProxyAdmin_$1326","typeString":"contract DmtpProxyAdmin"}],"id":1201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4798:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1200,"name":"address","nodeType":"ElementaryTypeName","src":"4798:7:12","typeDescriptions":{}}},"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4798:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4789:50:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1209,"nodeType":"ExpressionStatement","src":"4789:50:12"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1213,"name":"_proxyAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"4952:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4952:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1210,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"4927:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$500_$","typeString":"type(library ERC1967Utils)"}},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4940:11:12","memberName":"changeAdmin","nodeType":"MemberAccess","referencedDeclaration":382,"src":"4927:24:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4927:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1216,"nodeType":"ExpressionStatement","src":"4927:39:12"}]},"documentation":{"id":1185,"nodeType":"StructuredDocumentation","src":"4401:261:12","text":" @dev Initializes an upgradeable proxy managed by an instance of a {ProxyAdmin} with an `initialOwner`,\n backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in\n {ERC1967Proxy-constructor}."},"id":1218,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1192,"name":"_logic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"4760:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"","id":1195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4774:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4768:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1193,"name":"bytes","nodeType":"ElementaryTypeName","src":"4768:5:12","typeDescriptions":{}}},"id":1196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4768:9:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":1197,"kind":"baseConstructorSpecifier","modifierName":{"id":1191,"name":"ERC1967Proxy","nameLocations":["4747:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":206,"src":"4747:12:12"},"nodeType":"ModifierInvocation","src":"4747:31:12"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1187,"mutability":"mutable","name":"_logic","nameLocation":"4696:6:12","nodeType":"VariableDeclaration","scope":1218,"src":"4688:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1186,"name":"address","nodeType":"ElementaryTypeName","src":"4688:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1189,"mutability":"mutable","name":"initialOwner","nameLocation":"4720:12:12","nodeType":"VariableDeclaration","scope":1218,"src":"4712:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1188,"name":"address","nodeType":"ElementaryTypeName","src":"4712:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4678:60:12"},"returnParameters":{"id":1198,"nodeType":"ParameterList","parameters":[],"src":"4779:0:12"},"scope":1291,"src":"4667:306:12","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":1226,"nodeType":"Block","src":"5103:30:12","statements":[{"expression":{"id":1224,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"5120:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1223,"id":1225,"nodeType":"Return","src":"5113:13:12"}]},"documentation":{"id":1219,"nodeType":"StructuredDocumentation","src":"4979:56:12","text":" @dev Returns the admin of this proxy."},"id":1227,"implemented":true,"kind":"function","modifiers":[],"name":"_proxyAdmin","nameLocation":"5049:11:12","nodeType":"FunctionDefinition","parameters":{"id":1220,"nodeType":"ParameterList","parameters":[],"src":"5060:2:12"},"returnParameters":{"id":1223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1227,"src":"5094:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1221,"name":"address","nodeType":"ElementaryTypeName","src":"5094:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5093:9:12"},"scope":1291,"src":"5040:93:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[527],"body":{"id":1260,"nodeType":"Block","src":"5322:368:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1232,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"5336:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5340:6:12","memberName":"sender","nodeType":"MemberAccess","src":"5336:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1234,"name":"_proxyAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"5350:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5350:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5336:27:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1258,"nodeType":"Block","src":"5642:42:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1253,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967271,"src":"5656:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_DmtpProxy_$1291_$","typeString":"type(contract super DmtpProxy)"}},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5662:9:12","memberName":"_fallback","nodeType":"MemberAccess","referencedDeclaration":527,"src":"5656:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5656:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1257,"nodeType":"ExpressionStatement","src":"5656:17:12"}]},"id":1259,"nodeType":"IfStatement","src":"5332:352:12","trueBody":{"id":1252,"nodeType":"Block","src":"5365:271:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1237,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"5400:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5404:3:12","memberName":"sig","nodeType":"MemberAccess","src":"5400:7:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1239,"name":"ITransparentUpgradeableProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"5427:28:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ITransparentUpgradeableProxy_$616_$","typeString":"type(contract ITransparentUpgradeableProxy)"}},"id":1240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5456:16:12","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":615,"src":"5427:45:12","typeDescriptions":{"typeIdentifier":"t_function_declaration_payable$_t_address_$_t_bytes_calldata_ptr_$returns$__$","typeString":"function ITransparentUpgradeableProxy.upgradeToAndCall(address,bytes calldata) payable"}},"id":1241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5473:8:12","memberName":"selector","nodeType":"MemberAccess","src":"5427:54:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"5400:81:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1250,"nodeType":"Block","src":"5566:60:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1247,"name":"_dispatchUpgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"5584:25:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5584:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1249,"nodeType":"ExpressionStatement","src":"5584:27:12"}]},"id":1251,"nodeType":"IfStatement","src":"5379:247:12","trueBody":{"id":1246,"nodeType":"Block","src":"5496:64:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1243,"name":"ProxyDeniedAdminAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"5521:22:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5521:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1245,"nodeType":"RevertStatement","src":"5514:31:12"}]}}]}}]},"documentation":{"id":1228,"nodeType":"StructuredDocumentation","src":"5139:131:12","text":" @dev If caller is the admin process the call internally, otherwise transparently fallback to the proxy behavior."},"id":1261,"implemented":true,"kind":"function","modifiers":[],"name":"_fallback","nameLocation":"5284:9:12","nodeType":"FunctionDefinition","overrides":{"id":1230,"nodeType":"OverrideSpecifier","overrides":[],"src":"5313:8:12"},"parameters":{"id":1229,"nodeType":"ParameterList","parameters":[],"src":"5293:2:12"},"returnParameters":{"id":1231,"nodeType":"ParameterList","parameters":[],"src":"5322:0:12"},"scope":1291,"src":"5275:415:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1289,"nodeType":"Block","src":"5937:206:12","statements":[{"assignments":[1266,1268],"declarations":[{"constant":false,"id":1266,"mutability":"mutable","name":"newImplementation","nameLocation":"5956:17:12","nodeType":"VariableDeclaration","scope":1289,"src":"5948:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1265,"name":"address","nodeType":"ElementaryTypeName","src":"5948:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1268,"mutability":"mutable","name":"data","nameLocation":"5988:4:12","nodeType":"VariableDeclaration","scope":1289,"src":"5975:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1267,"name":"bytes","nodeType":"ElementaryTypeName","src":"5975:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1281,"initialValue":{"arguments":[{"baseExpression":{"expression":{"id":1271,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"6020:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6024:4:12","memberName":"data","nodeType":"MemberAccess","src":"6020:8:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"6020:12:12","startExpression":{"hexValue":"34","id":1273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6029:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},{"components":[{"id":1276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6047:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1275,"name":"address","nodeType":"ElementaryTypeName","src":"6047:7:12","typeDescriptions":{}}},{"id":1278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6056:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1277,"name":"bytes","nodeType":"ElementaryTypeName","src":"6056:5:12","typeDescriptions":{}}}],"id":1279,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6046:16:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_address_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(address),type(bytes storage pointer))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"},{"typeIdentifier":"t_tuple$_t_type$_t_address_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(address),type(bytes storage pointer))"}],"expression":{"id":1269,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"5996:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6000:6:12","memberName":"decode","nodeType":"MemberAccess","src":"5996:10:12","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5996:76:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_payable_$_t_bytes_memory_ptr_$","typeString":"tuple(address payable,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5947:125:12"},{"expression":{"arguments":[{"id":1285,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"6112:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1286,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"6131:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1282,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"6082:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$500_$","typeString":"type(library ERC1967Utils)"}},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6095:16:12","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":315,"src":"6082:29:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6082:54:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1288,"nodeType":"ExpressionStatement","src":"6082:54:12"}]},"documentation":{"id":1262,"nodeType":"StructuredDocumentation","src":"5696:191:12","text":" @dev Upgrade the implementation of the proxy. See {ERC1967Utils-upgradeToAndCall}.\n Requirements:\n - If `data` is empty, `msg.value` must be zero."},"id":1290,"implemented":true,"kind":"function","modifiers":[],"name":"_dispatchUpgradeToAndCall","nameLocation":"5901:25:12","nodeType":"FunctionDefinition","parameters":{"id":1263,"nodeType":"ParameterList","parameters":[],"src":"5926:2:12"},"returnParameters":{"id":1264,"nodeType":"ParameterList","parameters":[],"src":"5937:0:12"},"scope":1291,"src":"5892:251:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1292,"src":"3842:2303:12","usedErrors":[226,231,239,740,1032,1184],"usedEvents":[155,162]}],"src":"133:6013:12"},"id":12},"contracts/proxy/DmtpProxyAdmin.sol":{"ast":{"absolutePath":"contracts/proxy/DmtpProxyAdmin.sol","exportedSymbols":{"DmtpProxyAdmin":[1326],"ITransparentUpgradeableProxy":[616],"Ownable":[147],"ProxyAdmin":[594]},"id":1327,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1293,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:13"},{"absolutePath":"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol","file":"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol","id":1294,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1327,"sourceUnit":595,"src":"59:66:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1295,"name":"ProxyAdmin","nameLocations":["154:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":594,"src":"154:10:13"},"id":1296,"nodeType":"InheritanceSpecifier","src":"154:10:13"}],"canonicalName":"DmtpProxyAdmin","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1326,"linearizedBaseContracts":[1326,594,147,1019],"name":"DmtpProxyAdmin","nameLocation":"136:14:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":1304,"nodeType":"Block","src":"230:2:13","statements":[]},"id":1305,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1301,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"216:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1302,"kind":"baseConstructorSpecifier","modifierName":{"id":1300,"name":"ProxyAdmin","nameLocations":["205:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":594,"src":"205:10:13"},"nodeType":"ModifierInvocation","src":"205:24:13"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1298,"mutability":"mutable","name":"initialOwner","nameLocation":"191:12:13","nodeType":"VariableDeclaration","scope":1305,"src":"183:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1297,"name":"address","nodeType":"ElementaryTypeName","src":"183:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"182:22:13"},"returnParameters":{"id":1303,"nodeType":"ParameterList","parameters":[],"src":"230:0:13"},"scope":1326,"src":"171:61:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1324,"nodeType":"Block","src":"301:257:13","statements":[{"assignments":[1313,null],"declarations":[{"constant":false,"id":1313,"mutability":"mutable","name":"success","nameLocation":"474:7:13","nodeType":"VariableDeclaration","scope":1324,"src":"469:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1312,"name":"bool","nodeType":"ElementaryTypeName","src":"469:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1321,"initialValue":{"arguments":[{"hexValue":"5c60da1b","id":1319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"513:13:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29","typeString":"literal_string hex\"5c60da1b\""}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29","typeString":"literal_string hex\"5c60da1b\""}],"expression":{"arguments":[{"id":1316,"name":"proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"495:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"487:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1314,"name":"address","nodeType":"ElementaryTypeName","src":"487:7:13","typeDescriptions":{}}},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"487:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"502:10:13","memberName":"staticcall","nodeType":"MemberAccess","src":"487:25:13","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"487:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"468:59:13"},{"expression":{"id":1322,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"544:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1311,"id":1323,"nodeType":"Return","src":"537:14:13"}]},"functionSelector":"05f38c71","id":1325,"implemented":true,"kind":"function","modifiers":[],"name":"isAdminOf","nameLocation":"247:9:13","nodeType":"FunctionDefinition","parameters":{"id":1308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1307,"mutability":"mutable","name":"proxy","nameLocation":"265:5:13","nodeType":"VariableDeclaration","scope":1325,"src":"257:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1306,"name":"address","nodeType":"ElementaryTypeName","src":"257:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"256:15:13"},"returnParameters":{"id":1311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1310,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1325,"src":"295:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1309,"name":"bool","nodeType":"ElementaryTypeName","src":"295:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"294:6:13"},"scope":1326,"src":"238:320:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1327,"src":"127:433:13","usedErrors":[13,18],"usedEvents":[24]}],"src":"33:528:13"},"id":13}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","errors":{"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the address provided by the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"assembly":"","bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"irOptimized":"","metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":8,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}}}},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"IERC1967":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"devdoc":{"details":"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.","events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"BeaconUpgraded(address)":{"details":"Emitted when the beacon is changed."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{},"version":1},"evm":{"assembly":"","bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"irOptimized":"","metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":{"ERC1967Proxy":{"abi":[{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"bytes","name":"_data","type":"bytes"}],"stateMutability":"payable","type":"constructor"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"stateMutability":"payable","type":"fallback"}],"devdoc":{"details":"This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[ERC-1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"FailedCall()":[{"details":"A call to an address target failed. The target may have reverted."}]},"events":{"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"constructor":{"details":"Initializes the upgradeable proxy with an initial implementation specified by `implementation`. If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor. Requirements: - If `data` is empty, `msg.value` must be zero."}},"version":1},"evm":{"assembly":"    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":600:1717  contract ERC1967Proxy is Proxy {... */\n  mstore(0x40, 0x80)\n  bytecodeSize\n  dup1\n  codesize\n  sub\n  dup1\n  tag_4\n  dup2\n  tag_1\n  jump\t// in\ntag_4:\n  swap3\n  dup4\n  codecopy\n  dup2\n  add\n  swap1\n  0x40\n  dup2\n  dup4\n  sub\n  slt\n  tag_15\n  jumpi\n  dup1\n  mload\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n  dup3\n  and\n  swap1\n  dup2\n  dup4\n  sub\n  tag_15\n  jumpi\n  0x20\n  dup2\n  add\n  mload\n  swap1\n  sub(shl(0x40, 0x01), 0x01)\n  dup3\n  gt\n  tag_15\n  jumpi\n  add\n  dup4\n  0x1f\n  dup3\n  add\n  slt\n  iszero\n  tag_15\n  jumpi\n  dup1\n  mload\n  swap1\n  tag_13\n  tag_14\n  dup4\n  tag_2\n  jump\t// in\ntag_14:\n  tag_1\n  jump\t// in\ntag_13:\n  swap5\n  dup3\n  dup7\n  mstore\n  0x20\n  dup4\n  dup4\n  add\n  add\n  gt\n  tag_15\n  jumpi\n  0x00\ntag_17:\n  dup3\n  dup2\n  lt\n  tag_18\n  jumpi\n  pop\n  pop\n  0x20\n  0x00\n  swap2\n  dup6\n  add\n  add\n  mstore\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1777  newImplementation.code.length */\n  dup2\n  extcodesize\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1782  newImplementation.code.length == 0 */\n  iszero\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n  tag_20\n  jumpi\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  dup3\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2407:2443  IERC1967.Upgraded(newImplementation) */\n  0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n  0x00\n  dup1\n  log2\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":600:1717  contract ERC1967Proxy is Proxy {... */\n  dup2\n  mload\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2473  data.length > 0 */\n  iszero\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2469  data.length */\n  tag_22\n  jumpi\n  0x00\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4074  target.delegatecall(data) */\n  dup1\n  dup4\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":600:1717  contract ERC1967Proxy is Proxy {... */\n  0x20\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n  tag_24\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4074  target.delegatecall(data) */\n  swap6\n  mload\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":600:1717  contract ERC1967Proxy is Proxy {... */\n  swap2\n  add\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4074  target.delegatecall(data) */\n  dup5\n  gas\n  delegatecall\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":600:1717  contract ERC1967Proxy is Proxy {... */\n  jumpi(tag_25, iszero(returndatasize))\n  returndatasize\n  swap2\n  tag_27\n  tag_14\n  dup5\n  tag_2\n  jump\t// in\ntag_27:\n  swap3\n  dup4\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup6\n  add\n  returndatacopy\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n  tag_3\n  jump\t// in\ntag_24:\n  pop\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\ntag_30:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":600:1717  contract ERC1967Proxy is Proxy {... */\n  mload(0x40)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_25:\n  0x60\n  swap2\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n  tag_3\n  jump\t// in\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\ntag_22:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6172  msg.value */\n  pop\n  pop\n  callvalue\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n  iszero\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n  tag_30\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n  jumpi\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6199:6218  ERC1967NonPayable() */\n  mstore(0x00, shl(0xe0, 0xb398979f))\n  revert(0x00, 0x04)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\ntag_20:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n  mstore(0x00, shl(0xe0, 0x4c9c8ce3))\n  0x04\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":600:1717  contract ERC1967Proxy is Proxy {... */\n  mstore\n  0x24\n  0x00\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n  revert\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":600:1717  contract ERC1967Proxy is Proxy {... */\ntag_18:\n  dup1\n  0x20\n  dup1\n  swap3\n  dup5\n  add\n  add\n  mload\n  dup3\n  dup3\n  dup10\n  add\n  add\n  mstore\n  add\n  jump(tag_17)\ntag_15:\n  0x00\n  dup1\n  revert\ntag_1:\n  mload(0x40)\n  swap2\n  swap1\n  0x1f\n  add\n  not(0x1f)\n  and\n  dup3\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup4\n  dup3\n  lt\n  or\n  tag_33\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_33:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n  revert(0x00, 0x24)\ntag_2:\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  tag_33\n  jumpi\n  0x1f\n  add\n  not(0x1f)\n  and\n  0x20\n  add\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4421:5003  function verifyCallResultFromTarget(... */\ntag_3:\n  swap1\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4593:4601  !success */\n  tag_37\n  jumpi\n  pop\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":600:1717  contract ERC1967Proxy is Proxy {... */\n  dup1\n  mload\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5674:5695  returndata.length > 0 */\n  iszero\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5674:5691  returndata.length */\n  tag_39\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5799:5957  assembly (\"memory-safe\") {... */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  revert\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5670:6024  if (returndata.length > 0) {... */\ntag_39:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5994:6013  Errors.FailedCall() */\n  shl(0xe0, 0xd6bda275)\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5694:5695  0 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5994:6013  Errors.FailedCall() */\n  mstore\n  0x04\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5694:5695  0 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5994:6013  Errors.FailedCall() */\n  revert\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\ntag_37:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":600:1717  contract ERC1967Proxy is Proxy {... */\n  dup2\n  mload\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4863  returndata.length == 0 */\n  iszero\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\n  dup1\n  tag_41\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\ntag_42:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4837:4956  if (returndata.length == 0 && target.code.length == 0) {... */\n  tag_43\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4969:4986  return returndata */\n  pop\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4837:4956  if (returndata.length == 0 && target.code.length == 0) {... */\ntag_43:\n  shl(0xe0, 0x9996b315)\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4862:4863  0 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n  swap1\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":600:1717  contract ERC1967Proxy is Proxy {... */\n  swap2\n  swap1\n  swap2\n  and\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n  0x04\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":600:1717  contract ERC1967Proxy is Proxy {... */\n  mstore\n  0x24\n  swap1\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n  revert\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\ntag_41:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4867:4885  target.code.length */\n  pop\n  dup1\n  extcodesize\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4867:4890  target.code.length == 0 */\n  iszero\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\n  jump(tag_42)\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":600:1717  contract ERC1967Proxy is Proxy {... */\n      mstore(0x40, 0x80)\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      sload(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)\n      0x00\n      swap1\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1019:1838  assembly {... */\n      calldatasize\n      dup3\n      dup1\n      calldatacopy\n      dup2\n      calldatasize\n      swap2\n      gas\n      delegatecall\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      iszero\n      tag_1\n      jumpi\n      return(0x00, returndatasize)\n    tag_1:\n      revert(0x00, returndatasize)\n\n    auxdata: 0xa164736f6c634300081c000a\n}\n","bytecode":{"functionDebugData":{"allocate_memory":{"entryPoint":392,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":451,"id":null,"parameterSlots":1,"returnSlots":1},"fun_verifyCallResultFromTarget":{"entryPoint":478,"id":946,"parameterSlots":3,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"608060405261029d8038038061001481610188565b928339810190604081830312610183578051906001600160a01b03821690818303610183576020810151906001600160401b038211610183570183601f820112156101835780519061006d610068836101c3565b610188565b94828652602083830101116101835760005b82811061016e575050602060009185010152813b1561015a577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b031916821790557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28151156101415760008083602061012995519101845af43d15610139573d91610119610068846101c3565b9283523d6000602085013e6101de565b505b604051605d90816102408239f35b6060916101de565b5050341561012b5763b398979f60e01b60005260046000fd5b634c9c8ce360e01b60005260045260246000fd5b8060208092840101518282890101520161007f565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176101ad57604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b0381116101ad57601f01601f191660200190565b9061020457508051156101f357805190602001fd5b63d6bda27560e01b60005260046000fd5b81511580610236575b610215575090565b639996b31560e01b60009081526001600160a01b0391909116600452602490fd5b50803b1561020d56fe60806040527f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5460009081906001600160a01b0316368280378136915af43d6000803e15604b573d6000f35b3d6000fdfea164736f6c634300081c000a","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x29D DUP1 CODESIZE SUB DUP1 PUSH2 0x14 DUP2 PUSH2 0x188 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH1 0x40 DUP2 DUP4 SUB SLT PUSH2 0x183 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 DUP2 DUP4 SUB PUSH2 0x183 JUMPI PUSH1 0x20 DUP2 ADD MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x183 JUMPI ADD DUP4 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x183 JUMPI DUP1 MLOAD SWAP1 PUSH2 0x6D PUSH2 0x68 DUP4 PUSH2 0x1C3 JUMP JUMPDEST PUSH2 0x188 JUMP JUMPDEST SWAP5 DUP3 DUP7 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x183 JUMPI PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x16E JUMPI POP POP PUSH1 0x20 PUSH1 0x0 SWAP2 DUP6 ADD ADD MSTORE DUP2 EXTCODESIZE ISZERO PUSH2 0x15A JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 PUSH2 0x129 SWAP6 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0x139 JUMPI RETURNDATASIZE SWAP2 PUSH2 0x119 PUSH2 0x68 DUP5 PUSH2 0x1C3 JUMP JUMPDEST SWAP3 DUP4 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP6 ADD RETURNDATACOPY PUSH2 0x1DE JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x5D SWAP1 DUP2 PUSH2 0x240 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x60 SWAP2 PUSH2 0x1DE JUMP JUMPDEST POP POP CALLVALUE ISZERO PUSH2 0x12B JUMPI PUSH4 0xB398979F PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP10 ADD ADD MSTORE ADD PUSH2 0x7F JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x1AD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1AD JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x204 JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x1F3 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xD6BDA275 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x236 JUMPI JUMPDEST PUSH2 0x215 JUMPI POP SWAP1 JUMP JUMPDEST PUSH4 0x9996B315 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x20D JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY ISZERO PUSH1 0x4B JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP ","sourceMap":"600:1117:2:-:0;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;600:1117:2;;;;;;;;;;;;;-1:-1:-1;;;;;600:1117:2;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;600:1117:2;;;;;;;;;-1:-1:-1;600:1117:2;;;;;1748:29:3;;:34;1744:119;;811:66;;;-1:-1:-1;;;;;;811:66:3;;;;;2407:36;-1:-1:-1;;2407:36:3;600:1117:2;;2458:15:3;:11;;-1:-1:-1;4049:25:8;;600:1117:2;4091:55:8;4049:25;;600:1117:2;;4049:25:8;;;600:1117:2;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;600:1117:2;;;;4091:55:8;:::i;:::-;;2454:148:3;600:1117:2;;;;;;;;;;;;4091:55:8;:::i;2454:148:3:-;6163:9;;;6159:70;2454:148;6159:70;6199:19;;;-1:-1:-1;6199:19:3;;-1:-1:-1;6199:19:3;1744:119;1805:47;;;-1:-1:-1;1805:47:3;;600:1117:2;;-1:-1:-1;1805:47:3;600:1117:2;;;;;;;;;;;;;;;;;;;-1:-1:-1;600:1117:2;;;;;;;;;-1:-1:-1;;600:1117:2;;;-1:-1:-1;;;;;600:1117:2;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;600:1117:2;;;;;-1:-1:-1;600:1117:2;;-1:-1:-1;;;;;600:1117:2;;;;;;-1:-1:-1;;600:1117:2;;;;:::o;4421:582:8:-;;4593:8;;-1:-1:-1;600:1117:2;;5674:21:8;:17;;5799:158;;;;;;5670:354;5994:19;;;5694:1;5994:19;;5694:1;5994:19;4589:408;600:1117:2;;4841:22:8;:49;;;4589:408;4837:119;;4969:17;;:::o;4837:119::-;-1:-1:-1;;;4862:1:8;4917:24;;;-1:-1:-1;;;;;600:1117:2;;;;4917:24:8;600:1117:2;;;4917:24:8;4841:49;4867:18;;;:23;4841:49;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"60806040527f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5460009081906001600160a01b0316368280378136915af43d6000803e15604b573d6000f35b3d6000fdfea164736f6c634300081c000a","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY ISZERO PUSH1 0x4B JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP ","sourceMap":"600:1117:2:-:0;;;811:66:3;;-1:-1:-1;;;;;;;;;811:66:3;1019:819:4;-1:-1:-1;;1019:819:4;;;;;;;-1:-1:-1;1019:819:4;;;;;;-1:-1:-1;1019:819:4;;;-1:-1:-1;1019:819:4"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 2:\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\", 3:\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\", 4:\"@openzeppelin/contracts/proxy/Proxy.sol\", 8:\"@openzeppelin/contracts/utils/Address.sol\", 11:\"@openzeppelin/contracts/utils/StorageSlot.sol\"\nobject \"ERC1967Proxy_206\" {\n    code {\n        {\n            /// @src 2:600:1717  \"contract ERC1967Proxy is Proxy {...\"\n            mstore(64, memoryguard(0x80))\n            let programSize := datasize(\"ERC1967Proxy_206\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _1 := add(memoryDataOffset, argSize)\n            if slt(sub(_1, memoryDataOffset), 64)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 2:600:1717  \"contract ERC1967Proxy is Proxy {...\"\n            let value := mload(memoryDataOffset)\n            let _2 := and(value, sub(shl(160, 1), 1))\n            if iszero(eq(value, _2))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 2:600:1717  \"contract ERC1967Proxy is Proxy {...\"\n            let offset := mload(add(memoryDataOffset, 32))\n            if gt(offset, sub(shl(64, 1), 1))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 2:600:1717  \"contract ERC1967Proxy is Proxy {...\"\n            let _3 := add(memoryDataOffset, offset)\n            if iszero(slt(add(_3, 0x1f), _1))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 2:600:1717  \"contract ERC1967Proxy is Proxy {...\"\n            let length := mload(_3)\n            let array := allocate_memory(array_allocation_size_bytes(length))\n            mstore(array, length)\n            if gt(add(add(_3, length), 32), _1)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 2:600:1717  \"contract ERC1967Proxy is Proxy {...\"\n            let i := /** @src -1:-1:-1 */ 0\n            /// @src 2:600:1717  \"contract ERC1967Proxy is Proxy {...\"\n            for { } lt(i, length) { i := add(i, 32) }\n            {\n                mstore(add(add(array, i), 32), mload(add(add(_3, i), 32)))\n            }\n            mstore(add(add(array, length), 32), /** @src -1:-1:-1 */ 0)\n            /// @src 3:1744:1863  \"if (newImplementation.code.length == 0) {...\"\n            if /** @src 3:1748:1782  \"newImplementation.code.length == 0\" */ iszero(/** @src 3:1748:1777  \"newImplementation.code.length\" */ extcodesize(value))\n            /// @src 3:1744:1863  \"if (newImplementation.code.length == 0) {...\"\n            {\n                /// @src 3:1805:1852  \"ERC1967InvalidImplementation(newImplementation)\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 3:1805:1852  \"ERC1967InvalidImplementation(newImplementation)\" */ shl(224, 0x4c9c8ce3))\n                /// @src 2:600:1717  \"contract ERC1967Proxy is Proxy {...\"\n                mstore(/** @src 3:1805:1852  \"ERC1967InvalidImplementation(newImplementation)\" */ 4, /** @src 2:600:1717  \"contract ERC1967Proxy is Proxy {...\" */ _2)\n                /// @src 3:1805:1852  \"ERC1967InvalidImplementation(newImplementation)\"\n                revert(/** @src -1:-1:-1 */ 0, /** @src 2:600:1717  \"contract ERC1967Proxy is Proxy {...\" */ 36)\n            }\n            /// @src 3:811:877  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\"\n            sstore(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc, or(and(sload(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc), not(/** @src 2:600:1717  \"contract ERC1967Proxy is Proxy {...\" */ sub(shl(160, 1), 1))), /** @src 3:811:877  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ _2))\n            /// @src 3:2407:2443  \"IERC1967.Upgraded(newImplementation)\"\n            log2(/** @src -1:-1:-1 */ 0, 0, /** @src 3:2407:2443  \"IERC1967.Upgraded(newImplementation)\" */ 0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b, _2)\n            /// @src 3:2454:2602  \"if (data.length > 0) {...\"\n            switch /** @src 3:2458:2473  \"data.length > 0\" */ iszero(iszero(/** @src 2:600:1717  \"contract ERC1967Proxy is Proxy {...\" */ mload(/** @src 3:2458:2469  \"data.length\" */ array)))\n            case /** @src 3:2454:2602  \"if (data.length > 0) {...\" */ 0 {\n                /// @src 3:6159:6229  \"if (msg.value > 0) {...\"\n                if /** @src 3:6163:6176  \"msg.value > 0\" */ iszero(iszero(/** @src 3:6163:6172  \"msg.value\" */ callvalue()))\n                /// @src 3:6159:6229  \"if (msg.value > 0) {...\"\n                {\n                    /// @src 3:6199:6218  \"ERC1967NonPayable()\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 3:6199:6218  \"ERC1967NonPayable()\" */ shl(224, 0xb398979f))\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 3:6199:6218  \"ERC1967NonPayable()\" */ 4)\n                }\n            }\n            default /// @src 3:2454:2602  \"if (data.length > 0) {...\"\n            {\n                /// @src 8:4049:4074  \"target.delegatecall(data)\"\n                let expr_component := delegatecall(gas(), value, /** @src 2:600:1717  \"contract ERC1967Proxy is Proxy {...\" */ add(array, 32), /** @src 8:4049:4074  \"target.delegatecall(data)\" */ mload(array), /** @src -1:-1:-1 */ 0, 0)\n                /// @src 8:4049:4074  \"target.delegatecall(data)\"\n                let data := /** @src -1:-1:-1 */ 0\n                /// @src 2:600:1717  \"contract ERC1967Proxy is Proxy {...\"\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _4 := returndatasize()\n                    let memPtr := allocate_memory(array_allocation_size_bytes(_4))\n                    mstore(memPtr, _4)\n                    data := memPtr\n                    returndatacopy(add(memPtr, 32), /** @src -1:-1:-1 */ 0, /** @src 2:600:1717  \"contract ERC1967Proxy is Proxy {...\" */ returndatasize())\n                }\n                /// @src 8:4091:4146  \"verifyCallResultFromTarget(target, success, returndata)\"\n                pop(fun_verifyCallResultFromTarget(value, expr_component, /** @src 8:4049:4074  \"target.delegatecall(data)\" */ data))\n            }\n            /// @src 2:600:1717  \"contract ERC1967Proxy is Proxy {...\"\n            let _5 := mload(64)\n            let _6 := datasize(\"ERC1967Proxy_206_deployed\")\n            codecopy(_5, dataoffset(\"ERC1967Proxy_206_deployed\"), _6)\n            return(_5, _6)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 2:600:1717  \"contract ERC1967Proxy is Proxy {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 2:600:1717  \"contract ERC1967Proxy is Proxy {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        function array_allocation_size_bytes(length) -> size\n        {\n            if gt(length, sub(shl(64, 1), 1))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            size := add(and(add(length, 31), not(31)), 0x20)\n        }\n        /// @ast-id 946 @src 8:4421:5003  \"function verifyCallResultFromTarget(...\"\n        function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos) -> var_mpos\n        {\n            /// @src 8:4565:4577  \"bytes memory\"\n            var_mpos := /** @src 2:600:1717  \"contract ERC1967Proxy is Proxy {...\" */ 96\n            /// @src 8:4589:4997  \"if (!success) {...\"\n            switch /** @src 8:4593:4601  \"!success\" */ iszero(var_success)\n            case /** @src 8:4589:4997  \"if (!success) {...\" */ 0 {\n                /// @src 8:4841:4890  \"returndata.length == 0 && target.code.length == 0\"\n                let expr := /** @src 8:4841:4863  \"returndata.length == 0\" */ iszero(/** @src 2:600:1717  \"contract ERC1967Proxy is Proxy {...\" */ mload(/** @src 8:4841:4858  \"returndata.length\" */ var_returndata_mpos))\n                /// @src 8:4841:4890  \"returndata.length == 0 && target.code.length == 0\"\n                if expr\n                {\n                    expr := /** @src 8:4867:4890  \"target.code.length == 0\" */ iszero(/** @src 8:4867:4885  \"target.code.length\" */ extcodesize(var_target))\n                }\n                /// @src 8:4837:4956  \"if (returndata.length == 0 && target.code.length == 0) {...\"\n                if expr\n                {\n                    /// @src 8:4917:4941  \"AddressEmptyCode(target)\"\n                    mstore(/** @src 8:4862:4863  \"0\" */ 0x00, /** @src 8:4917:4941  \"AddressEmptyCode(target)\" */ shl(224, 0x9996b315))\n                    /// @src 2:600:1717  \"contract ERC1967Proxy is Proxy {...\"\n                    mstore(/** @src 8:4917:4941  \"AddressEmptyCode(target)\" */ 4, /** @src 2:600:1717  \"contract ERC1967Proxy is Proxy {...\" */ and(var_target, sub(shl(160, 1), 1)))\n                    /// @src 8:4917:4941  \"AddressEmptyCode(target)\"\n                    revert(/** @src 8:4862:4863  \"0\" */ 0x00, /** @src 2:600:1717  \"contract ERC1967Proxy is Proxy {...\" */ 36)\n                }\n                /// @src 8:4969:4986  \"return returndata\"\n                var_mpos := var_returndata_mpos\n                leave\n            }\n            default /// @src 8:4589:4997  \"if (!success) {...\"\n            {\n                /// @src 8:5670:6024  \"if (returndata.length > 0) {...\"\n                switch /** @src 8:5674:5695  \"returndata.length > 0\" */ iszero(iszero(/** @src 2:600:1717  \"contract ERC1967Proxy is Proxy {...\" */ mload(/** @src 8:5674:5691  \"returndata.length\" */ var_returndata_mpos)))\n                case /** @src 8:5670:6024  \"if (returndata.length > 0) {...\" */ 0 {\n                    /// @src 8:5994:6013  \"Errors.FailedCall()\"\n                    mstore(/** @src 8:5694:5695  \"0\" */ 0x00, /** @src 8:5994:6013  \"Errors.FailedCall()\" */ shl(224, 0xd6bda275))\n                    revert(/** @src 8:5694:5695  \"0\" */ 0x00, /** @src 8:5994:6013  \"Errors.FailedCall()\" */ 4)\n                }\n                default /// @src 8:5670:6024  \"if (returndata.length > 0) {...\"\n                {\n                    /// @src 8:5799:5957  \"assembly (\\\"memory-safe\\\") {...\"\n                    revert(add(32, var_returndata_mpos), mload(var_returndata_mpos))\n                }\n            }\n        }\n    }\n    /// @use-src 2:\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\", 3:\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\", 4:\"@openzeppelin/contracts/proxy/Proxy.sol\", 11:\"@openzeppelin/contracts/utils/StorageSlot.sol\"\n    object \"ERC1967Proxy_206_deployed\" {\n        code {\n            {\n                /// @src 2:600:1717  \"contract ERC1967Proxy is Proxy {...\"\n                mstore(64, 128)\n                /// @src 3:811:877  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\"\n                let value := and(sload(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc), sub(shl(160, 1), 1))\n                /// @src 4:1019:1838  \"assembly {...\"\n                calldatacopy(/** @src -1:-1:-1 */ 0, 0, /** @src 4:1019:1838  \"assembly {...\" */ calldatasize())\n                let usr$result := delegatecall(gas(), value, /** @src -1:-1:-1 */ 0, /** @src 4:1019:1838  \"assembly {...\" */ calldatasize(), /** @src -1:-1:-1 */ 0, 0)\n                /// @src 4:1019:1838  \"assembly {...\"\n                returndatacopy(/** @src -1:-1:-1 */ 0, 0, /** @src 4:1019:1838  \"assembly {...\" */ returndatasize())\n                switch usr$result\n                case 0 {\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 4:1019:1838  \"assembly {...\" */ returndatasize())\n                }\n                default {\n                    return(/** @src -1:-1:-1 */ 0, /** @src 4:1019:1838  \"assembly {...\" */ returndatasize())\n                }\n            }\n        }\n        data \".metadata\" hex\"a164736f6c634300081c000a\"\n    }\n}\n","metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[ERC-1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"events\":{\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the upgradeable proxy with an initial implementation specified by `implementation`. If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor. Requirements: - If `data` is empty, `msg.value` must be zero.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":\"ERC1967Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0x0a8a5b994d4c4da9f61d128945cc8c9e60dcbc72bf532f72ae42a48ea90eed9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e63ae15b6b1079b9d3c73913424d4278139f9e9c9658316675b9c48d5883a50d\",\"dweb:/ipfs/QmWLxBYfp8j1YjNMabWgv75ELTaK2eEYEEGx7qsJbxVZZq\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ERC1967Utils":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"ERC1967InvalidAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"beacon","type":"address"}],"name":"ERC1967InvalidBeacon","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"}],"devdoc":{"details":"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.","errors":{"ERC1967InvalidAdmin(address)":[{"details":"The `admin` of the proxy is invalid."}],"ERC1967InvalidBeacon(address)":[{"details":"The `beacon` of the proxy is invalid."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}]},"kind":"dev","methods":{},"stateVariables":{"ADMIN_SLOT":{"details":"Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"BEACON_SLOT":{"details":"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"IMPLEMENTATION_SLOT":{"details":"Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."}},"version":1},"evm":{"assembly":"    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa164736f6c634300081c000a\n}\n","bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760119081601d823930815050f35b600080fdfe600080fdfea164736f6c634300081c000a","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x11 SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP ","sourceMap":"496:5741:3:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea164736f6c634300081c000a","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP ","sourceMap":"496:5741:3:-:0;;"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 3:\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\"\nobject \"ERC1967Utils_500\" {\n    code {\n        {\n            /// @src 3:496:6237  \"library ERC1967Utils {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"ERC1967Utils_500_deployed\")\n            codecopy(_1, dataoffset(\"ERC1967Utils_500_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 3:\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\"\n    object \"ERC1967Utils_500_deployed\" {\n        code {\n            {\n                /// @src 3:496:6237  \"library ERC1967Utils {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a164736f6c634300081c000a\"\n    }\n}\n","metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/proxy/Proxy.sol":{"Proxy":{"abi":[{"stateMutability":"payable","type":"fallback"}],"devdoc":{"details":"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.","kind":"dev","methods":{},"version":1},"evm":{"assembly":"","bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"irOptimized":"","metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"This is the interface that {BeaconProxy} expects of its beacon.","kind":"dev","methods":{"implementation()":{"details":"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."}},"version":1},"evm":{"assembly":"","bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"implementation()":"5c60da1b"}},"irOptimized":"","metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol":{"ProxyAdmin":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract ITransparentUpgradeableProxy","name":"proxy","type":"address"},{"internalType":"address","name":"implementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"details":"This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.","errors":{"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"kind":"dev","methods":{"constructor":{"details":"Sets the initial owner who can perform upgrades."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"upgradeAndCall(address,address,bytes)":{"details":"Upgrades `proxy` to `implementation` and calls a function on the new implementation. See {TransparentUpgradeableProxy-_dispatchUpgradeToAndCall}. Requirements: - This contract must be the admin of `proxy`. - If `data` is empty, `msg.value` must be zero."}},"stateVariables":{"UPGRADE_INTERFACE_VERSION":{"details":"The version of the upgrade interface of the contract. If this getter is missing, both `upgrade(address,address)` and `upgradeAndCall(address,address,bytes)` are present, and `upgrade` must be used if no function should be called, while `upgradeAndCall` will invoke the `receive` function if the third argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeAndCall(address,address,bytes)` is present, and the third argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."}},"version":1},"evm":{"assembly":"    /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n  0x80\n  jumpi(tag_7, callvalue)\n  0x1f\n  bytecodeSize\n  codesize\n  dup2\n  swap1\n  sub\n  swap2\n  dup3\n  add\n  not(0x1f)\n  and\n  dup4\n  add\n  swap2\n  sub(shl(0x40, 0x01), 0x01)\n  dup4\n  gt\n  dup5\n  dup5\n  lt\n  or\n  tag_3\n  jumpi\n  dup1\n  dup5\n  swap3\n  0x20\n  swap5\n  0x40\n  mstore\n  dup4\n  codecopy\n  dup2\n  add\n  sub\n  slt\n  tag_7\n  jumpi\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n  dup2\n  and\n  swap1\n  dup2\n  swap1\n  sub\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup1\n  iszero\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n  0x00\n    /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup2\n  and\n  dup4\n  or\n  dup3\n  sstore\n  mload(0x40)\n  swap3\n  swap2\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap2\n  and\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n  dup1\n  log3\n    /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mstore(0x00, shl(0xe0, 0x1e4fbdf7))\n  0x00\n  0x04\n    /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n  mstore\n  0x24\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  revert\n    /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\ntag_7:\n  0x00\n  dup1\n  revert\ntag_3:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n  revert(0x00, 0x24)\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_4, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_4:\n      0x00\n      dup1\n      calldataload\n      0xe0\n      shr\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x9623609d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xad3cb1cc\n      eq\n      tag_12\n      jumpi\n      0xf2fde38b\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      jumpi(tag_18, callvalue)\n      jumpi(tag_18, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      swap1\n      dup2\n      swap1\n      sub\n      tag_20\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_22\n      tag_3\n      jump\t// in\n    tag_22:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup1\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_23\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n      dup2\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup2\n      and\n      dup3\n      or\n      dup4\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n      dup4\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n      dup1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_23:\n      shl(0xe0, 0x1e4fbdf7)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n      0x04\n      dup3\n      swap1\n      mstore\n      0x24\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      dup3\n      revert\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n    tag_20:\n      pop\n    tag_18:\n      dup1\n      revert\n    tag_12:\n      pop\n      jumpi(tag_18, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_18\n      jumpi\n      pop\n      tag_29\n      mload(0x40)\n      tag_30\n      0x40\n      dup3\n      tag_1\n      jump\t// in\n    tag_30:\n      0x05\n      dup2\n      mstore\n      shl(0xdc, 0x0352e302e3)\n      0x20\n      dup3\n      add\n      mstore\n      mload(0x40)\n      swap2\n      dup3\n      swap2\n      0x20\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      swap1\n      tag_2\n      jump\t// in\n    tag_29:\n      sub\n      swap1\n      return\n    tag_10:\n      pop\n      jumpi(tag_18, slt(add(not(0x03), calldatasize), 0x60))\n      calldataload(0x04)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      swap1\n      dup2\n      swap1\n      sub\n      tag_20\n      jumpi\n      calldataload(0x24)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      swap1\n      dup2\n      swap1\n      sub\n      tag_47\n      jumpi\n      calldataload(0x44)\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_39\n      jumpi\n      calldatasize\n      0x23\n      dup3\n      add\n      slt\n      iszero\n      tag_39\n      jumpi\n      dup1\n      0x04\n      add\n      calldataload\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_41\n      jumpi\n      mload(0x40)\n      dup6\n      swap4\n      swap3\n      swap1\n      swap2\n      swap1\n      tag_43\n      0x1f\n      dup4\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup5\n      tag_1\n      jump\t// in\n    tag_43:\n      dup2\n      dup4\n      mstore\n      calldatasize\n      0x24\n      dup4\n      dup4\n      add\n      add\n      gt\n      tag_44\n      jumpi\n      dup2\n      dup6\n      swap3\n      0x24\n      0x20\n      swap4\n      add\n      dup4\n      dup7\n      add\n      calldatacopy\n      dup4\n      add\n      add\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_46\n      tag_3\n      jump\t// in\n    tag_46:\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1893:1955  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n      dup4\n      extcodesize\n      iszero\n      tag_47\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n      tag_49\n      swap4\n      dup4\n      swap3\n      mload(0x40)\n      dup1\n      swap7\n      dup2\n      swap5\n      dup3\n      swap4\n      shl(0xe1, 0x278f7943)\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1893:1955  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n      dup5\n      mstore\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n      0x04\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1893:1955  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n      dup5\n      add\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n      mstore\n      0x40\n      0x24\n      dup5\n      add\n      mstore\n      0x44\n      dup4\n      add\n      swap1\n      tag_2\n      jump\t// in\n    tag_49:\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1893:1955  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n      sub\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1923:1932  msg.value */\n      swap2\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1893:1955  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n      swap1\n      gas\n      call\n      dup1\n      iszero\n      tag_50\n      jumpi\n      tag_52\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n      dup1\n      return\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1893:1955  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n    tag_52:\n      tag_54\n      swap2\n      tag_1\n      jump\t// in\n    tag_54:\n      codesize\n      dup2\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n      dup1\n      return\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1893:1955  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n    tag_50:\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n      pop\n      mload(0x40)\n      swap1\n      returndatasize\n      swap1\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1893:1955  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n    tag_47:\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n      dup3\n      dup1\n      revert\n    tag_44:\n      dup5\n      dup1\n      revert\n    tag_41:\n      shl(0xe0, 0x4e487b71)\n      dup6\n      mstore\n      mstore(0x04, 0x41)\n      0x24\n      dup6\n      revert\n    tag_39:\n      dup4\n      dup1\n      revert\n    tag_8:\n      pop\n      jumpi(tag_18, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_18\n      jumpi\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_6:\n      pop\n      jumpi(tag_18, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_18\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_63\n      tag_3\n      jump\t// in\n    tag_63:\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup2\n      and\n      dup3\n      sstore\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n      dup3\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n      dup1\n      return\n    tag_1:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_64\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_64:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_2:\n      swap2\n      swap1\n      dup3\n      mload\n      swap3\n      dup4\n      dup3\n      mstore\n      0x00\n    tag_66:\n      dup5\n      dup2\n      lt\n      tag_67\n      jumpi\n      pop\n      pop\n      dup3\n      0x00\n      0x20\n      dup1\n      swap5\n      swap6\n      dup5\n      add\n      add\n      mstore\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      add\n      add\n      swap1\n      jump\t// out\n    tag_67:\n      dup1\n      0x20\n      dup1\n      swap3\n      dup5\n      add\n      add\n      mload\n      dup3\n      dup3\n      dup7\n      add\n      add\n      mstore\n      add\n      jump(tag_66)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_3:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_69\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      shl(0xe0, 0x118cdaa7)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n      mstore\n      0x24\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      revert\n\n    auxdata: 0xa164736f6c634300081c000a\n}\n","bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60803460bc57601f61046838819003918201601f19168301916001600160401b0383118484101760c15780849260209460405283398101031260bc57516001600160a01b0381169081900360bc57801560a657600080546001600160a01b031981168317825560405192916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a361039090816100d88239f35b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b6000803560e01c8063715018a6146102875780638da5cb5b146102605780639623609d1461012f578063ad3cb1cc146100e25763f2fde38b1461005457600080fd5b346100df5760203660031901126100df576004356001600160a01b038116908190036100dd5761008261035a565b80156100c95781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b505b80fd5b50346100df57806003193601126100df575061012b6040516101056040826102e1565b60058152640352e302e360dc1b6020820152604051918291602083526020830190610319565b0390f35b5060603660031901126100df576004356001600160a01b038116908190036100dd576024356001600160a01b038116908190036102405760443567ffffffffffffffff811161025c573660238201121561025c57806004013567ffffffffffffffff8111610248576040518593929091906101b4601f8301601f1916602001846102e1565b81835236602483830101116102445781859260246020930183860137830101526101dc61035a565b833b156102405761021293839260405180968194829363278f794360e11b84526004840152604060248401526044830190610319565b039134905af18015610233576102255780f35b61022e916102e1565b388180f35b50604051903d90823e3d90fd5b8280fd5b8480fd5b634e487b7160e01b85526041600452602485fd5b8380fd5b50346100df57806003193601126100df57546040516001600160a01b039091168152602090f35b50346100df57806003193601126100df576102a061035a565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b90601f8019910116810190811067ffffffffffffffff82111761030357604052565b634e487b7160e01b600052604160045260246000fd5b919082519283825260005b848110610345575050826000602080949584010152601f8019910116010190565b80602080928401015182828601015201610324565b6000546001600160a01b0316330361036e57565b63118cdaa760e01b6000523360045260246000fdfea164736f6c634300081c000a","opcodes":"PUSH1 0x80 CALLVALUE PUSH1 0xBC JUMPI PUSH1 0x1F PUSH2 0x468 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH1 0xC1 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH1 0xBC JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH1 0xBC JUMPI DUP1 ISZERO PUSH1 0xA6 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH2 0x390 SWAP1 DUP2 PUSH2 0xD8 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x9623609D EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0xE2 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xDF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xDD JUMPI PUSH2 0x82 PUSH2 0x35A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC9 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 OR DUP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xDF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xDF JUMPI POP PUSH2 0x12B PUSH1 0x40 MLOAD PUSH2 0x105 PUSH1 0x40 DUP3 PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x352E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x319 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xDD JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x240 JUMPI PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x25C JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x25C JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x248 JUMPI PUSH1 0x40 MLOAD DUP6 SWAP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x1B4 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x2E1 JUMP JUMPDEST DUP2 DUP4 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x244 JUMPI DUP2 DUP6 SWAP3 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH2 0x1DC PUSH2 0x35A JUMP JUMPDEST DUP4 EXTCODESIZE ISZERO PUSH2 0x240 JUMPI PUSH2 0x212 SWAP4 DUP4 SWAP3 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP5 DUP3 SWAP4 PUSH4 0x278F7943 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP1 PUSH2 0x319 JUMP JUMPDEST SUB SWAP2 CALLVALUE SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x233 JUMPI PUSH2 0x225 JUMPI DUP1 RETURN JUMPDEST PUSH2 0x22E SWAP2 PUSH2 0x2E1 JUMP JUMPDEST CODESIZE DUP2 DUP1 RETURN JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xDF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xDF JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0xDF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xDF JUMPI PUSH2 0x2A0 PUSH2 0x35A JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x303 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x345 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x324 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x36E JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP ","sourceMap":"502:1462:6:-:0;;;;;;;;;;;;;-1:-1:-1;;502:1462:6;;;;-1:-1:-1;;;;;502:1462:6;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;502:1462:6;;;;;;;;1273:26:0;;1269:95;;-1:-1:-1;502:1462:6;;-1:-1:-1;;;;;;502:1462:6;;;;;;;;;;-1:-1:-1;;;;;502:1462:6;;;;3052:40:0;;-1:-1:-1;3052:40:0;502:1462:6;;;;;;;1269:95:0;1322:31;;;-1:-1:-1;1322:31:0;-1:-1:-1;1322:31:0;502:1462:6;;-1:-1:-1;1322:31:0;502:1462:6;-1:-1:-1;502:1462:6;;;;;;-1:-1:-1;502:1462:6;;;;;-1:-1:-1;502:1462:6"},"deployedBytecode":{"functionDebugData":{"abi_encode_string":{"entryPoint":793,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":737,"id":null,"parameterSlots":2,"returnSlots":0},"fun_checkOwner":{"entryPoint":858,"id":84,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b6000803560e01c8063715018a6146102875780638da5cb5b146102605780639623609d1461012f578063ad3cb1cc146100e25763f2fde38b1461005457600080fd5b346100df5760203660031901126100df576004356001600160a01b038116908190036100dd5761008261035a565b80156100c95781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b505b80fd5b50346100df57806003193601126100df575061012b6040516101056040826102e1565b60058152640352e302e360dc1b6020820152604051918291602083526020830190610319565b0390f35b5060603660031901126100df576004356001600160a01b038116908190036100dd576024356001600160a01b038116908190036102405760443567ffffffffffffffff811161025c573660238201121561025c57806004013567ffffffffffffffff8111610248576040518593929091906101b4601f8301601f1916602001846102e1565b81835236602483830101116102445781859260246020930183860137830101526101dc61035a565b833b156102405761021293839260405180968194829363278f794360e11b84526004840152604060248401526044830190610319565b039134905af18015610233576102255780f35b61022e916102e1565b388180f35b50604051903d90823e3d90fd5b8280fd5b8480fd5b634e487b7160e01b85526041600452602485fd5b8380fd5b50346100df57806003193601126100df57546040516001600160a01b039091168152602090f35b50346100df57806003193601126100df576102a061035a565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b90601f8019910116810190811067ffffffffffffffff82111761030357604052565b634e487b7160e01b600052604160045260246000fd5b919082519283825260005b848110610345575050826000602080949584010152601f8019910116010190565b80602080928401015182828601015201610324565b6000546001600160a01b0316330361036e57565b63118cdaa760e01b6000523360045260246000fdfea164736f6c634300081c000a","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x9623609D EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0xE2 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xDF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xDD JUMPI PUSH2 0x82 PUSH2 0x35A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC9 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 OR DUP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xDF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xDF JUMPI POP PUSH2 0x12B PUSH1 0x40 MLOAD PUSH2 0x105 PUSH1 0x40 DUP3 PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x352E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x319 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xDD JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x240 JUMPI PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x25C JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x25C JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x248 JUMPI PUSH1 0x40 MLOAD DUP6 SWAP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x1B4 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x2E1 JUMP JUMPDEST DUP2 DUP4 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x244 JUMPI DUP2 DUP6 SWAP3 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH2 0x1DC PUSH2 0x35A JUMP JUMPDEST DUP4 EXTCODESIZE ISZERO PUSH2 0x240 JUMPI PUSH2 0x212 SWAP4 DUP4 SWAP3 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP5 DUP3 SWAP4 PUSH4 0x278F7943 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP1 PUSH2 0x319 JUMP JUMPDEST SUB SWAP2 CALLVALUE SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x233 JUMPI PUSH2 0x225 JUMPI DUP1 RETURN JUMPDEST PUSH2 0x22E SWAP2 PUSH2 0x2E1 JUMP JUMPDEST CODESIZE DUP2 DUP1 RETURN JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xDF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xDF JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0xDF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xDF JUMPI PUSH2 0x2A0 PUSH2 0x35A JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x303 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x345 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x324 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x36E JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP ","sourceMap":"502:1462:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;502:1462:6;;;;;;-1:-1:-1;;;;;502:1462:6;;;;;;;;1500:62:0;;:::i;:::-;2627:22;;2623:91;;502:1462:6;;-1:-1:-1;;;;;;502:1462:6;;;;;;-1:-1:-1;;;;;502:1462:6;3052:40:0;502:1462:6;;3052:40:0;502:1462:6;;2623:91:0;-1:-1:-1;;;2672:31:0;;502:1462:6;;;;;2672:31:0;;502:1462:6;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;502:1462:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;502:1462:6;;-1:-1:-1;;502:1462:6;;;;;;-1:-1:-1;;;;;502:1462:6;;;;;;;;;;-1:-1:-1;;;;;502:1462:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;502:1462:6;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;1893::6;;;;;502:1462;;;;;;;;;;;;;;;1893:62;;502:1462;1893:62;;502:1462;;;;;;;;;;;:::i;:::-;1893:62;1923:9;;1893:62;;;;;;;;;502:1462;;1893:62;;;;:::i;:::-;;;502:1462;;1893:62;502:1462;;;;;;;;;;;1893:62;502:1462;;;;;;;;-1:-1:-1;;;502:1462:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;502:1462:6;;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;502:1462:6;;-1:-1:-1;;;;;;502:1462:6;;;;;;-1:-1:-1;;;;;502:1462:6;3052:40:0;502:1462:6;;3052:40:0;502:1462:6;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;502:1462:6;;;;;-1:-1:-1;502:1462:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;1796:162:0;1710:6;502:1462:6;-1:-1:-1;;;;;502:1462:6;735:10:9;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;;;1710:6;1901:40;735:10:9;1901:40:0;502:1462:6;;1710:6:0;1901:40"},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","upgradeAndCall(address,address,bytes)":"9623609d"}},"irOptimized":"/// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 6:\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\", 9:\"@openzeppelin/contracts/utils/Context.sol\"\nobject \"ProxyAdmin_594\" {\n    code {\n        {\n            /// @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\"\n            let _1 := memoryguard(0x80)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"ProxyAdmin_594\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 32)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\"\n            let value := mload(_1)\n            let _2 := and(value, sub(shl(160, 1), 1))\n            if iszero(eq(value, _2))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:1269:1364  \"if (initialOwner == address(0)) {...\"\n            if /** @src 0:1273:1299  \"initialOwner == address(0)\" */ iszero(/** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ _2)\n            /// @src 0:1269:1364  \"if (initialOwner == address(0)) {...\"\n            {\n                /// @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\" */ shl(224, 0x1e4fbdf7))\n                /// @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\"\n                mstore(/** @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\" */ 4, /** @src -1:-1:-1 */ 0)\n                /// @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                revert(/** @src -1:-1:-1 */ 0, /** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ 36)\n            }\n            let _3 := sload(/** @src -1:-1:-1 */ 0)\n            /// @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\"\n            sstore(/** @src -1:-1:-1 */ 0, /** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ or(and(_3, not(sub(shl(160, 1), 1))), _2))\n            /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n            let _4 := /** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ mload(64)\n            /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n            log3(/** @src -1:-1:-1 */ 0, 0, /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ and(_3, sub(shl(160, 1), 1)), /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ _2)\n            /// @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\"\n            let _5 := datasize(\"ProxyAdmin_594_deployed\")\n            codecopy(_4, dataoffset(\"ProxyAdmin_594_deployed\"), _5)\n            return(_4, _5)\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 6:\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\", 9:\"@openzeppelin/contracts/utils/Context.sol\"\n    object \"ProxyAdmin_594_deployed\" {\n        code {\n            {\n                /// @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\"\n                mstore(64, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _1 := 0\n                    switch shr(224, calldataload(_1))\n                    case 0x715018a6 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\"\n                        let _2 := sload(_1)\n                        sstore(_1, and(_2, shl(160, 0xffffffffffffffffffffffff)))\n                        /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ _1, _1, /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ and(_2, sub(shl(160, 1), 1)), _1)\n                        return(_1, _1)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let value := and(sload(_1), sub(shl(160, 1), 1))\n                        let memPos := mload(64)\n                        mstore(memPos, value)\n                        return(memPos, 32)\n                    }\n                    case 0x9623609d {\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_1, _1) }\n                        let value_1 := calldataload(4)\n                        let _3 := and(value_1, sub(shl(160, 1), 1))\n                        if iszero(eq(value_1, _3)) { revert(_1, _1) }\n                        let value_2 := _1\n                        value_2 := calldataload(36)\n                        let _4 := and(value_2, sub(shl(160, 1), 1))\n                        if iszero(eq(value_2, _4)) { revert(_1, _1) }\n                        let offset := calldataload(68)\n                        if gt(offset, 0xffffffffffffffff) { revert(_1, _1) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(_1, _1) }\n                        let length := calldataload(add(4, offset))\n                        let size := _1\n                        if gt(length, 0xffffffffffffffff)\n                        {\n                            mstore(_1, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(_1, 36)\n                        }\n                        size := add(and(add(length, 31), not(31)), 32)\n                        let memPtr := mload(64)\n                        finalize_allocation(memPtr, size)\n                        mstore(memPtr, length)\n                        if gt(add(add(offset, length), 36), calldatasize()) { revert(_1, _1) }\n                        calldatacopy(add(memPtr, 32), add(offset, 36), length)\n                        mstore(add(add(memPtr, length), 32), _1)\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\"\n                        if iszero(extcodesize(_3))\n                        {\n                            /// @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\"\n                        let _5 := /** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ mload(64)\n                        /// @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\"\n                        mstore(_5, /** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ shl(225, 0x278f7943))\n                        mstore(/** @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\" */ add(_5, /** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ 4), _4)\n                        mstore(add(/** @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\" */ _5, /** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ 36), 64)\n                        /// @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\"\n                        let _6 := call(gas(), _3, /** @src 6:1923:1932  \"msg.value\" */ callvalue(), /** @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\" */ _5, sub(/** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ abi_encode_string(memPtr, add(/** @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\" */ _5, /** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ 68)), /** @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\" */ _5), _5, /** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ _1)\n                        /// @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\"\n                        if iszero(_6)\n                        {\n                            /// @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, _1, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\"\n                        if _6\n                        {\n                            finalize_allocation(_5, /** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ _1)\n                            _1 := _1\n                        }\n                        return(_1, _1)\n                    }\n                    case 0xad3cb1cc {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let size_1 := /** @src -1:-1:-1 */ _1\n                        /// @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\"\n                        let _7 := _1\n                        _7 := /** @src -1:-1:-1 */ _1\n                        /// @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\"\n                        size_1 := 64\n                        let memPtr_1 := mload(64)\n                        finalize_allocation(memPtr_1, 64)\n                        mstore(memPtr_1, 5)\n                        mstore(add(memPtr_1, 32), \"5.0.0\")\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, 32)\n                        return(memPos_1, sub(abi_encode_string(memPtr_1, add(memPos_1, 32)), memPos_1))\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_1, _1) }\n                        let value_3 := /** @src -1:-1:-1 */ _1\n                        /// @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\"\n                        value_3 := calldataload(4)\n                        let _8 := and(value_3, sub(shl(160, 1), 1))\n                        if iszero(eq(value_3, _8)) { revert(_1, _1) }\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 0:2623:2714  \"if (newOwner == address(0)) {...\"\n                        if /** @src 0:2627:2649  \"newOwner == address(0)\" */ iszero(/** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ _8)\n                        /// @src 0:2623:2714  \"if (newOwner == address(0)) {...\"\n                        {\n                            /// @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                            mstore(/** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ _1, /** @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\" */ shl(224, 0x1e4fbdf7))\n                            /// @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\"\n                            mstore(4, _1)\n                            /// @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                            revert(/** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ _1, 36)\n                        }\n                        let _9 := sload(/** @src 0:3004:3010  \"_owner\" */ _1)\n                        /// @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\"\n                        sstore(/** @src 0:3004:3010  \"_owner\" */ _1, /** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ or(and(_9, shl(160, 0xffffffffffffffffffffffff)), _8))\n                        /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 0:3004:3010  \"_owner\" */ _1, _1, /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ and(_9, sub(shl(160, 1), 1)), /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ _8)\n                        /// @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\"\n                        return(_1, _1)\n                    }\n                }\n                revert(0, 0)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 0x20) }\n                {\n                    mstore(add(add(pos, i), 0x20), mload(add(add(value, i), 0x20)))\n                }\n                mstore(add(add(pos, length), 0x20), 0)\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            /// @ast-id 84 @src 0:1796:1958  \"function _checkOwner() internal view virtual {...\"\n            function fun_checkOwner()\n            {\n                /// @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\"\n                let value := and(sload(/** @src 0:1710:1716  \"_owner\" */ 0x00), /** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ sub(shl(160, 1), 1))\n                /// @src 0:1851:1952  \"if (owner() != _msgSender()) {...\"\n                if /** @src 0:1855:1878  \"owner() != _msgSender()\" */ iszero(eq(/** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ value, /** @src 9:735:745  \"msg.sender\" */ caller()))\n                /// @src 0:1851:1952  \"if (owner() != _msgSender()) {...\"\n                {\n                    /// @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                    mstore(/** @src 0:1710:1716  \"_owner\" */ 0x00, /** @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ shl(224, 0x118cdaa7))\n                    /// @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\"\n                    mstore(/** @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ 4, /** @src 9:735:745  \"msg.sender\" */ caller())\n                    /// @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                    revert(/** @src 0:1710:1716  \"_owner\" */ 0x00, /** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ 36)\n                }\n            }\n        }\n        data \".metadata\" hex\"a164736f6c634300081c000a\"\n    }\n}\n","metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Sets the initial owner who can perform upgrades.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeAndCall(address,address,bytes)\":{\"details\":\"Upgrades `proxy` to `implementation` and calls a function on the new implementation. See {TransparentUpgradeableProxy-_dispatchUpgradeToAndCall}. Requirements: - This contract must be the admin of `proxy`. - If `data` is empty, `msg.value` must be zero.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgrade(address,address)` and `upgradeAndCall(address,address,bytes)` are present, and `upgrade` must be used if no function should be called, while `upgradeAndCall` will invoke the `receive` function if the third argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeAndCall(address,address,bytes)` is present, and the third argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":\"ProxyAdmin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0x0a8a5b994d4c4da9f61d128945cc8c9e60dcbc72bf532f72ae42a48ea90eed9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e63ae15b6b1079b9d3c73913424d4278139f9e9c9658316675b9c48d5883a50d\",\"dweb:/ipfs/QmWLxBYfp8j1YjNMabWgv75ELTaK2eEYEEGx7qsJbxVZZq\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":{\"keccak256\":\"0xeb19221d51578ea190f0b7d807c5f196db6ff4eca90fee396f45ce9669080ba0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e4ca4196dab20274d1276d902d17034065f014aeebf496f20e39e760899650b0\",\"dweb:/ipfs/QmXFoF93GmZgZHbUvSqLjBGnQ3MY429Bnvk7SvLKEUsEAN\"]},\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x724b755843cff10a8e1503d374b857c9e7648be24e7acf1e5bee0584f1b0505c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740ad3ba1c12e426ea32cf234f445431a13efa8dbed38b53c869237e31fc8347\",\"dweb:/ipfs/QmQ3UKUnBQn4gjxjDNGuDLQWuQqcxWzyj1HzwjFgjAJBqh\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":8,"contract":"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}}}},"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol":{"ITransparentUpgradeableProxy":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"details":"Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy} does not implement this interface directly, and its upgradeability mechanism is implemented by an internal dispatch mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not include them in the ABI so this interface must be used to interact with it.","events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"BeaconUpgraded(address)":{"details":"Emitted when the beacon is changed."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"upgradeToAndCall(address,bytes)":{"details":"See {UUPSUpgradeable-upgradeToAndCall}"}},"version":1},"evm":{"assembly":"","bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"upgradeToAndCall(address,bytes)":"4f1ef286"}},"irOptimized":"","metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy} does not implement this interface directly, and its upgradeability mechanism is implemented by an internal dispatch mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not include them in the ABI so this interface must be used to interact with it.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"upgradeToAndCall(address,bytes)\":{\"details\":\"See {UUPSUpgradeable-upgradeToAndCall}\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":\"ITransparentUpgradeableProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0x0a8a5b994d4c4da9f61d128945cc8c9e60dcbc72bf532f72ae42a48ea90eed9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e63ae15b6b1079b9d3c73913424d4278139f9e9c9658316675b9c48d5883a50d\",\"dweb:/ipfs/QmWLxBYfp8j1YjNMabWgv75ELTaK2eEYEEGx7qsJbxVZZq\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":{\"keccak256\":\"0xeb19221d51578ea190f0b7d807c5f196db6ff4eca90fee396f45ce9669080ba0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e4ca4196dab20274d1276d902d17034065f014aeebf496f20e39e760899650b0\",\"dweb:/ipfs/QmXFoF93GmZgZHbUvSqLjBGnQ3MY429Bnvk7SvLKEUsEAN\"]},\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x724b755843cff10a8e1503d374b857c9e7648be24e7acf1e5bee0584f1b0505c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740ad3ba1c12e426ea32cf234f445431a13efa8dbed38b53c869237e31fc8347\",\"dweb:/ipfs/QmQ3UKUnBQn4gjxjDNGuDLQWuQqcxWzyj1HzwjFgjAJBqh\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"TransparentUpgradeableProxy":{"abi":[{"inputs":[{"internalType":"address","name":"_logic","type":"address"},{"internalType":"address","name":"initialOwner","type":"address"},{"internalType":"bytes","name":"_data","type":"bytes"}],"stateMutability":"payable","type":"constructor"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"ERC1967InvalidAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"ProxyDeniedAdminAccess","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"stateMutability":"payable","type":"fallback"}],"devdoc":{"details":"This contract implements a proxy that is upgradeable through an associated {ProxyAdmin} instance. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches the {ITransparentUpgradeableProxy-upgradeToAndCall} function exposed by the proxy itself. 2. If the admin calls the proxy, it can call the `upgradeToAndCall` function but any other call won't be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error indicating the proxy admin cannot fallback to the target implementation. These properties mean that the admin account can only be used for upgrading the proxy, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. For this reason, the proxy deploys an instance of {ProxyAdmin} and allows upgrades only if they come through it. You should think of the `ProxyAdmin` instance as the administrative interface of the proxy, including the ability to change who can trigger upgrades by transferring ownership. NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not inherit from that interface, and instead `upgradeToAndCall` is implicitly implemented using a custom dispatch mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to fully implement transparency without decoding reverts caused by selector clashes between the proxy and the implementation. NOTE: This proxy does not inherit from {Context} deliberately. The {ProxyAdmin} of this contract won't send a meta-transaction in any way, and any other meta-transaction setup should be made in the implementation contract. IMPORTANT: This contract avoids unnecessary storage reads by setting the admin only during construction as an immutable variable, preventing any changes thereafter. However, the admin slot defined in ERC-1967 can still be overwritten by the implementation logic pointed to by this proxy. In such cases, the contract may end up in an undesirable state where the admin slot is different from the actual admin. Relying on the value of the admin slot is generally fine if the implementation is trusted. WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the compiler will not check that there are no selector conflicts, due to the note above. A selector clash between any new function and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This could render the `upgradeToAndCall` function inaccessible, preventing upgradeability and compromising transparency.","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ERC1967InvalidAdmin(address)":[{"details":"The `admin` of the proxy is invalid."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"FailedCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"ProxyDeniedAdminAccess()":[{"details":"The proxy caller is the current admin, and can't fallback to the proxy target."}]},"events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"constructor":{"details":"Initializes an upgradeable proxy managed by an instance of a {ProxyAdmin} with an `initialOwner`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}."}},"version":1},"evm":{"assembly":"    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  mstore(0x40, 0xa0)\n  bytecodeSize\n  dup1\n  codesize\n  sub\n  dup1\n  tag_5\n  dup2\n  tag_1\n  jump\t// in\ntag_5:\n  swap3\n  dup4\n  codecopy\n  dup2\n  add\n  0x60\n  dup3\n  dup3\n  sub\n  slt\n  tag_16\n  jumpi\n  tag_8\n  dup3\n  tag_2\n  jump\t// in\ntag_8:\n  tag_9\n  0x20\n  dup5\n  add\n  tag_2\n  jump\t// in\ntag_9:\n  0x40\n  dup5\n  add\n  mload\n  swap1\n  swap4\n  sub(shl(0x40, 0x01), 0x01)\n  dup3\n  gt\n  tag_16\n  jumpi\n  add\n  dup3\n  0x1f\n  dup3\n  add\n  slt\n  iszero\n  tag_16\n  jumpi\n  dup1\n  mload\n  swap1\n  tag_14\n  tag_15\n  dup4\n  tag_3\n  jump\t// in\ntag_15:\n  tag_1\n  jump\t// in\ntag_14:\n  swap4\n  dup3\n  dup6\n  mstore\n  0x20\n  dup4\n  dup4\n  add\n  add\n  gt\n  tag_16\n  jumpi\n  0x00\ntag_18:\n  dup3\n  dup2\n  lt\n  tag_19\n  jumpi\n  pop\n  pop\n  0x20\n  0x00\n  swap2\n  dup5\n  add\n  add\n  mstore\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1777  newImplementation.code.length */\n  dup1\n  extcodesize\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1782  newImplementation.code.length == 0 */\n  iszero\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n  tag_21\n  jumpi\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2407:2443  IERC1967.Upgraded(newImplementation) */\n  0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n  0x00\n  dup1\n  log2\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  dup2\n  mload\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2473  data.length > 0 */\n  iszero\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2469  data.length */\n  tag_23\n  jumpi\n  0x00\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4074  target.delegatecall(data) */\n  dup1\n  dup4\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  0x20\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n  tag_25\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4074  target.delegatecall(data) */\n  swap6\n  mload\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  swap2\n  add\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4074  target.delegatecall(data) */\n  dup5\n  gas\n  delegatecall\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  jumpi(tag_26, iszero(returndatasize))\n  returndatasize\n  swap2\n  tag_28\n  tag_15\n  dup5\n  tag_3\n  jump\t// in\ntag_28:\n  swap3\n  dup4\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup6\n  add\n  returndatacopy\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n  tag_4\n  jump\t// in\ntag_25:\n  pop\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\ntag_31:\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  mload(0x40)\n  swap1\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5290:5318  new ProxyAdmin(initialOwner) */\n  dataSize(sub_1)\n  dup1\n  dup4\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup5\n  dup3\n  lt\n  or\n  tag_32\n  jumpi\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  0x20\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5290:5318  new ProxyAdmin(initialOwner) */\n  swap3\n  dup5\n  swap3\n  dataOffset(sub_1)\n  dup5\n  codecopy\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  and\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5290:5318  new ProxyAdmin(initialOwner) */\n  sub\n  add\n  swap1\n  0x00\n  create\n  dup1\n  iszero\n  tag_34\n  jumpi\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  0x01\n  dup1\n  0xa0\n  shl\n  sub\n  and\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5273:5319  _admin = address(new ProxyAdmin(initialOwner)) */\n  dup1\n  0x80\n  mstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_52df0bdf5a5f92d8037cf11e50f13d8017aefc99d20a73c826416df79570d481\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2868:2934  0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 */\n  sload\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3890:3933  IERC1967.AdminChanged(getAdmin(), newAdmin) */\n  0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  0x40\n  dup1\n  mload\n  0x01\n  dup1\n  0xa0\n  shl\n  sub\n  dup5\n  and\n  dup2\n  mstore\n  dup5\n  0x20\n  dup3\n  add\n  mstore\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3890:3933  IERC1967.AdminChanged(getAdmin(), newAdmin) */\n  log1\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3549:3571  newAdmin == address(0) */\n  dup2\n  iszero\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3545:3636  if (newAdmin == address(0)) {... */\n  tag_36\n  jumpi\n  not(sub(shl(0xa0, 0x01), 0x01))\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  and\n  or\n  0x00\n  dup1\n  mload\n  0x20\n  data_52df0bdf5a5f92d8037cf11e50f13d8017aefc99d20a73c826416df79570d481\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n  sstore\n  mload(0x40)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5273:5319  _admin = address(new ProxyAdmin(initialOwner)) */\n  0x80\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  mload\n  dup2\n  assignImmutable(\"0x954b846e373da6e2d86e60934c6fb4929a5d4ad23ca448303f22db28783db296\")\n  return\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3545:3636  if (newAdmin == address(0)) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3594:3625  ERC1967InvalidAdmin(address(0)) */\n  mstore(0x00, shl(0xe1, 0x3173bdd1))\n  0x00\n  0x04\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  mstore\n  0x24\n  0x00\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3594:3625  ERC1967InvalidAdmin(address(0)) */\n  revert\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5290:5318  new ProxyAdmin(initialOwner) */\ntag_34:\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  mload(0x40)\n  returndatasize\n  0x00\n  dup3\n  returndatacopy\n  returndatasize\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5290:5318  new ProxyAdmin(initialOwner) */\ntag_32:\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n  revert(0x00, 0x24)\ntag_26:\n  0x60\n  swap2\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n  tag_4\n  jump\t// in\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\ntag_23:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6172  msg.value */\n  pop\n  pop\n  callvalue\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n  iszero\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n  tag_31\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n  jumpi\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6199:6218  ERC1967NonPayable() */\n  mstore(0x00, shl(0xe0, 0xb398979f))\n  revert(0x00, 0x04)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\ntag_21:\n  shl(0xe0, 0x4c9c8ce3)\n  0x00\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n  swap1\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  swap2\n  swap1\n  swap2\n  and\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n  0x04\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  mstore\n  0x24\n  swap1\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n  revert\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\ntag_19:\n  dup1\n  0x20\n  dup1\n  swap3\n  dup5\n  add\n  add\n  mload\n  dup3\n  dup3\n  dup9\n  add\n  add\n  mstore\n  add\n  jump(tag_18)\ntag_16:\n  0x00\n  dup1\n  revert\ntag_1:\n  mload(0x40)\n  swap2\n  swap1\n  0x1f\n  add\n  not(0x1f)\n  and\n  dup3\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup4\n  dup3\n  lt\n  or\n  tag_32\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_2:\n  mload\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n  dup3\n  and\n  dup3\n  sub\n  tag_16\n  jumpi\n  jump\t// out\ntag_3:\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  tag_32\n  jumpi\n  0x1f\n  add\n  not(0x1f)\n  and\n  0x20\n  add\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4421:5003  function verifyCallResultFromTarget(... */\ntag_4:\n  swap1\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4593:4601  !success */\n  tag_46\n  jumpi\n  pop\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  dup1\n  mload\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5674:5695  returndata.length > 0 */\n  iszero\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5674:5691  returndata.length */\n  tag_48\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5799:5957  assembly (\"memory-safe\") {... */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  revert\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5670:6024  if (returndata.length > 0) {... */\ntag_48:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5994:6013  Errors.FailedCall() */\n  shl(0xe0, 0xd6bda275)\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5694:5695  0 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5994:6013  Errors.FailedCall() */\n  mstore\n  0x04\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5694:5695  0 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5994:6013  Errors.FailedCall() */\n  revert\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\ntag_46:\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  dup2\n  mload\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4863  returndata.length == 0 */\n  iszero\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\n  dup1\n  tag_50\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\ntag_51:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4837:4956  if (returndata.length == 0 && target.code.length == 0) {... */\n  tag_52\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4969:4986  return returndata */\n  pop\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4837:4956  if (returndata.length == 0 && target.code.length == 0) {... */\ntag_52:\n  shl(0xe0, 0x9996b315)\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4862:4863  0 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n  swap1\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  swap2\n  swap1\n  swap2\n  and\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n  0x04\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  mstore\n  0x24\n  swap1\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n  revert\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\ntag_50:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4867:4885  target.code.length */\n  pop\n  dup1\n  extcodesize\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4867:4890  target.code.length == 0 */\n  iszero\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\n  jump(tag_51)\nstop\ndata_52df0bdf5a5f92d8037cf11e50f13d8017aefc99d20a73c826416df79570d481 b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      mstore(0x40, 0x80)\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5816:5826  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5600:5606  _admin */\n      immutable(\"0x954b846e373da6e2d86e60934c6fb4929a5d4ad23ca448303f22db28783db296\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      and\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5816:5843  msg.sender == _proxyAdmin() */\n      sub\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      tag_8\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5863:5870  msg.sig */\n      and(not(sub(shl(0xe0, 0x01), 0x01)), calldataload(0x00))\n      shl(0xe1, 0x278f7943)\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5863:5928  msg.sig != ITransparentUpgradeableProxy.upgradeToAndCall.selector */\n      eq\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5874:5928  ITransparentUpgradeableProxy.upgradeToAndCall.selector */\n      tag_10\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5955:5979  ProxyDeniedAdminAccess() */\n      shl(0xe2, 0x34ad5dbb)\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5863:5870  msg.sig */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5955:5979  ProxyDeniedAdminAccess() */\n      mstore\n      0x04\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5863:5870  msg.sig */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5955:5979  ProxyDeniedAdminAccess() */\n      revert\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5859:6060  if (msg.sig != ITransparentUpgradeableProxy.upgradeToAndCall.selector) {... */\n    tag_10:\n      tag_12\n      tag_4\n      jump\t// in\n    tag_12:\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      stop\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5812:6118  if (msg.sender == _proxyAdmin()) {... */\n    tag_8:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      sload(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)\n      0x00\n      swap1\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      and\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1019:1838  assembly {... */\n      calldatasize\n      dup3\n      dup1\n      calldatacopy\n      dup2\n      calldatasize\n      swap2\n      gas\n      delegatecall\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      iszero\n      tag_13\n      jumpi\n      return(0x00, returndatasize)\n    tag_13:\n      revert(0x00, returndatasize)\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n    tag_1:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_2:\n      mload(0x40)\n      swap2\n      swap1\n      0x1f\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0xffffffffffffffff\n      dup2\n      gt\n      dup4\n      dup3\n      lt\n      or\n      tag_15\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_15:\n      tag_1\n      jump\t// in\n    tag_3:\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_15\n      jumpi\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6326:6543  function _dispatchUpgradeToAndCall() private {... */\n    tag_4:\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6441:6449  msg.data */\n      calldatasize\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6450:6451  4 */\n      0x04\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      gt\n      tag_31\n      jumpi\n      0x40\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6441:6449  msg.data */\n      calldatasize\n      not(0x03)\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      add\n      slt\n      tag_31\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6450:6451  4 */\n      0x04\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      swap1\n      dup2\n      swap1\n      sub\n      tag_31\n      jumpi\n      calldataload(0x24)\n      swap1\n      0xffffffffffffffff\n      dup3\n      gt\n      tag_31\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6441:6449  msg.data */\n      calldatasize\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      0x23\n      dup4\n      add\n      slt\n      iszero\n      tag_31\n      jumpi\n      dup2\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6450:6451  4 */\n      0x04\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      add\n      calldataload\n      swap1\n      tag_29\n      tag_30\n      dup4\n      tag_3\n      jump\t// in\n    tag_30:\n      tag_2\n      jump\t// in\n    tag_29:\n      swap2\n      dup1\n      dup4\n      mstore\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6441:6449  msg.data */\n      calldatasize\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      0x24\n      dup3\n      dup7\n      add\n      add\n      gt\n      tag_31\n      jumpi\n      0x20\n      dup2\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6441:6449  msg.data */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      swap3\n      0x24\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6531:6535  data */\n      tag_33\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      swap8\n      add\n      dup4\n      dup8\n      add\n      calldatacopy\n      dup5\n      add\n      add\n      mstore\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6531:6535  data */\n      tag_5\n      jump\t// in\n    tag_33:\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6326:6543  function _dispatchUpgradeToAndCall() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6441:6449  msg.data */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_5:\n      swap1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1777  newImplementation.code.length */\n      dup2\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1782  newImplementation.code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n      tag_34\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2407:2443  IERC1967.Upgraded(newImplementation) */\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      0x00\n      dup1\n      log2\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2473  data.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2469  data.length */\n      tag_36\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n      tag_38\n      swap2\n      tag_6\n      jump\t// in\n    tag_38:\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6172  msg.value */\n      pop\n      pop\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n      tag_40\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6199:6218  ERC1967NonPayable() */\n      shl(0xe0, 0xb398979f)\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1781:1782  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6199:6218  ERC1967NonPayable() */\n      mstore\n      0x04\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1781:1782  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6199:6218  ERC1967NonPayable() */\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n    tag_34:\n      pop\n      shl(0xe0, 0x4c9c8ce3)\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1781:1782  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n      swap1\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n      0x04\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      mstore\n      0x24\n      swap1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3900:4153  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_6:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4074  target.delegatecall(data) */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3900:4153  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n      tag_42\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3900:4153  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4074  target.delegatecall(data) */\n      0x20\n      dup2\n      mload\n      swap2\n      add\n      dup5\n      gas\n      delegatecall\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      jumpi(tag_43, iszero(returndatasize))\n      returndatasize\n      swap2\n      tag_45\n      tag_30\n      dup5\n      tag_3\n      jump\t// in\n    tag_45:\n      swap3\n      dup4\n      mstore\n      returndatasize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4074  target.delegatecall(data) */\n      0x00\n      0x20\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      dup6\n      add\n      returndatacopy\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n      tag_7\n      jump\t// in\n    tag_42:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3900:4153  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n    tag_43:\n      0x60\n      swap2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4421:5003  function verifyCallResultFromTarget(... */\n    tag_7:\n      swap1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4593:4601  !success */\n      tag_48\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5674:5695  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5674:5691  returndata.length */\n      tag_50\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5799:5957  assembly (\"memory-safe\") {... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5670:6024  if (returndata.length > 0) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5994:6013  Errors.FailedCall() */\n      shl(0xe0, 0xd6bda275)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5694:5695  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5994:6013  Errors.FailedCall() */\n      mstore\n      0x04\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5694:5695  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5994:6013  Errors.FailedCall() */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4863  returndata.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      tag_52\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4837:4956  if (returndata.length == 0 && target.code.length == 0) {... */\n      tag_54\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4969:4986  return returndata */\n      pop\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4837:4956  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_54:\n      shl(0xe0, 0x9996b315)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4862:4863  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n      swap1\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n      0x04\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4314:6545  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      mstore\n      0x24\n      swap1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\n    tag_52:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4867:4885  target.code.length */\n      pop\n      dup1\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4867:4890  target.code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\n      jump(tag_53)\n\n    auxdata: 0xa164736f6c634300081c000a\n}\n\nsub_1: assembly {\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n      0x80\n      jumpi(tag_7, callvalue)\n      0x1f\n      bytecodeSize\n      codesize\n      dup2\n      swap1\n      sub\n      swap2\n      dup3\n      add\n      not(0x1f)\n      and\n      dup4\n      add\n      swap2\n      sub(shl(0x40, 0x01), 0x01)\n      dup4\n      gt\n      dup5\n      dup5\n      lt\n      or\n      tag_3\n      jumpi\n      dup1\n      dup5\n      swap3\n      0x20\n      swap5\n      0x40\n      mstore\n      dup4\n      codecopy\n      dup2\n      add\n      sub\n      slt\n      tag_7\n      jumpi\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      swap1\n      dup2\n      swap1\n      sub\n      tag_7\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n      dup1\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n      tag_9\n      jumpi\n      0x00\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup2\n      and\n      dup4\n      or\n      dup3\n      sstore\n      mload(0x40)\n      swap3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n      dup1\n      log3\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n      dataSize(sub_0)\n      swap1\n      dup2\n      dataOffset(sub_0)\n      dup3\n      codecopy\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n    tag_9:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n      mstore(0x00, shl(0xe0, 0x1e4fbdf7))\n      0x00\n      0x04\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n      mstore\n      0x24\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n      revert\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n    tag_7:\n      0x00\n      dup1\n      revert\n    tag_3:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    stop\n\n    sub_0: assembly {\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n          mstore(0x40, 0x80)\n          jumpi(tag_4, iszero(lt(calldatasize, 0x04)))\n          0x00\n          dup1\n          revert\n        tag_4:\n          0x00\n          dup1\n          calldataload\n          0xe0\n          shr\n          dup1\n          0x715018a6\n          eq\n          tag_6\n          jumpi\n          dup1\n          0x8da5cb5b\n          eq\n          tag_8\n          jumpi\n          dup1\n          0x9623609d\n          eq\n          tag_10\n          jumpi\n          dup1\n          0xad3cb1cc\n          eq\n          tag_12\n          jumpi\n          0xf2fde38b\n          eq\n          tag_14\n          jumpi\n          0x00\n          dup1\n          revert\n        tag_14:\n          jumpi(tag_18, callvalue)\n          jumpi(tag_18, slt(add(not(0x03), calldatasize), 0x20))\n          calldataload(0x04)\n          sub(shl(0xa0, 0x01), 0x01)\n          dup2\n          and\n          swap1\n          dup2\n          swap1\n          sub\n          tag_20\n          jumpi\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n          tag_22\n          tag_3\n          jump\t// in\n        tag_22:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n          dup1\n          iszero\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n          tag_23\n          jumpi\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n          dup2\n          sload\n          not(sub(shl(0xa0, 0x01), 0x01))\n          dup2\n          and\n          dup3\n          or\n          dup4\n          sstore\n          sub(shl(0xa0, 0x01), 0x01)\n          and\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n          0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n          dup4\n          dup1\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n          log3\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n          dup1\n          return\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n        tag_23:\n          shl(0xe0, 0x1e4fbdf7)\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n          dup3\n          mstore\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n          0x04\n          dup3\n          swap1\n          mstore\n          0x24\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n          dup3\n          revert\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n        tag_20:\n          pop\n        tag_18:\n          dup1\n          revert\n        tag_12:\n          pop\n          jumpi(tag_18, callvalue)\n          dup1\n          add(calldatasize, not(0x03))\n          slt\n          tag_18\n          jumpi\n          pop\n          tag_29\n          mload(0x40)\n          tag_30\n          0x40\n          dup3\n          tag_1\n          jump\t// in\n        tag_30:\n          0x05\n          dup2\n          mstore\n          shl(0xdc, 0x0352e302e3)\n          0x20\n          dup3\n          add\n          mstore\n          mload(0x40)\n          swap2\n          dup3\n          swap2\n          0x20\n          dup4\n          mstore\n          0x20\n          dup4\n          add\n          swap1\n          tag_2\n          jump\t// in\n        tag_29:\n          sub\n          swap1\n          return\n        tag_10:\n          pop\n          jumpi(tag_18, slt(add(not(0x03), calldatasize), 0x60))\n          calldataload(0x04)\n          sub(shl(0xa0, 0x01), 0x01)\n          dup2\n          and\n          swap1\n          dup2\n          swap1\n          sub\n          tag_20\n          jumpi\n          calldataload(0x24)\n          sub(shl(0xa0, 0x01), 0x01)\n          dup2\n          and\n          swap1\n          dup2\n          swap1\n          sub\n          tag_47\n          jumpi\n          calldataload(0x44)\n          0xffffffffffffffff\n          dup2\n          gt\n          tag_39\n          jumpi\n          calldatasize\n          0x23\n          dup3\n          add\n          slt\n          iszero\n          tag_39\n          jumpi\n          dup1\n          0x04\n          add\n          calldataload\n          0xffffffffffffffff\n          dup2\n          gt\n          tag_41\n          jumpi\n          mload(0x40)\n          dup6\n          swap4\n          swap3\n          swap1\n          swap2\n          swap1\n          tag_43\n          0x1f\n          dup4\n          add\n          not(0x1f)\n          and\n          0x20\n          add\n          dup5\n          tag_1\n          jump\t// in\n        tag_43:\n          dup2\n          dup4\n          mstore\n          calldatasize\n          0x24\n          dup4\n          dup4\n          add\n          add\n          gt\n          tag_44\n          jumpi\n          dup2\n          dup6\n          swap3\n          0x24\n          0x20\n          swap4\n          add\n          dup4\n          dup7\n          add\n          calldatacopy\n          dup4\n          add\n          add\n          mstore\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n          tag_46\n          tag_3\n          jump\t// in\n        tag_46:\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1893:1955  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n          dup4\n          extcodesize\n          iszero\n          tag_47\n          jumpi\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n          tag_49\n          swap4\n          dup4\n          swap3\n          mload(0x40)\n          dup1\n          swap7\n          dup2\n          swap5\n          dup3\n          swap4\n          shl(0xe1, 0x278f7943)\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1893:1955  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n          dup5\n          mstore\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n          0x04\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1893:1955  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n          dup5\n          add\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n          mstore\n          0x40\n          0x24\n          dup5\n          add\n          mstore\n          0x44\n          dup4\n          add\n          swap1\n          tag_2\n          jump\t// in\n        tag_49:\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1893:1955  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n          sub\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1923:1932  msg.value */\n          swap2\n          callvalue\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1893:1955  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n          swap1\n          gas\n          call\n          dup1\n          iszero\n          tag_50\n          jumpi\n          tag_52\n          jumpi\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n          dup1\n          return\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1893:1955  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n        tag_52:\n          tag_54\n          swap2\n          tag_1\n          jump\t// in\n        tag_54:\n          codesize\n          dup2\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n          dup1\n          return\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1893:1955  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n        tag_50:\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n          pop\n          mload(0x40)\n          swap1\n          returndatasize\n          swap1\n          dup3\n          returndatacopy\n          returndatasize\n          swap1\n          revert\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1893:1955  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n        tag_47:\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n          dup3\n          dup1\n          revert\n        tag_44:\n          dup5\n          dup1\n          revert\n        tag_41:\n          shl(0xe0, 0x4e487b71)\n          dup6\n          mstore\n          mstore(0x04, 0x41)\n          0x24\n          dup6\n          revert\n        tag_39:\n          dup4\n          dup1\n          revert\n        tag_8:\n          pop\n          jumpi(tag_18, callvalue)\n          dup1\n          add(calldatasize, not(0x03))\n          slt\n          tag_18\n          jumpi\n          sload\n          mload(0x40)\n          sub(shl(0xa0, 0x01), 0x01)\n          swap1\n          swap2\n          and\n          dup2\n          mstore\n          0x20\n          swap1\n          return\n        tag_6:\n          pop\n          jumpi(tag_18, callvalue)\n          dup1\n          add(calldatasize, not(0x03))\n          slt\n          tag_18\n          jumpi\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n          tag_63\n          tag_3\n          jump\t// in\n        tag_63:\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n          dup1\n          sload\n          not(sub(shl(0xa0, 0x01), 0x01))\n          dup2\n          and\n          dup3\n          sstore\n          dup2\n          swap1\n          sub(shl(0xa0, 0x01), 0x01)\n          and\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n          0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n          dup3\n          dup1\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n          log3\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n          dup1\n          return\n        tag_1:\n          swap1\n          0x1f\n          dup1\n          not\n          swap2\n          add\n          and\n          dup2\n          add\n          swap1\n          dup2\n          lt\n          0xffffffffffffffff\n          dup3\n          gt\n          or\n          tag_64\n          jumpi\n          0x40\n          mstore\n          jump\t// out\n        tag_64:\n          mstore(0x00, shl(0xe0, 0x4e487b71))\n          mstore(0x04, 0x41)\n          revert(0x00, 0x24)\n        tag_2:\n          swap2\n          swap1\n          dup3\n          mload\n          swap3\n          dup4\n          dup3\n          mstore\n          0x00\n        tag_66:\n          dup5\n          dup2\n          lt\n          tag_67\n          jumpi\n          pop\n          pop\n          dup3\n          0x00\n          0x20\n          dup1\n          swap5\n          swap6\n          dup5\n          add\n          add\n          mstore\n          0x1f\n          dup1\n          not\n          swap2\n          add\n          and\n          add\n          add\n          swap1\n          jump\t// out\n        tag_67:\n          dup1\n          0x20\n          dup1\n          swap3\n          dup5\n          add\n          add\n          mload\n          dup3\n          dup3\n          dup7\n          add\n          add\n          mstore\n          add\n          jump(tag_66)\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n        tag_3:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n          0x00\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n          sload\n          sub(shl(0xa0, 0x01), 0x01)\n          and\n            /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n          caller\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n          sub\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n          tag_69\n          jumpi\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n          jump\t// out\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n        tag_69:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n          shl(0xe0, 0x118cdaa7)\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n          0x00\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n          mstore\n            /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n          caller\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n          0x04\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n          mstore\n          0x24\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n          0x00\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n          revert\n\n        auxdata: 0xa164736f6c634300081c000a\n    }\n}\n","bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":696,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":659,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":716,"id":null,"parameterSlots":1,"returnSlots":1},"fun_verifyCallResultFromTarget":{"entryPoint":743,"id":946,"parameterSlots":3,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60a0604052610ad58038038061001481610293565b928339810160608282031261028e5761002c826102b8565b610038602084016102b8565b604084015190936001600160401b03821161028e570182601f8201121561028e5780519061006d610068836102cc565b610293565b938285526020838301011161028e5760005b828110610279575050602060009184010152803b15610258577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0383169081179091557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a281511561023f5760008083602061013595519101845af43d15610237573d91610125610068846102cc565b9283523d6000602085013e6102e7565b505b604051906104688083016001600160401b0381118482101761022157602092849261064d84396001600160a01b031681520301906000f080156102155760018060a01b031680608052600080516020610ab5833981519152547f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6040805160018060a01b0384168152846020820152a181156101ff576001600160a01b03191617600080516020610ab583398151915255604051610304908161034982396080518160070152f35b633173bdd160e11b600052600060045260246000fd5b6040513d6000823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b6060916102e7565b505034156101375763b398979f60e01b60005260046000fd5b634c9c8ce360e01b60009081526001600160a01b0391909116600452602490fd5b8060208092840101518282880101520161007f565b600080fd5b6040519190601f01601f191682016001600160401b0381118382101761022157604052565b51906001600160a01b038216820361028e57565b6001600160401b03811161022157601f01601f191660200190565b9061030d57508051156102fc57805190602001fd5b63d6bda27560e01b60005260046000fd5b8151158061033f575b61031e575090565b639996b31560e01b60009081526001600160a01b0391909116600452602490fd5b50803b1561031656fe6080604052337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031603610069576000356001600160e01b03191663278f794360e11b1461005f576334ad5dbb60e21b60005260046000fd5b610067610113565b005b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5460009081906001600160a01b0316368280378136915af43d6000803e156100b1573d6000f35b3d6000fd5b634e487b7160e01b600052604160045260246000fd5b6040519190601f01601f1916820167ffffffffffffffff8111838210176100f257604052565b6100b6565b67ffffffffffffffff81116100f257601f01601f191660200190565b3660041161019d57604036600319011261019d576004356001600160a01b0381169081900361019d576024359067ffffffffffffffff821161019d573660238301121561019d5781600401359061017161016c836100f7565b6100cc565b91808352366024828601011161019d57602081600092602461019b970183870137840101526101a2565b565b600080fd5b90813b15610239577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0384169081179091557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a280511561021f5761021c9161025b565b50565b50503461022857565b63b398979f60e01b60005260046000fd5b50634c9c8ce360e01b60009081526001600160a01b0391909116600452602490fd5b60008061028f93602081519101845af43d15610292573d9161027f61016c846100f7565b9283523d6000602085013e610296565b90565b6060915b906102bc57508051156102ab57805190602001fd5b63d6bda27560e01b60005260046000fd5b815115806102ee575b6102cd575090565b639996b31560e01b60009081526001600160a01b0391909116600452602490fd5b50803b156102c556fea164736f6c634300081c000a60803460bc57601f61046838819003918201601f19168301916001600160401b0383118484101760c15780849260209460405283398101031260bc57516001600160a01b0381169081900360bc57801560a657600080546001600160a01b031981168317825560405192916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a361039090816100d88239f35b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b6000803560e01c8063715018a6146102875780638da5cb5b146102605780639623609d1461012f578063ad3cb1cc146100e25763f2fde38b1461005457600080fd5b346100df5760203660031901126100df576004356001600160a01b038116908190036100dd5761008261035a565b80156100c95781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b505b80fd5b50346100df57806003193601126100df575061012b6040516101056040826102e1565b60058152640352e302e360dc1b6020820152604051918291602083526020830190610319565b0390f35b5060603660031901126100df576004356001600160a01b038116908190036100dd576024356001600160a01b038116908190036102405760443567ffffffffffffffff811161025c573660238201121561025c57806004013567ffffffffffffffff8111610248576040518593929091906101b4601f8301601f1916602001846102e1565b81835236602483830101116102445781859260246020930183860137830101526101dc61035a565b833b156102405761021293839260405180968194829363278f794360e11b84526004840152604060248401526044830190610319565b039134905af18015610233576102255780f35b61022e916102e1565b388180f35b50604051903d90823e3d90fd5b8280fd5b8480fd5b634e487b7160e01b85526041600452602485fd5b8380fd5b50346100df57806003193601126100df57546040516001600160a01b039091168152602090f35b50346100df57806003193601126100df576102a061035a565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b90601f8019910116810190811067ffffffffffffffff82111761030357604052565b634e487b7160e01b600052604160045260246000fd5b919082519283825260005b848110610345575050826000602080949584010152601f8019910116010190565b80602080928401015182828601015201610324565b6000546001600160a01b0316330361036e57565b63118cdaa760e01b6000523360045260246000fdfea164736f6c634300081c000ab53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH2 0xAD5 DUP1 CODESIZE SUB DUP1 PUSH2 0x14 DUP2 PUSH2 0x293 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD PUSH1 0x60 DUP3 DUP3 SUB SLT PUSH2 0x28E JUMPI PUSH2 0x2C DUP3 PUSH2 0x2B8 JUMP JUMPDEST PUSH2 0x38 PUSH1 0x20 DUP5 ADD PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MLOAD SWAP1 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x28E JUMPI ADD DUP3 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x28E JUMPI DUP1 MLOAD SWAP1 PUSH2 0x6D PUSH2 0x68 DUP4 PUSH2 0x2CC JUMP JUMPDEST PUSH2 0x293 JUMP JUMPDEST SWAP4 DUP3 DUP6 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x28E JUMPI PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x279 JUMPI POP POP PUSH1 0x20 PUSH1 0x0 SWAP2 DUP5 ADD ADD MSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0x258 JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 PUSH2 0x135 SWAP6 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0x237 JUMPI RETURNDATASIZE SWAP2 PUSH2 0x125 PUSH2 0x68 DUP5 PUSH2 0x2CC JUMP JUMPDEST SWAP3 DUP4 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP6 ADD RETURNDATACOPY PUSH2 0x2E7 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x468 DUP1 DUP4 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP5 DUP3 LT OR PUSH2 0x221 JUMPI PUSH1 0x20 SWAP3 DUP5 SWAP3 PUSH2 0x64D DUP5 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE SUB ADD SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH1 0x80 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xAB5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP2 ISZERO PUSH2 0x1FF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xAB5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH1 0x40 MLOAD PUSH2 0x304 SWAP1 DUP2 PUSH2 0x349 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH1 0x7 ADD MSTORE RETURN JUMPDEST PUSH4 0x3173BDD1 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 SWAP2 PUSH2 0x2E7 JUMP JUMPDEST POP POP CALLVALUE ISZERO PUSH2 0x137 JUMPI PUSH4 0xB398979F PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP9 ADD ADD MSTORE ADD PUSH2 0x7F JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x221 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x28E JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x221 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x30D JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x2FC JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xD6BDA275 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x33F JUMPI JUMPDEST PUSH2 0x31E JUMPI POP SWAP1 JUMP JUMPDEST PUSH4 0x9996B315 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x316 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x69 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x278F7943 PUSH1 0xE1 SHL EQ PUSH2 0x5F JUMPI PUSH4 0x34AD5DBB PUSH1 0xE2 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x67 PUSH2 0x113 JUMP JUMPDEST STOP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY ISZERO PUSH2 0xB1 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP4 DUP3 LT OR PUSH2 0xF2 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xB6 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xF2 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x19D JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19D JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x19D JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x19D JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x19D JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH2 0x171 PUSH2 0x16C DUP4 PUSH2 0xF7 JUMP JUMPDEST PUSH2 0xCC JUMP JUMPDEST SWAP2 DUP1 DUP4 MSTORE CALLDATASIZE PUSH1 0x24 DUP3 DUP7 ADD ADD GT PUSH2 0x19D JUMPI PUSH1 0x20 DUP2 PUSH1 0x0 SWAP3 PUSH1 0x24 PUSH2 0x19B SWAP8 ADD DUP4 DUP8 ADD CALLDATACOPY DUP5 ADD ADD MSTORE PUSH2 0x1A2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x239 JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x21F JUMPI PUSH2 0x21C SWAP2 PUSH2 0x25B JUMP JUMPDEST POP JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x228 JUMPI JUMP JUMPDEST PUSH4 0xB398979F PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST POP PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x28F SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0x292 JUMPI RETURNDATASIZE SWAP2 PUSH2 0x27F PUSH2 0x16C DUP5 PUSH2 0xF7 JUMP JUMPDEST SWAP3 DUP4 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP6 ADD RETURNDATACOPY PUSH2 0x296 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 SWAP2 JUMPDEST SWAP1 PUSH2 0x2BC JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x2AB JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xD6BDA275 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x2EE JUMPI JUMPDEST PUSH2 0x2CD JUMPI POP SWAP1 JUMP JUMPDEST PUSH4 0x9996B315 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x2C5 JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP PUSH1 0x80 CALLVALUE PUSH1 0xBC JUMPI PUSH1 0x1F PUSH2 0x468 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH1 0xC1 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH1 0xBC JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH1 0xBC JUMPI DUP1 ISZERO PUSH1 0xA6 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH2 0x390 SWAP1 DUP2 PUSH2 0xD8 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x9623609D EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0xE2 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xDF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xDD JUMPI PUSH2 0x82 PUSH2 0x35A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC9 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 OR DUP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xDF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xDF JUMPI POP PUSH2 0x12B PUSH1 0x40 MLOAD PUSH2 0x105 PUSH1 0x40 DUP3 PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x352E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x319 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xDD JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x240 JUMPI PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x25C JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x25C JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x248 JUMPI PUSH1 0x40 MLOAD DUP6 SWAP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x1B4 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x2E1 JUMP JUMPDEST DUP2 DUP4 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x244 JUMPI DUP2 DUP6 SWAP3 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH2 0x1DC PUSH2 0x35A JUMP JUMPDEST DUP4 EXTCODESIZE ISZERO PUSH2 0x240 JUMPI PUSH2 0x212 SWAP4 DUP4 SWAP3 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP5 DUP3 SWAP4 PUSH4 0x278F7943 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP1 PUSH2 0x319 JUMP JUMPDEST SUB SWAP2 CALLVALUE SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x233 JUMPI PUSH2 0x225 JUMPI DUP1 RETURN JUMPDEST PUSH2 0x22E SWAP2 PUSH2 0x2E1 JUMP JUMPDEST CODESIZE DUP2 DUP1 RETURN JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xDF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xDF JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0xDF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xDF JUMPI PUSH2 0x2A0 PUSH2 0x35A JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x303 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x345 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x324 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x36E JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP 0xB5 BALANCE 0x27 PUSH9 0x4A568B3173AE13B9F8 0xA6 ADD PUSH15 0x243E63B6E8EE1178D6A717850B5D61 SUB ","sourceMap":"4314:2231:7:-:0;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;4314:2231:7;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;4314:2231:7;;;;;;;;;-1:-1:-1;4314:2231:7;;;;;1748:29:3;;:34;1744:119;;811:66;4314:2231:7;;-1:-1:-1;;;;;;4314:2231:7;-1:-1:-1;;;;;4314:2231:7;;;;;;;;2407:36:3;-1:-1:-1;;2407:36:3;4314:2231:7;;2458:15:3;:11;;-1:-1:-1;4049:25:8;;4314:2231:7;4091:55:8;4049:25;;4314:2231:7;;4049:25:8;;;4314:2231:7;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;4314:2231:7;;;;4091:55:8;:::i;:::-;;2454:148:3;4314:2231:7;;;5290:28;;;;-1:-1:-1;;;;;5290:28:7;;;;;;;;4314:2231;5290:28;;;;;;-1:-1:-1;;;;;4314:2231:7;;;5290:28;;;-1:-1:-1;5290:28:7;;;;;4314:2231;;;;;;5273:46;;;-1:-1:-1;;;;;;;;;;;2868:66:3;3890:43;4314:2231:7;;;;;;;;;;;;;;;;;3890:43:3;3549:22;;3545:91;;-1:-1:-1;;;;;;4314:2231:7;;-1:-1:-1;;;;;;;;;;;4314:2231:7;;;;;;;;;5273:46;4314:2231;;;;;;3545:91:3;3594:31;;;-1:-1:-1;3594:31:3;-1:-1:-1;3594:31:3;4314:2231:7;;-1:-1:-1;3594:31:3;5290:28:7;4314:2231;;;-1:-1:-1;4314:2231:7;;;;;5290:28;4314:2231;;;-1:-1:-1;4314:2231:7;;;;;-1:-1:-1;4314:2231:7;;;;4091:55:8;:::i;2454:148:3:-;6163:9;;;6159:70;2454:148;6159:70;6199:19;;;-1:-1:-1;6199:19:3;;-1:-1:-1;6199:19:3;1744:119;-1:-1:-1;;;;1805:47:3;;;-1:-1:-1;;;;;4314:2231:7;;;;1805:47:3;4314:2231:7;;;1805:47:3;4314:2231:7;;;;;;;;;;;;;;;;;;;-1:-1:-1;4314:2231:7;;;;;;;;;-1:-1:-1;;4314:2231:7;;;-1:-1:-1;;;;;4314:2231:7;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;4314:2231:7;;;;;;:::o;:::-;-1:-1:-1;;;;;4314:2231:7;;;;;;-1:-1:-1;;4314:2231:7;;;;:::o;4421:582:8:-;;4593:8;;-1:-1:-1;4314:2231:7;;5674:21:8;:17;;5799:158;;;;;;5670:354;5994:19;;;5694:1;5994:19;;5694:1;5994:19;4589:408;4314:2231:7;;4841:22:8;:49;;;4589:408;4837:119;;4969:17;;:::o;4837:119::-;-1:-1:-1;;;4862:1:8;4917:24;;;-1:-1:-1;;;;;4314:2231:7;;;;4917:24:8;4314:2231:7;;;4917:24:8;4841:49;4867:18;;;:23;4841:49;"},"deployedBytecode":{"functionDebugData":{"allocate_memory":{"entryPoint":204,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":247,"id":null,"parameterSlots":1,"returnSlots":1},"fun_dispatchUpgradeToAndCall":{"entryPoint":275,"id":729,"parameterSlots":0,"returnSlots":0},"fun_functionDelegateCall":{"entryPoint":603,"id":906,"parameterSlots":2,"returnSlots":1},"fun_upgradeToAndCall":{"entryPoint":418,"id":315,"parameterSlots":2,"returnSlots":0},"fun_verifyCallResultFromTarget":{"entryPoint":662,"id":946,"parameterSlots":3,"returnSlots":1},"panic_error_0x41":{"entryPoint":182,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"621":[{"length":32,"start":7}]},"linkReferences":{},"object":"6080604052337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031603610069576000356001600160e01b03191663278f794360e11b1461005f576334ad5dbb60e21b60005260046000fd5b610067610113565b005b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5460009081906001600160a01b0316368280378136915af43d6000803e156100b1573d6000f35b3d6000fd5b634e487b7160e01b600052604160045260246000fd5b6040519190601f01601f1916820167ffffffffffffffff8111838210176100f257604052565b6100b6565b67ffffffffffffffff81116100f257601f01601f191660200190565b3660041161019d57604036600319011261019d576004356001600160a01b0381169081900361019d576024359067ffffffffffffffff821161019d573660238301121561019d5781600401359061017161016c836100f7565b6100cc565b91808352366024828601011161019d57602081600092602461019b970183870137840101526101a2565b565b600080fd5b90813b15610239577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0384169081179091557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a280511561021f5761021c9161025b565b50565b50503461022857565b63b398979f60e01b60005260046000fd5b50634c9c8ce360e01b60009081526001600160a01b0391909116600452602490fd5b60008061028f93602081519101845af43d15610292573d9161027f61016c846100f7565b9283523d6000602085013e610296565b90565b6060915b906102bc57508051156102ab57805190602001fd5b63d6bda27560e01b60005260046000fd5b815115806102ee575b6102cd575090565b639996b31560e01b60009081526001600160a01b0391909116600452602490fd5b50803b156102c556fea164736f6c634300081c000a","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x69 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x278F7943 PUSH1 0xE1 SHL EQ PUSH2 0x5F JUMPI PUSH4 0x34AD5DBB PUSH1 0xE2 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x67 PUSH2 0x113 JUMP JUMPDEST STOP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY ISZERO PUSH2 0xB1 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP4 DUP3 LT OR PUSH2 0xF2 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xB6 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xF2 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x19D JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19D JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x19D JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x19D JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x19D JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH2 0x171 PUSH2 0x16C DUP4 PUSH2 0xF7 JUMP JUMPDEST PUSH2 0xCC JUMP JUMPDEST SWAP2 DUP1 DUP4 MSTORE CALLDATASIZE PUSH1 0x24 DUP3 DUP7 ADD ADD GT PUSH2 0x19D JUMPI PUSH1 0x20 DUP2 PUSH1 0x0 SWAP3 PUSH1 0x24 PUSH2 0x19B SWAP8 ADD DUP4 DUP8 ADD CALLDATACOPY DUP5 ADD ADD MSTORE PUSH2 0x1A2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x239 JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x21F JUMPI PUSH2 0x21C SWAP2 PUSH2 0x25B JUMP JUMPDEST POP JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x228 JUMPI JUMP JUMPDEST PUSH4 0xB398979F PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST POP PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x28F SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0x292 JUMPI RETURNDATASIZE SWAP2 PUSH2 0x27F PUSH2 0x16C DUP5 PUSH2 0xF7 JUMP JUMPDEST SWAP3 DUP4 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP6 ADD RETURNDATACOPY PUSH2 0x296 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 SWAP2 JUMPDEST SWAP1 PUSH2 0x2BC JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x2AB JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xD6BDA275 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x2EE JUMPI JUMPDEST PUSH2 0x2CD JUMPI POP SWAP1 JUMP JUMPDEST PUSH4 0x9996B315 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x2C5 JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP ","sourceMap":"4314:2231:7:-:0;;;5816:10;5600:6;-1:-1:-1;;;;;4314:2231:7;5816:27;4314:2231;;5863:7;;-1:-1:-1;;;;;;5863:7:7;-1:-1:-1;;;5863:65:7;5874:54;;5955:24;;;5863:7;5955:24;;5863:7;5955:24;5859:201;;;:::i;:::-;4314:2231;5812:306;811:66:3;;-1:-1:-1;;;;;;;;;4314:2231:7;1019:819:4;-1:-1:-1;;1019:819:4;;;;;;;-1:-1:-1;1019:819:4;;;;;;-1:-1:-1;1019:819:4;;;-1:-1:-1;1019:819:4;4314:2231:7;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4314:2231:7;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;-1:-1:-1;;4314:2231:7;;;;:::o;6326:217::-;6441:8;6450:1;4314:2231;;;;6441:8;-1:-1:-1;;4314:2231:7;;;;6450:1;4314:2231;-1:-1:-1;;;;;4314:2231:7;;;;;;;;;;;;;;;;6441:8;4314:2231;;;;;;;;6450:1;4314:2231;;;;;;;:::i;:::-;;:::i;:::-;;;;;6441:8;4314:2231;;;;;;;;;;6441:8;4314:2231;;6531:4;4314:2231;;;;;;;;;;6531:4;:::i;:::-;6326:217::o;4314:2231::-;6441:8;4314:2231;;2264:344:3;;1748:29;;:34;1744:119;;811:66;4314:2231:7;;-1:-1:-1;;;;;;4314:2231:7;-1:-1:-1;;;;;4314:2231:7;;;;;;;;2407:36:3;-1:-1:-1;;2407:36:3;4314:2231:7;;2458:15:3;:11;;2489:53;;;:::i;:::-;;2264:344::o;2454:148::-;6163:9;;;6159:70;;2264:344::o;6159:70::-;6199:19;;;1781:1;6199:19;;1781:1;6199:19;1744:119;-1:-1:-1;;;;1781:1:3;1805:47;;;-1:-1:-1;;;;;4314:2231:7;;;;1805:47:3;4314:2231:7;;;1805:47:3;3900:253:8;4049:25;3900:253;4091:55;3900:253;4049:25;;;;;;;;4314:2231:7;;;;;;;;;;:::i;:::-;;;;;4049:25:8;;4314:2231:7;;;4091:55:8;:::i;:::-;3900:253;:::o;4314:2231:7:-;;;4421:582:8;;4593:8;;-1:-1:-1;4314:2231:7;;5674:21:8;:17;;5799:158;;;;;;5670:354;5994:19;;;5694:1;5994:19;;5694:1;5994:19;4589:408;4314:2231:7;;4841:22:8;:49;;;4589:408;4837:119;;4969:17;;:::o;4837:119::-;-1:-1:-1;;;4862:1:8;4917:24;;;-1:-1:-1;;;;;4314:2231:7;;;;4917:24:8;4314:2231:7;;;4917:24:8;4841:49;4867:18;;;:23;4841:49;"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 2:\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\", 3:\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\", 4:\"@openzeppelin/contracts/proxy/Proxy.sol\", 7:\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\", 8:\"@openzeppelin/contracts/utils/Address.sol\", 11:\"@openzeppelin/contracts/utils/StorageSlot.sol\"\nobject \"TransparentUpgradeableProxy_730\" {\n    code {\n        {\n            /// @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n            mstore(64, memoryguard(0xa0))\n            let programSize := datasize(\"TransparentUpgradeableProxy_730\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _1 := add(memoryDataOffset, argSize)\n            if slt(sub(_1, memoryDataOffset), 96)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n            let value0 := abi_decode_address_fromMemory(memoryDataOffset)\n            let value1 := abi_decode_address_fromMemory(add(memoryDataOffset, 32))\n            let offset := mload(add(memoryDataOffset, 64))\n            if gt(offset, sub(shl(64, 1), 1))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n            let _2 := add(memoryDataOffset, offset)\n            if iszero(slt(add(_2, 0x1f), _1))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n            let length := mload(_2)\n            let array := allocate_memory(array_allocation_size_bytes(length))\n            mstore(array, length)\n            if gt(add(add(_2, length), 32), _1)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n            let i := /** @src -1:-1:-1 */ 0\n            /// @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n            for { } lt(i, length) { i := add(i, 32) }\n            {\n                mstore(add(add(array, i), 32), mload(add(add(_2, i), 32)))\n            }\n            mstore(add(add(array, length), 32), /** @src -1:-1:-1 */ 0)\n            /// @src 3:1744:1863  \"if (newImplementation.code.length == 0) {...\"\n            if /** @src 3:1748:1782  \"newImplementation.code.length == 0\" */ iszero(/** @src 3:1748:1777  \"newImplementation.code.length\" */ extcodesize(value0))\n            /// @src 3:1744:1863  \"if (newImplementation.code.length == 0) {...\"\n            {\n                /// @src 3:1805:1852  \"ERC1967InvalidImplementation(newImplementation)\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 3:1805:1852  \"ERC1967InvalidImplementation(newImplementation)\" */ shl(224, 0x4c9c8ce3))\n                /// @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                mstore(/** @src 3:1805:1852  \"ERC1967InvalidImplementation(newImplementation)\" */ 4, /** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ and(value0, sub(shl(160, 1), 1)))\n                /// @src 3:1805:1852  \"ERC1967InvalidImplementation(newImplementation)\"\n                revert(/** @src -1:-1:-1 */ 0, /** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ 36)\n            }\n            let _3 := and(value0, sub(shl(160, 1), 1))\n            sstore(/** @src 3:811:877  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc, /** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ or(and(sload(/** @src 3:811:877  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc), /** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ not(sub(shl(160, 1), 1))), _3))\n            /// @src 3:2407:2443  \"IERC1967.Upgraded(newImplementation)\"\n            log2(/** @src -1:-1:-1 */ 0, 0, /** @src 3:2407:2443  \"IERC1967.Upgraded(newImplementation)\" */ 0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b, _3)\n            /// @src 3:2454:2602  \"if (data.length > 0) {...\"\n            switch /** @src 3:2458:2473  \"data.length > 0\" */ iszero(iszero(/** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ mload(/** @src 3:2458:2469  \"data.length\" */ array)))\n            case /** @src 3:2454:2602  \"if (data.length > 0) {...\" */ 0 {\n                /// @src 3:6159:6229  \"if (msg.value > 0) {...\"\n                if /** @src 3:6163:6176  \"msg.value > 0\" */ iszero(iszero(/** @src 3:6163:6172  \"msg.value\" */ callvalue()))\n                /// @src 3:6159:6229  \"if (msg.value > 0) {...\"\n                {\n                    /// @src 3:6199:6218  \"ERC1967NonPayable()\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 3:6199:6218  \"ERC1967NonPayable()\" */ shl(224, 0xb398979f))\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 3:6199:6218  \"ERC1967NonPayable()\" */ 4)\n                }\n            }\n            default /// @src 3:2454:2602  \"if (data.length > 0) {...\"\n            {\n                /// @src 8:4049:4074  \"target.delegatecall(data)\"\n                let expr_component := delegatecall(gas(), value0, /** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ add(array, 32), /** @src 8:4049:4074  \"target.delegatecall(data)\" */ mload(array), /** @src -1:-1:-1 */ 0, 0)\n                /// @src 8:4049:4074  \"target.delegatecall(data)\"\n                let data := /** @src -1:-1:-1 */ 0\n                /// @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _4 := returndatasize()\n                    let memPtr := allocate_memory(array_allocation_size_bytes(_4))\n                    mstore(memPtr, _4)\n                    data := memPtr\n                    returndatacopy(add(memPtr, 32), /** @src -1:-1:-1 */ 0, /** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ returndatasize())\n                }\n                /// @src 8:4091:4146  \"verifyCallResultFromTarget(target, success, returndata)\"\n                pop(fun_verifyCallResultFromTarget(value0, expr_component, /** @src 8:4049:4074  \"target.delegatecall(data)\" */ data))\n            }\n            /// @src 7:5290:5318  \"new ProxyAdmin(initialOwner)\"\n            let _5 := /** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ mload(64)\n            /// @src 7:5290:5318  \"new ProxyAdmin(initialOwner)\"\n            let _6 := datasize(\"ProxyAdmin_594\")\n            let _7 := add(_5, _6)\n            if or(gt(_7, /** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ sub(shl(64, 1), 1)), /** @src 7:5290:5318  \"new ProxyAdmin(initialOwner)\" */ lt(_7, _5))\n            {\n                /// @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ 0x24)\n            }\n            /// @src 7:5290:5318  \"new ProxyAdmin(initialOwner)\"\n            datacopy(_5, dataoffset(\"ProxyAdmin_594\"), _6)\n            /// @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n            mstore(_7, and(value1, sub(shl(160, 1), 1)))\n            /// @src 7:5290:5318  \"new ProxyAdmin(initialOwner)\"\n            let expr_address := create(/** @src -1:-1:-1 */ 0, /** @src 7:5290:5318  \"new ProxyAdmin(initialOwner)\" */ _5, add(sub(/** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ _7, /** @src 7:5290:5318  \"new ProxyAdmin(initialOwner)\" */ _5), /** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ 32))\n            /// @src 7:5290:5318  \"new ProxyAdmin(initialOwner)\"\n            if iszero(expr_address)\n            {\n                /// @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                let pos := mload(64)\n                returndatacopy(pos, /** @src -1:-1:-1 */ 0, /** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ returndatasize())\n                revert(pos, returndatasize())\n            }\n            let _8 := and(/** @src 7:5282:5319  \"address(new ProxyAdmin(initialOwner))\" */ expr_address, /** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ sub(shl(160, 1), 1))\n            /// @src 7:5273:5319  \"_admin = address(new ProxyAdmin(initialOwner))\"\n            mstore(128, /** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ _8)\n            /// @src 3:2868:2934  \"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\"\n            let _9 := sload(0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103)\n            /// @src 3:3890:3933  \"IERC1967.AdminChanged(getAdmin(), newAdmin)\"\n            let _10 := /** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ mload(64)\n            mstore(_10, and(_9, sub(shl(160, 1), 1)))\n            mstore(add(_10, 32), _8)\n            /// @src 3:3890:3933  \"IERC1967.AdminChanged(getAdmin(), newAdmin)\"\n            log1(_10, /** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ 64, /** @src 3:3890:3933  \"IERC1967.AdminChanged(getAdmin(), newAdmin)\" */ 0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f)\n            /// @src 3:3545:3636  \"if (newAdmin == address(0)) {...\"\n            if /** @src 3:3549:3571  \"newAdmin == address(0)\" */ iszero(/** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ _8)\n            /// @src 3:3545:3636  \"if (newAdmin == address(0)) {...\"\n            {\n                /// @src 3:3594:3625  \"ERC1967InvalidAdmin(address(0))\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 3:3594:3625  \"ERC1967InvalidAdmin(address(0))\" */ shl(225, 0x3173bdd1))\n                /// @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                mstore(/** @src 3:3594:3625  \"ERC1967InvalidAdmin(address(0))\" */ 4, /** @src -1:-1:-1 */ 0)\n                /// @src 3:3594:3625  \"ERC1967InvalidAdmin(address(0))\"\n                revert(/** @src -1:-1:-1 */ 0, /** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ 36)\n            }\n            sstore(/** @src 3:2868:2934  \"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\" */ 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103, /** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ or(and(_9, not(sub(shl(160, 1), 1))), _8))\n            let _11 := mload(64)\n            let _12 := datasize(\"TransparentUpgradeableProxy_730_deployed\")\n            codecopy(_11, dataoffset(\"TransparentUpgradeableProxy_730_deployed\"), _12)\n            setimmutable(_11, \"621\", mload(/** @src 7:5273:5319  \"_admin = address(new ProxyAdmin(initialOwner))\" */ 128))\n            /// @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n            return(_11, _12)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        function abi_decode_address_fromMemory(offset) -> value\n        {\n            value := mload(offset)\n            if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        }\n        function array_allocation_size_bytes(length) -> size\n        {\n            if gt(length, sub(shl(64, 1), 1))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            size := add(and(add(length, 31), not(31)), 0x20)\n        }\n        /// @ast-id 946 @src 8:4421:5003  \"function verifyCallResultFromTarget(...\"\n        function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos) -> var_mpos\n        {\n            /// @src 8:4565:4577  \"bytes memory\"\n            var_mpos := /** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ 96\n            /// @src 8:4589:4997  \"if (!success) {...\"\n            switch /** @src 8:4593:4601  \"!success\" */ iszero(var_success)\n            case /** @src 8:4589:4997  \"if (!success) {...\" */ 0 {\n                /// @src 8:4841:4890  \"returndata.length == 0 && target.code.length == 0\"\n                let expr := /** @src 8:4841:4863  \"returndata.length == 0\" */ iszero(/** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ mload(/** @src 8:4841:4858  \"returndata.length\" */ var_returndata_mpos))\n                /// @src 8:4841:4890  \"returndata.length == 0 && target.code.length == 0\"\n                if expr\n                {\n                    expr := /** @src 8:4867:4890  \"target.code.length == 0\" */ iszero(/** @src 8:4867:4885  \"target.code.length\" */ extcodesize(var_target))\n                }\n                /// @src 8:4837:4956  \"if (returndata.length == 0 && target.code.length == 0) {...\"\n                if expr\n                {\n                    /// @src 8:4917:4941  \"AddressEmptyCode(target)\"\n                    mstore(/** @src 8:4862:4863  \"0\" */ 0x00, /** @src 8:4917:4941  \"AddressEmptyCode(target)\" */ shl(224, 0x9996b315))\n                    /// @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                    mstore(/** @src 8:4917:4941  \"AddressEmptyCode(target)\" */ 4, /** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ and(var_target, sub(shl(160, 1), 1)))\n                    /// @src 8:4917:4941  \"AddressEmptyCode(target)\"\n                    revert(/** @src 8:4862:4863  \"0\" */ 0x00, /** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ 36)\n                }\n                /// @src 8:4969:4986  \"return returndata\"\n                var_mpos := var_returndata_mpos\n                leave\n            }\n            default /// @src 8:4589:4997  \"if (!success) {...\"\n            {\n                /// @src 8:5670:6024  \"if (returndata.length > 0) {...\"\n                switch /** @src 8:5674:5695  \"returndata.length > 0\" */ iszero(iszero(/** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ mload(/** @src 8:5674:5691  \"returndata.length\" */ var_returndata_mpos)))\n                case /** @src 8:5670:6024  \"if (returndata.length > 0) {...\" */ 0 {\n                    /// @src 8:5994:6013  \"Errors.FailedCall()\"\n                    mstore(/** @src 8:5694:5695  \"0\" */ 0x00, /** @src 8:5994:6013  \"Errors.FailedCall()\" */ shl(224, 0xd6bda275))\n                    revert(/** @src 8:5694:5695  \"0\" */ 0x00, /** @src 8:5994:6013  \"Errors.FailedCall()\" */ 4)\n                }\n                default /// @src 8:5670:6024  \"if (returndata.length > 0) {...\"\n                {\n                    /// @src 8:5799:5957  \"assembly (\\\"memory-safe\\\") {...\"\n                    revert(add(32, var_returndata_mpos), mload(var_returndata_mpos))\n                }\n            }\n        }\n    }\n    /// @use-src 2:\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\", 3:\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\", 4:\"@openzeppelin/contracts/proxy/Proxy.sol\", 7:\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\", 8:\"@openzeppelin/contracts/utils/Address.sol\", 11:\"@openzeppelin/contracts/utils/StorageSlot.sol\"\n    object \"TransparentUpgradeableProxy_730_deployed\" {\n        code {\n            {\n                /// @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                mstore(64, 128)\n                /// @src 7:5812:6118  \"if (msg.sender == _proxyAdmin()) {...\"\n                switch /** @src 7:5816:5843  \"msg.sender == _proxyAdmin()\" */ eq(/** @src 7:5816:5826  \"msg.sender\" */ caller(), /** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ and(/** @src 7:5600:5606  \"_admin\" */ loadimmutable(\"621\"), /** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ sub(shl(160, 1), 1)))\n                case /** @src 7:5812:6118  \"if (msg.sender == _proxyAdmin()) {...\" */ 0 {\n                    /// @src 3:811:877  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\"\n                    let value := /** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ and(/** @src 3:811:877  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ sload(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc), /** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ sub(shl(160, 1), 1))\n                    /// @src 4:1019:1838  \"assembly {...\"\n                    calldatacopy(/** @src -1:-1:-1 */ 0, 0, /** @src 4:1019:1838  \"assembly {...\" */ calldatasize())\n                    let usr$result := delegatecall(gas(), value, /** @src -1:-1:-1 */ 0, /** @src 4:1019:1838  \"assembly {...\" */ calldatasize(), /** @src -1:-1:-1 */ 0, 0)\n                    /// @src 4:1019:1838  \"assembly {...\"\n                    returndatacopy(/** @src -1:-1:-1 */ 0, 0, /** @src 4:1019:1838  \"assembly {...\" */ returndatasize())\n                    switch usr$result\n                    case 0 {\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 4:1019:1838  \"assembly {...\" */ returndatasize())\n                    }\n                    default {\n                        return(/** @src -1:-1:-1 */ 0, /** @src 4:1019:1838  \"assembly {...\" */ returndatasize())\n                    }\n                }\n                default /// @src 7:5812:6118  \"if (msg.sender == _proxyAdmin()) {...\"\n                {\n                    /// @src 7:5859:6060  \"if (msg.sig != ITransparentUpgradeableProxy.upgradeToAndCall.selector) {...\"\n                    switch /** @src 7:5863:5928  \"msg.sig != ITransparentUpgradeableProxy.upgradeToAndCall.selector\" */ iszero(eq(/** @src 7:5863:5870  \"msg.sig\" */ and(calldataload(0), shl(224, 0xffffffff)), /** @src 7:5874:5928  \"ITransparentUpgradeableProxy.upgradeToAndCall.selector\" */ shl(225, 0x278f7943)))\n                    case /** @src 7:5859:6060  \"if (msg.sig != ITransparentUpgradeableProxy.upgradeToAndCall.selector) {...\" */ 0 {\n                        fun_dispatchUpgradeToAndCall()\n                    }\n                    default {\n                        /// @src 7:5955:5979  \"ProxyDeniedAdminAccess()\"\n                        mstore(/** @src 7:5863:5870  \"msg.sig\" */ 0, /** @src 7:5955:5979  \"ProxyDeniedAdminAccess()\" */ shl(226, 0x34ad5dbb))\n                        revert(/** @src 7:5863:5870  \"msg.sig\" */ 0, /** @src 7:5955:5979  \"ProxyDeniedAdminAccess()\" */ 4)\n                    }\n                }\n                /// @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                stop()\n            }\n            function panic_error_0x41()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            function allocate_memory(size) -> memPtr\n            {\n                memPtr := mload(64)\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function array_allocation_size_bytes(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                size := add(and(add(length, 31), not(31)), 0x20)\n            }\n            /// @ast-id 729 @src 7:6326:6543  \"function _dispatchUpgradeToAndCall() private {...\"\n            function fun_dispatchUpgradeToAndCall()\n            {\n                /// @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                if gt(/** @src 7:6450:6451  \"4\" */ 0x04, /** @src 7:6441:6449  \"msg.data\" */ calldatasize())\n                /// @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                {\n                    revert(/** @src 7:6441:6449  \"msg.data\" */ 0, 0)\n                }\n                /// @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                if slt(add(/** @src 7:6441:6449  \"msg.data\" */ calldatasize(), /** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ not(3)), 64)\n                {\n                    revert(/** @src 7:6441:6449  \"msg.data\" */ 0, 0)\n                }\n                /// @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                let value := calldataload(/** @src 7:6450:6451  \"4\" */ 0x04)\n                /// @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                let _1 := and(value, sub(shl(160, 1), 1))\n                if iszero(eq(value, _1))\n                {\n                    revert(/** @src 7:6441:6449  \"msg.data\" */ 0, 0)\n                }\n                /// @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                let offset := calldataload(36)\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert(/** @src 7:6441:6449  \"msg.data\" */ 0, 0)\n                }\n                /// @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                if iszero(slt(add(offset, 35), /** @src 7:6441:6449  \"msg.data\" */ calldatasize()))\n                /// @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                {\n                    revert(/** @src 7:6441:6449  \"msg.data\" */ 0, 0)\n                }\n                /// @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                let length := calldataload(add(/** @src 7:6450:6451  \"4\" */ 0x04, /** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ offset))\n                let array := allocate_memory(array_allocation_size_bytes(length))\n                mstore(array, length)\n                if gt(add(add(offset, length), 36), /** @src 7:6441:6449  \"msg.data\" */ calldatasize())\n                /// @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                {\n                    revert(/** @src 7:6441:6449  \"msg.data\" */ 0, 0)\n                }\n                /// @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                calldatacopy(add(array, 32), add(offset, 36), length)\n                mstore(add(add(array, length), 32), /** @src 7:6441:6449  \"msg.data\" */ 0)\n                /// @src 7:6531:6535  \"data\"\n                fun_upgradeToAndCall(/** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ _1, /** @src 7:6531:6535  \"data\" */ array)\n            }\n            /// @ast-id 315 @src 3:2264:2608  \"function upgradeToAndCall(address newImplementation, bytes memory data) internal {...\"\n            function fun_upgradeToAndCall(var_newImplementation, var_data_284_mpos)\n            {\n                /// @src 3:1744:1863  \"if (newImplementation.code.length == 0) {...\"\n                if /** @src 3:1748:1782  \"newImplementation.code.length == 0\" */ iszero(/** @src 3:1748:1777  \"newImplementation.code.length\" */ extcodesize(var_newImplementation))\n                /// @src 3:1744:1863  \"if (newImplementation.code.length == 0) {...\"\n                {\n                    /// @src 3:1805:1852  \"ERC1967InvalidImplementation(newImplementation)\"\n                    mstore(/** @src 3:1781:1782  \"0\" */ 0x00, /** @src 3:1805:1852  \"ERC1967InvalidImplementation(newImplementation)\" */ shl(224, 0x4c9c8ce3))\n                    /// @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                    mstore(/** @src 3:1805:1852  \"ERC1967InvalidImplementation(newImplementation)\" */ 4, /** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ and(var_newImplementation, sub(shl(160, 1), 1)))\n                    /// @src 3:1805:1852  \"ERC1967InvalidImplementation(newImplementation)\"\n                    revert(/** @src 3:1781:1782  \"0\" */ 0x00, /** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ 36)\n                }\n                let _1 := and(var_newImplementation, sub(shl(160, 1), 1))\n                sstore(/** @src 3:811:877  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc, /** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ or(and(sload(/** @src 3:811:877  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc), /** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ shl(160, 0xffffffffffffffffffffffff)), _1))\n                /// @src 3:2407:2443  \"IERC1967.Upgraded(newImplementation)\"\n                log2(/** @src 3:1781:1782  \"0\" */ 0x00, 0x00, /** @src 3:2407:2443  \"IERC1967.Upgraded(newImplementation)\" */ 0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b, _1)\n                /// @src 3:2454:2602  \"if (data.length > 0) {...\"\n                switch /** @src 3:2458:2473  \"data.length > 0\" */ iszero(iszero(/** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ mload(/** @src 3:2458:2469  \"data.length\" */ var_data_284_mpos)))\n                case /** @src 3:2454:2602  \"if (data.length > 0) {...\" */ 0 {\n                    /// @src 3:6159:6229  \"if (msg.value > 0) {...\"\n                    if /** @src 3:6163:6176  \"msg.value > 0\" */ iszero(iszero(/** @src 3:6163:6172  \"msg.value\" */ callvalue()))\n                    /// @src 3:6159:6229  \"if (msg.value > 0) {...\"\n                    {\n                        /// @src 3:6199:6218  \"ERC1967NonPayable()\"\n                        mstore(/** @src 3:1781:1782  \"0\" */ 0x00, /** @src 3:6199:6218  \"ERC1967NonPayable()\" */ shl(224, 0xb398979f))\n                        revert(/** @src 3:1781:1782  \"0\" */ 0x00, /** @src 3:6199:6218  \"ERC1967NonPayable()\" */ 4)\n                    }\n                }\n                default /// @src 3:2454:2602  \"if (data.length > 0) {...\"\n                {\n                    /// @src 3:2489:2542  \"Address.functionDelegateCall(newImplementation, data)\"\n                    pop(fun_functionDelegateCall(var_newImplementation, var_data_284_mpos))\n                }\n            }\n            /// @ast-id 906 @src 8:3900:4153  \"function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {...\"\n            function fun_functionDelegateCall(var_target, var_data_mpos) -> var_mpos\n            {\n                /// @src 8:4049:4074  \"target.delegatecall(data)\"\n                let expr_component := delegatecall(gas(), var_target, add(var_data_mpos, 0x20), mload(var_data_mpos), 0, 0)\n                let data := 0\n                /// @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _1 := returndatasize()\n                    let memPtr := allocate_memory(array_allocation_size_bytes(_1))\n                    mstore(memPtr, _1)\n                    data := memPtr\n                    returndatacopy(add(memPtr, /** @src 8:4049:4074  \"target.delegatecall(data)\" */ 0x20), 0, /** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ returndatasize())\n                }\n                /// @src 8:4084:4146  \"return verifyCallResultFromTarget(target, success, returndata)\"\n                var_mpos := /** @src 8:4091:4146  \"verifyCallResultFromTarget(target, success, returndata)\" */ fun_verifyCallResultFromTarget(var_target, expr_component, /** @src 8:4049:4074  \"target.delegatecall(data)\" */ data)\n            }\n            /// @ast-id 946 @src 8:4421:5003  \"function verifyCallResultFromTarget(...\"\n            function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos) -> var__mpos\n            {\n                /// @src 8:4565:4577  \"bytes memory\"\n                var__mpos := /** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ 96\n                /// @src 8:4589:4997  \"if (!success) {...\"\n                switch /** @src 8:4593:4601  \"!success\" */ iszero(var_success)\n                case /** @src 8:4589:4997  \"if (!success) {...\" */ 0 {\n                    /// @src 8:4841:4890  \"returndata.length == 0 && target.code.length == 0\"\n                    let expr := /** @src 8:4841:4863  \"returndata.length == 0\" */ iszero(/** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ mload(/** @src 8:4841:4858  \"returndata.length\" */ var_returndata_mpos))\n                    /// @src 8:4841:4890  \"returndata.length == 0 && target.code.length == 0\"\n                    if expr\n                    {\n                        expr := /** @src 8:4867:4890  \"target.code.length == 0\" */ iszero(/** @src 8:4867:4885  \"target.code.length\" */ extcodesize(var_target))\n                    }\n                    /// @src 8:4837:4956  \"if (returndata.length == 0 && target.code.length == 0) {...\"\n                    if expr\n                    {\n                        /// @src 8:4917:4941  \"AddressEmptyCode(target)\"\n                        mstore(/** @src 8:4862:4863  \"0\" */ 0x00, /** @src 8:4917:4941  \"AddressEmptyCode(target)\" */ shl(224, 0x9996b315))\n                        /// @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                        mstore(/** @src 8:4917:4941  \"AddressEmptyCode(target)\" */ 4, /** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ and(var_target, sub(shl(160, 1), 1)))\n                        /// @src 8:4917:4941  \"AddressEmptyCode(target)\"\n                        revert(/** @src 8:4862:4863  \"0\" */ 0x00, /** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ 36)\n                    }\n                    /// @src 8:4969:4986  \"return returndata\"\n                    var__mpos := var_returndata_mpos\n                    leave\n                }\n                default /// @src 8:4589:4997  \"if (!success) {...\"\n                {\n                    /// @src 8:5670:6024  \"if (returndata.length > 0) {...\"\n                    switch /** @src 8:5674:5695  \"returndata.length > 0\" */ iszero(iszero(/** @src 7:4314:6545  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ mload(/** @src 8:5674:5691  \"returndata.length\" */ var_returndata_mpos)))\n                    case /** @src 8:5670:6024  \"if (returndata.length > 0) {...\" */ 0 {\n                        /// @src 8:5994:6013  \"Errors.FailedCall()\"\n                        mstore(/** @src 8:5694:5695  \"0\" */ 0x00, /** @src 8:5994:6013  \"Errors.FailedCall()\" */ shl(224, 0xd6bda275))\n                        revert(/** @src 8:5694:5695  \"0\" */ 0x00, /** @src 8:5994:6013  \"Errors.FailedCall()\" */ 4)\n                    }\n                    default /// @src 8:5670:6024  \"if (returndata.length > 0) {...\"\n                    {\n                        /// @src 8:5799:5957  \"assembly (\\\"memory-safe\\\") {...\"\n                        revert(add(32, var_returndata_mpos), mload(var_returndata_mpos))\n                    }\n                }\n            }\n        }\n        data \".metadata\" hex\"a164736f6c634300081c000a\"\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 6:\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\", 9:\"@openzeppelin/contracts/utils/Context.sol\"\n    object \"ProxyAdmin_594\" {\n        code {\n            {\n                /// @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\"\n                let _1 := memoryguard(0x80)\n                if callvalue() { revert(0, 0) }\n                let programSize := datasize(\"ProxyAdmin_594\")\n                let argSize := sub(codesize(), programSize)\n                let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n                if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n                codecopy(_1, programSize, argSize)\n                if slt(sub(add(_1, argSize), _1), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\"\n                let value := mload(_1)\n                let _2 := and(value, sub(shl(160, 1), 1))\n                if iszero(eq(value, _2))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:1269:1364  \"if (initialOwner == address(0)) {...\"\n                if /** @src 0:1273:1299  \"initialOwner == address(0)\" */ iszero(/** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ _2)\n                /// @src 0:1269:1364  \"if (initialOwner == address(0)) {...\"\n                {\n                    /// @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\" */ shl(224, 0x1e4fbdf7))\n                    /// @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\"\n                    mstore(/** @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\" */ 4, /** @src -1:-1:-1 */ 0)\n                    /// @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ 36)\n                }\n                let _3 := sload(/** @src -1:-1:-1 */ 0)\n                /// @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\"\n                sstore(/** @src -1:-1:-1 */ 0, /** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ or(and(_3, not(sub(shl(160, 1), 1))), _2))\n                /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                let _4 := /** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ mload(64)\n                /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                log3(/** @src -1:-1:-1 */ 0, 0, /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ and(_3, sub(shl(160, 1), 1)), /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ _2)\n                /// @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\"\n                let _5 := datasize(\"ProxyAdmin_594_deployed\")\n                codecopy(_4, dataoffset(\"ProxyAdmin_594_deployed\"), _5)\n                return(_4, _5)\n            }\n        }\n        /// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 6:\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\", 9:\"@openzeppelin/contracts/utils/Context.sol\"\n        object \"ProxyAdmin_594_deployed\" {\n            code {\n                {\n                    /// @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\"\n                    mstore(64, memoryguard(0x80))\n                    if iszero(lt(calldatasize(), 4))\n                    {\n                        let _1 := 0\n                        switch shr(224, calldataload(_1))\n                        case 0x715018a6 {\n                            if callvalue() { revert(_1, _1) }\n                            if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                            /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                            fun_checkOwner()\n                            /// @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\"\n                            let _2 := sload(_1)\n                            sstore(_1, and(_2, shl(160, 0xffffffffffffffffffffffff)))\n                            /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                            log3(/** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ _1, _1, /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ and(_2, sub(shl(160, 1), 1)), _1)\n                            return(_1, _1)\n                        }\n                        case 0x8da5cb5b {\n                            if callvalue() { revert(_1, _1) }\n                            if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                            let value := and(sload(_1), sub(shl(160, 1), 1))\n                            let memPos := mload(64)\n                            mstore(memPos, value)\n                            return(memPos, 32)\n                        }\n                        case 0x9623609d {\n                            if slt(add(calldatasize(), not(3)), 96) { revert(_1, _1) }\n                            let value_1 := calldataload(4)\n                            let _3 := and(value_1, sub(shl(160, 1), 1))\n                            if iszero(eq(value_1, _3)) { revert(_1, _1) }\n                            let value_2 := _1\n                            value_2 := calldataload(36)\n                            let _4 := and(value_2, sub(shl(160, 1), 1))\n                            if iszero(eq(value_2, _4)) { revert(_1, _1) }\n                            let offset := calldataload(68)\n                            if gt(offset, 0xffffffffffffffff) { revert(_1, _1) }\n                            if iszero(slt(add(offset, 35), calldatasize())) { revert(_1, _1) }\n                            let length := calldataload(add(4, offset))\n                            let size := _1\n                            if gt(length, 0xffffffffffffffff)\n                            {\n                                mstore(_1, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(_1, 36)\n                            }\n                            size := add(and(add(length, 31), not(31)), 32)\n                            let memPtr := mload(64)\n                            finalize_allocation(memPtr, size)\n                            mstore(memPtr, length)\n                            if gt(add(add(offset, length), 36), calldatasize()) { revert(_1, _1) }\n                            calldatacopy(add(memPtr, 32), add(offset, 36), length)\n                            mstore(add(add(memPtr, length), 32), _1)\n                            /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                            fun_checkOwner()\n                            /// @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\"\n                            if iszero(extcodesize(_3))\n                            {\n                                /// @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\"\n                                revert(_1, _1)\n                            }\n                            /// @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\"\n                            let _5 := /** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ mload(64)\n                            /// @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\"\n                            mstore(_5, /** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ shl(225, 0x278f7943))\n                            mstore(/** @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\" */ add(_5, /** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ 4), _4)\n                            mstore(add(/** @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\" */ _5, /** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ 36), 64)\n                            /// @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\"\n                            let _6 := call(gas(), _3, /** @src 6:1923:1932  \"msg.value\" */ callvalue(), /** @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\" */ _5, sub(/** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ abi_encode_string(memPtr, add(/** @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\" */ _5, /** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ 68)), /** @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\" */ _5), _5, /** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ _1)\n                            /// @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\"\n                            if iszero(_6)\n                            {\n                                /// @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\"\n                                let pos := mload(64)\n                                returndatacopy(pos, _1, returndatasize())\n                                revert(pos, returndatasize())\n                            }\n                            /// @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\"\n                            if _6\n                            {\n                                finalize_allocation(_5, /** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ _1)\n                                _1 := _1\n                            }\n                            return(_1, _1)\n                        }\n                        case 0xad3cb1cc {\n                            if callvalue() { revert(_1, _1) }\n                            if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                            let size_1 := /** @src -1:-1:-1 */ _1\n                            /// @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\"\n                            let _7 := _1\n                            _7 := /** @src -1:-1:-1 */ _1\n                            /// @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\"\n                            size_1 := 64\n                            let memPtr_1 := mload(64)\n                            finalize_allocation(memPtr_1, 64)\n                            mstore(memPtr_1, 5)\n                            mstore(add(memPtr_1, 32), \"5.0.0\")\n                            let memPos_1 := mload(64)\n                            mstore(memPos_1, 32)\n                            return(memPos_1, sub(abi_encode_string(memPtr_1, add(memPos_1, 32)), memPos_1))\n                        }\n                        case 0xf2fde38b {\n                            if callvalue() { revert(_1, _1) }\n                            if slt(add(calldatasize(), not(3)), 32) { revert(_1, _1) }\n                            let value_3 := /** @src -1:-1:-1 */ _1\n                            /// @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\"\n                            value_3 := calldataload(4)\n                            let _8 := and(value_3, sub(shl(160, 1), 1))\n                            if iszero(eq(value_3, _8)) { revert(_1, _1) }\n                            /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                            fun_checkOwner()\n                            /// @src 0:2623:2714  \"if (newOwner == address(0)) {...\"\n                            if /** @src 0:2627:2649  \"newOwner == address(0)\" */ iszero(/** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ _8)\n                            /// @src 0:2623:2714  \"if (newOwner == address(0)) {...\"\n                            {\n                                /// @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                mstore(/** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ _1, /** @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\" */ shl(224, 0x1e4fbdf7))\n                                /// @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\"\n                                mstore(4, _1)\n                                /// @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                revert(/** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ _1, 36)\n                            }\n                            let _9 := sload(/** @src 0:3004:3010  \"_owner\" */ _1)\n                            /// @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\"\n                            sstore(/** @src 0:3004:3010  \"_owner\" */ _1, /** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ or(and(_9, shl(160, 0xffffffffffffffffffffffff)), _8))\n                            /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                            log3(/** @src 0:3004:3010  \"_owner\" */ _1, _1, /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ and(_9, sub(shl(160, 1), 1)), /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ _8)\n                            /// @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\"\n                            return(_1, _1)\n                        }\n                    }\n                    revert(0, 0)\n                }\n                function finalize_allocation(memPtr, size)\n                {\n                    let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                    if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                }\n                function abi_encode_string(value, pos) -> end\n                {\n                    let length := mload(value)\n                    mstore(pos, length)\n                    let i := 0\n                    for { } lt(i, length) { i := add(i, 0x20) }\n                    {\n                        mstore(add(add(pos, i), 0x20), mload(add(add(value, i), 0x20)))\n                    }\n                    mstore(add(add(pos, length), 0x20), 0)\n                    end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n                }\n                /// @ast-id 84 @src 0:1796:1958  \"function _checkOwner() internal view virtual {...\"\n                function fun_checkOwner()\n                {\n                    /// @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\"\n                    let value := and(sload(/** @src 0:1710:1716  \"_owner\" */ 0x00), /** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ sub(shl(160, 1), 1))\n                    /// @src 0:1851:1952  \"if (owner() != _msgSender()) {...\"\n                    if /** @src 0:1855:1878  \"owner() != _msgSender()\" */ iszero(eq(/** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ value, /** @src 9:735:745  \"msg.sender\" */ caller()))\n                    /// @src 0:1851:1952  \"if (owner() != _msgSender()) {...\"\n                    {\n                        /// @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                        mstore(/** @src 0:1710:1716  \"_owner\" */ 0x00, /** @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ shl(224, 0x118cdaa7))\n                        /// @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\"\n                        mstore(/** @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ 4, /** @src 9:735:745  \"msg.sender\" */ caller())\n                        /// @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                        revert(/** @src 0:1710:1716  \"_owner\" */ 0x00, /** @src 6:502:1964  \"contract ProxyAdmin is Ownable {...\" */ 36)\n                    }\n                }\n            }\n            data \".metadata\" hex\"a164736f6c634300081c000a\"\n        }\n    }\n}\n","metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProxyDeniedAdminAccess\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that is upgradeable through an associated {ProxyAdmin} instance. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches the {ITransparentUpgradeableProxy-upgradeToAndCall} function exposed by the proxy itself. 2. If the admin calls the proxy, it can call the `upgradeToAndCall` function but any other call won't be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error indicating the proxy admin cannot fallback to the target implementation. These properties mean that the admin account can only be used for upgrading the proxy, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. For this reason, the proxy deploys an instance of {ProxyAdmin} and allows upgrades only if they come through it. You should think of the `ProxyAdmin` instance as the administrative interface of the proxy, including the ability to change who can trigger upgrades by transferring ownership. NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not inherit from that interface, and instead `upgradeToAndCall` is implicitly implemented using a custom dispatch mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to fully implement transparency without decoding reverts caused by selector clashes between the proxy and the implementation. NOTE: This proxy does not inherit from {Context} deliberately. The {ProxyAdmin} of this contract won't send a meta-transaction in any way, and any other meta-transaction setup should be made in the implementation contract. IMPORTANT: This contract avoids unnecessary storage reads by setting the admin only during construction as an immutable variable, preventing any changes thereafter. However, the admin slot defined in ERC-1967 can still be overwritten by the implementation logic pointed to by this proxy. In such cases, the contract may end up in an undesirable state where the admin slot is different from the actual admin. Relying on the value of the admin slot is generally fine if the implementation is trusted. WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the compiler will not check that there are no selector conflicts, due to the note above. A selector clash between any new function and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This could render the `upgradeToAndCall` function inaccessible, preventing upgradeability and compromising transparency.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"ProxyDeniedAdminAccess()\":[{\"details\":\"The proxy caller is the current admin, and can't fallback to the proxy target.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes an upgradeable proxy managed by an instance of a {ProxyAdmin} with an `initialOwner`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":\"TransparentUpgradeableProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0x0a8a5b994d4c4da9f61d128945cc8c9e60dcbc72bf532f72ae42a48ea90eed9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e63ae15b6b1079b9d3c73913424d4278139f9e9c9658316675b9c48d5883a50d\",\"dweb:/ipfs/QmWLxBYfp8j1YjNMabWgv75ELTaK2eEYEEGx7qsJbxVZZq\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":{\"keccak256\":\"0xeb19221d51578ea190f0b7d807c5f196db6ff4eca90fee396f45ce9669080ba0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e4ca4196dab20274d1276d902d17034065f014aeebf496f20e39e760899650b0\",\"dweb:/ipfs/QmXFoF93GmZgZHbUvSqLjBGnQ3MY429Bnvk7SvLKEUsEAN\"]},\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x724b755843cff10a8e1503d374b857c9e7648be24e7acf1e5bee0584f1b0505c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740ad3ba1c12e426ea32cf234f445431a13efa8dbed38b53c869237e31fc8347\",\"dweb:/ipfs/QmQ3UKUnBQn4gjxjDNGuDLQWuQqcxWzyj1HzwjFgjAJBqh\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"}],"devdoc":{"details":"Collection of functions related to the address type","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}]},"kind":"dev","methods":{},"version":1},"evm":{"assembly":"    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa164736f6c634300081c000a\n}\n","bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760119081601d823930815050f35b600080fdfe600080fdfea164736f6c634300081c000a","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x11 SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP ","sourceMap":"233:5799:8:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea164736f6c634300081c000a","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP ","sourceMap":"233:5799:8:-:0;;"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 8:\"@openzeppelin/contracts/utils/Address.sol\"\nobject \"Address_989\" {\n    code {\n        {\n            /// @src 8:233:6032  \"library Address {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Address_989_deployed\")\n            codecopy(_1, dataoffset(\"Address_989_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 8:\"@openzeppelin/contracts/utils/Address.sol\"\n    object \"Address_989_deployed\" {\n        code {\n            {\n                /// @src 8:233:6032  \"library Address {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a164736f6c634300081c000a\"\n    }\n}\n","metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"assembly":"","bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"irOptimized":"","metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Errors.sol":{"Errors":{"abi":[{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"MissingPrecompile","type":"error"}],"devdoc":{"details":"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._","errors":{"FailedCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"FailedDeployment()":[{"details":"The deployment failed."}],"InsufficientBalance(uint256,uint256)":[{"details":"The ETH balance of the account is not enough to perform the operation."}],"MissingPrecompile(address)":[{"details":"A necessary precompile is missing."}]},"kind":"dev","methods":{},"version":1},"evm":{"assembly":"    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa164736f6c634300081c000a\n}\n","bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760119081601d823930815050f35b600080fdfe600080fdfea164736f6c634300081c000a","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x11 SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP ","sourceMap":"411:484:10:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea164736f6c634300081c000a","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP ","sourceMap":"411:484:10:-:0;;"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 10:\"@openzeppelin/contracts/utils/Errors.sol\"\nobject \"Errors_1041\" {\n    code {\n        {\n            /// @src 10:411:895  \"library Errors {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Errors_1041_deployed\")\n            codecopy(_1, dataoffset(\"Errors_1041_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 10:\"@openzeppelin/contracts/utils/Errors.sol\"\n    object \"Errors_1041_deployed\" {\n        code {\n            {\n                /// @src 10:411:895  \"library Errors {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a164736f6c634300081c000a\"\n    }\n}\n","metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"devdoc":{"details":"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.","kind":"dev","methods":{},"version":1},"evm":{"assembly":"    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa164736f6c634300081c000a\n}\n","bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760119081601d823930815050f35b600080fdfe600080fdfea164736f6c634300081c000a","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x11 SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP ","sourceMap":"1407:2774:11:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea164736f6c634300081c000a","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP ","sourceMap":"1407:2774:11:-:0;;"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 11:\"@openzeppelin/contracts/utils/StorageSlot.sol\"\nobject \"StorageSlot_1165\" {\n    code {\n        {\n            /// @src 11:1407:4181  \"library StorageSlot {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"StorageSlot_1165_deployed\")\n            codecopy(_1, dataoffset(\"StorageSlot_1165_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 11:\"@openzeppelin/contracts/utils/StorageSlot.sol\"\n    object \"StorageSlot_1165_deployed\" {\n        code {\n            {\n                /// @src 11:1407:4181  \"library StorageSlot {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a164736f6c634300081c000a\"\n    }\n}\n","metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/proxy/DmtpProxy.sol":{"DmtpProxy":{"abi":[{"inputs":[{"internalType":"address","name":"_logic","type":"address"},{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"payable","type":"constructor"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"ERC1967InvalidAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"ProxyDeniedAdminAccess","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"stateMutability":"payable","type":"fallback"}],"devdoc":{"details":"This contract implements a proxy that is upgradeable through an associated {ProxyAdmin} instance. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches the {ITransparentUpgradeableProxy-upgradeToAndCall} function exposed by the proxy itself. 2. If the admin calls the proxy, it can call the `upgradeToAndCall` function but any other call won't be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error indicating the proxy admin cannot fallback to the target implementation. These properties mean that the admin account can only be used for upgrading the proxy, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. For this reason, the proxy deploys an instance of {ProxyAdmin} and allows upgrades only if they come through it. You should think of the `ProxyAdmin` instance as the administrative interface of the proxy, including the ability to change who can trigger upgrades by transferring ownership. NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not inherit from that interface, and instead `upgradeToAndCall` is implicitly implemented using a custom dispatch mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to fully implement transparency without decoding reverts caused by selector clashes between the proxy and the implementation. NOTE: This proxy does not inherit from {Context} deliberately. The {ProxyAdmin} of this contract won't send a meta-transaction in any way, and any other meta-transaction setup should be made in the implementation contract. IMPORTANT: This contract avoids unnecessary storage reads by setting the admin only during construction as an immutable variable, preventing any changes thereafter. However, the admin slot defined in ERC-1967 can still be overwritten by the implementation logic pointed to by this proxy. In such cases, the contract may end up in an undesirable state where the admin slot is different from the actual admin. Relying on the value of the admin slot is generally fine if the implementation is trusted. WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the compiler will not check that there are no selector conflicts, due to the note above. A selector clash between any new function and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This could render the `upgradeToAndCall` function inaccessible, preventing upgradeability and compromising transparency.","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ERC1967InvalidAdmin(address)":[{"details":"The `admin` of the proxy is invalid."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"FailedCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"ProxyDeniedAdminAccess()":[{"details":"The proxy caller is the current admin, and can't fallback to the proxy target."}]},"events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"constructor":{"details":"Initializes an upgradeable proxy managed by an instance of a {ProxyAdmin} with an `initialOwner`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}."}},"version":1},"evm":{"assembly":"    /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n  mstore(0x40, 0xa0)\n  bytecodeSize\n  0x40\n  dup2\n  codesize\n  sub\n  swap2\n  dup3\n  tag_4\n  dup2\n  tag_1\n  jump\t// in\ntag_4:\n  swap4\n  dup5\n  swap3\n  dup4\n  codecopy\n  dup2\n  add\n  sub\n  slt\n  tag_5\n  jumpi\n  tag_7\n  0x20\n  tag_8\n  dup4\n  tag_2\n  jump\t// in\ntag_8:\n  swap3\n  add\n  tag_2\n  jump\t// in\ntag_7:\n  0x20\n  swap2\n  tag_9\n  dup4\n  tag_1\n  jump\t// in\ntag_9:\n  0x00\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1777  newImplementation.code.length */\n  dup2\n  extcodesize\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1782  newImplementation.code.length == 0 */\n  iszero\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  and\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2407:2443  IERC1967.Upgraded(newImplementation) */\n  0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n  0x00\n  dup1\n  log2\n    /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n  dup1\n  mload\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2473  data.length > 0 */\n  iszero\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2469  data.length */\n  tag_12\n  jumpi\n  0x00\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4074  target.delegatecall(data) */\n  dup2\n  dup6\n  dup3\n  swap4\n  mload\n  swap2\n  add\n  dup5\n  gas\n  delegatecall\n    /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n  jumpi(tag_14, iszero(returndatasize))\n  returndatasize\n  swap1\n  sub(shl(0x40, 0x01), 0x01)\n  dup3\n  gt\n  tag_22\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n  tag_18\n  swap3\n    /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n  tag_19\n  0x1f\n  dup5\n  add\n  not(0x1f)\n  and\n  dup8\n  add\n  tag_1\n  jump\t// in\ntag_19:\n  swap3\n  dup4\n  mstore\n  returndatasize\n  0x00\n  dup8\n  dup6\n  add\n  returndatacopy\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n  tag_3\n  jump\t// in\ntag_18:\n  pop\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\ntag_21:\n    /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n  mload(0x40)\n  swap1\n    /* \"contracts/proxy/DmtpProxy.sol\":4806:4838  new DmtpProxyAdmin(initialOwner) */\n  dataSize(sub_1)\n  dup1\n  dup4\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup5\n  dup3\n  lt\n  or\n  tag_22\n  jumpi\n  dup5\n  swap3\n  dup5\n  swap3\n  dataOffset(sub_1)\n  dup5\n  codecopy\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n  and\n  dup2\n  mstore\n    /* \"contracts/proxy/DmtpProxy.sol\":4806:4838  new DmtpProxyAdmin(initialOwner) */\n  sub\n  add\n  swap1\n  0x00\n  create\n  dup1\n  iszero\n  tag_24\n  jumpi\n    /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n  0x01\n  dup1\n  0xa0\n  shl\n  sub\n  and\n    /* \"contracts/proxy/DmtpProxy.sol\":4789:4839  _admin = address(new DmtpProxyAdmin(initialOwner)) */\n  swap1\n  dup2\n  0x80\n  mstore\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3890:3933  IERC1967.AdminChanged(getAdmin(), newAdmin) */\n  0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f\n    /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n  0x40\n  0x00\n  dup1\n  mload\n  0x20\n  data_52df0bdf5a5f92d8037cf11e50f13d8017aefc99d20a73c826416df79570d481\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2868:2934  0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 */\n  sload\n    /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n  swap3\n  dup5\n  dup3\n  mload\n  swap2\n  0x01\n  dup1\n  0xa0\n  shl\n  sub\n  dup7\n  and\n  dup4\n  mstore\n  dup3\n  add\n  mstore\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3890:3933  IERC1967.AdminChanged(getAdmin(), newAdmin) */\n  log1\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3549:3571  newAdmin == address(0) */\n  dup2\n  iszero\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3545:3636  if (newAdmin == address(0)) {... */\n  tag_26\n  jumpi\n  not(sub(shl(0xa0, 0x01), 0x01))\n    /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n  and\n  or\n  0x00\n  dup1\n  mload\n  0x20\n  data_52df0bdf5a5f92d8037cf11e50f13d8017aefc99d20a73c826416df79570d481\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n  sstore\n  mload(0x40)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n    /* \"contracts/proxy/DmtpProxy.sol\":4789:4839  _admin = address(new DmtpProxyAdmin(initialOwner)) */\n  0x80\n    /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n  mload\n  dup2\n  assignImmutable(\"0x1c4db340715341f2094e27ca1dd2b4235f31d3ab886fce88b82fac390f847f6e\")\n  return\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3545:3636  if (newAdmin == address(0)) {... */\ntag_26:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3594:3625  ERC1967InvalidAdmin(address(0)) */\n  mstore(0x00, shl(0xe1, 0x3173bdd1))\n  0x00\n  0x04\n    /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n  mstore\n  0x24\n  0x00\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3594:3625  ERC1967InvalidAdmin(address(0)) */\n  revert\n    /* \"contracts/proxy/DmtpProxy.sol\":4806:4838  new DmtpProxyAdmin(initialOwner) */\ntag_24:\n    /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n  mload(0x40)\n  returndatasize\n  0x00\n  dup3\n  returndatacopy\n  returndatasize\n  swap1\n  revert\n    /* \"contracts/proxy/DmtpProxy.sol\":4806:4838  new DmtpProxyAdmin(initialOwner) */\ntag_22:\n    /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n  revert(0x00, 0x24)\ntag_14:\n  swap1\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n  tag_18\n    /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n  swap2\n  0x60\n  swap2\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n  tag_3\n  jump\t// in\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6172  msg.value */\n  pop\n  pop\n  callvalue\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n  iszero\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n  tag_21\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n  jumpi\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6199:6218  ERC1967NonPayable() */\n  mstore(0x00, shl(0xe0, 0xb398979f))\n  revert(0x00, 0x04)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\ntag_10:\n  pop\n  shl(0xe0, 0x4c9c8ce3)\n  0x00\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n  swap1\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n  swap2\n  swap1\n  swap2\n  and\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n  0x04\n    /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n  mstore\n  0x24\n  swap1\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n  revert\n    /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\ntag_5:\n  0x00\n  dup1\n  revert\ntag_1:\n  mload(0x40)\n  swap2\n  swap1\n  0x1f\n  add\n  not(0x1f)\n  and\n  dup3\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup4\n  dup3\n  lt\n  or\n  tag_22\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_2:\n  mload\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n  dup3\n  and\n  dup3\n  sub\n  tag_5\n  jumpi\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4421:5003  function verifyCallResultFromTarget(... */\ntag_3:\n  swap1\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4593:4601  !success */\n  tag_34\n  jumpi\n  pop\n    /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n  dup1\n  mload\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5674:5695  returndata.length > 0 */\n  iszero\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5674:5691  returndata.length */\n  tag_36\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5799:5957  assembly (\"memory-safe\") {... */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  revert\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5670:6024  if (returndata.length > 0) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5994:6013  Errors.FailedCall() */\n  shl(0xe0, 0xd6bda275)\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5694:5695  0 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5994:6013  Errors.FailedCall() */\n  mstore\n  0x04\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5694:5695  0 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5994:6013  Errors.FailedCall() */\n  revert\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\ntag_34:\n    /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n  dup2\n  mload\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4863  returndata.length == 0 */\n  iszero\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\n  dup1\n  tag_38\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\ntag_39:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4837:4956  if (returndata.length == 0 && target.code.length == 0) {... */\n  tag_40\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4969:4986  return returndata */\n  pop\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4837:4956  if (returndata.length == 0 && target.code.length == 0) {... */\ntag_40:\n  shl(0xe0, 0x9996b315)\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4862:4863  0 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n  swap1\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n  swap2\n  swap1\n  swap2\n  and\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n  0x04\n    /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n  mstore\n  0x24\n  swap1\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n  revert\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\ntag_38:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4867:4885  target.code.length */\n  pop\n  dup1\n  extcodesize\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4867:4890  target.code.length == 0 */\n  iszero\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\n  jump(tag_39)\nstop\ndata_52df0bdf5a5f92d8037cf11e50f13d8017aefc99d20a73c826416df79570d481 b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\n\nsub_0: assembly {\n        /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n      mstore(0x40, 0x80)\n        /* \"contracts/proxy/DmtpProxy.sol\":5336:5346  msg.sender */\n      caller\n        /* \"contracts/proxy/DmtpProxy.sol\":5120:5126  _admin */\n      immutable(\"0x1c4db340715341f2094e27ca1dd2b4235f31d3ab886fce88b82fac390f847f6e\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n      and\n        /* \"contracts/proxy/DmtpProxy.sol\":5336:5363  msg.sender == _proxyAdmin() */\n      sub\n        /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n      tag_8\n      jumpi\n        /* \"contracts/proxy/DmtpProxy.sol\":5400:5407  msg.sig */\n      and(not(sub(shl(0xe0, 0x01), 0x01)), calldataload(0x00))\n      shl(0xe1, 0x278f7943)\n        /* \"contracts/proxy/DmtpProxy.sol\":5400:5481  msg.sig !=... */\n      eq\n        /* \"contracts/proxy/DmtpProxy.sol\":5427:5481  ITransparentUpgradeableProxy.upgradeToAndCall.selector */\n      tag_10\n      jumpi\n        /* \"contracts/proxy/DmtpProxy.sol\":5521:5545  ProxyDeniedAdminAccess() */\n      shl(0xe2, 0x34ad5dbb)\n        /* \"contracts/proxy/DmtpProxy.sol\":5400:5407  msg.sig */\n      0x00\n        /* \"contracts/proxy/DmtpProxy.sol\":5521:5545  ProxyDeniedAdminAccess() */\n      mstore\n      0x04\n        /* \"contracts/proxy/DmtpProxy.sol\":5400:5407  msg.sig */\n      0x00\n        /* \"contracts/proxy/DmtpProxy.sol\":5521:5545  ProxyDeniedAdminAccess() */\n      revert\n        /* \"contracts/proxy/DmtpProxy.sol\":5379:5626  if (... */\n    tag_10:\n      tag_12\n      tag_4\n      jump\t// in\n    tag_12:\n        /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n      stop\n        /* \"contracts/proxy/DmtpProxy.sol\":5332:5684  if (msg.sender == _proxyAdmin()) {... */\n    tag_8:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      sload(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)\n      0x00\n      swap1\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n      and\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1019:1838  assembly {... */\n      calldatasize\n      dup3\n      dup1\n      calldatacopy\n      dup2\n      calldatasize\n      swap2\n      gas\n      delegatecall\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      iszero\n      tag_13\n      jumpi\n      return(0x00, returndatasize)\n    tag_13:\n      revert(0x00, returndatasize)\n        /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n    tag_1:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_2:\n      mload(0x40)\n      swap2\n      swap1\n      0x1f\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0xffffffffffffffff\n      dup2\n      gt\n      dup4\n      dup3\n      lt\n      or\n      tag_15\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_15:\n      tag_1\n      jump\t// in\n    tag_3:\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_15\n      jumpi\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      swap1\n      jump\t// out\n        /* \"contracts/proxy/DmtpProxy.sol\":5892:6143  function _dispatchUpgradeToAndCall() private {... */\n    tag_4:\n        /* \"contracts/proxy/DmtpProxy.sol\":6020:6028  msg.data */\n      calldatasize\n        /* \"contracts/proxy/DmtpProxy.sol\":6029:6030  4 */\n      0x04\n        /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n      gt\n      tag_31\n      jumpi\n      0x40\n        /* \"contracts/proxy/DmtpProxy.sol\":6020:6028  msg.data */\n      calldatasize\n      not(0x03)\n        /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n      add\n      slt\n      tag_31\n      jumpi\n        /* \"contracts/proxy/DmtpProxy.sol\":6029:6030  4 */\n      0x04\n        /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      swap1\n      dup2\n      swap1\n      sub\n      tag_31\n      jumpi\n      calldataload(0x24)\n      swap1\n      0xffffffffffffffff\n      dup3\n      gt\n      tag_31\n      jumpi\n        /* \"contracts/proxy/DmtpProxy.sol\":6020:6028  msg.data */\n      calldatasize\n        /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n      0x23\n      dup4\n      add\n      slt\n      iszero\n      tag_31\n      jumpi\n      dup2\n        /* \"contracts/proxy/DmtpProxy.sol\":6029:6030  4 */\n      0x04\n        /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n      add\n      calldataload\n      swap1\n      tag_29\n      tag_30\n      dup4\n      tag_3\n      jump\t// in\n    tag_30:\n      tag_2\n      jump\t// in\n    tag_29:\n      swap2\n      dup1\n      dup4\n      mstore\n        /* \"contracts/proxy/DmtpProxy.sol\":6020:6028  msg.data */\n      calldatasize\n        /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n      0x24\n      dup3\n      dup7\n      add\n      add\n      gt\n      tag_31\n      jumpi\n      0x20\n      dup2\n        /* \"contracts/proxy/DmtpProxy.sol\":6020:6028  msg.data */\n      0x00\n        /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n      swap3\n      0x24\n        /* \"contracts/proxy/DmtpProxy.sol\":6131:6135  data */\n      tag_33\n        /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n      swap8\n      add\n      dup4\n      dup8\n      add\n      calldatacopy\n      dup5\n      add\n      add\n      mstore\n        /* \"contracts/proxy/DmtpProxy.sol\":6131:6135  data */\n      tag_5\n      jump\t// in\n    tag_33:\n        /* \"contracts/proxy/DmtpProxy.sol\":5892:6143  function _dispatchUpgradeToAndCall() private {... */\n      jump\t// out\n        /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n    tag_31:\n        /* \"contracts/proxy/DmtpProxy.sol\":6020:6028  msg.data */\n      0x00\n        /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_5:\n      swap1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1777  newImplementation.code.length */\n      dup2\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1782  newImplementation.code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n      tag_34\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2407:2443  IERC1967.Upgraded(newImplementation) */\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      0x00\n      dup1\n      log2\n        /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2473  data.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2469  data.length */\n      tag_36\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n      tag_38\n      swap2\n      tag_6\n      jump\t// in\n    tag_38:\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6172  msg.value */\n      pop\n      pop\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n      tag_40\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6199:6218  ERC1967NonPayable() */\n      shl(0xe0, 0xb398979f)\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1781:1782  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6199:6218  ERC1967NonPayable() */\n      mstore\n      0x04\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1781:1782  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6199:6218  ERC1967NonPayable() */\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n    tag_34:\n      pop\n      shl(0xe0, 0x4c9c8ce3)\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1781:1782  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n      swap1\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n      0x04\n        /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n      mstore\n      0x24\n      swap1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3900:4153  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_6:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4074  target.delegatecall(data) */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3900:4153  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n      tag_42\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3900:4153  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4074  target.delegatecall(data) */\n      0x20\n      dup2\n      mload\n      swap2\n      add\n      dup5\n      gas\n      delegatecall\n        /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n      jumpi(tag_43, iszero(returndatasize))\n      returndatasize\n      swap2\n      tag_45\n      tag_30\n      dup5\n      tag_3\n      jump\t// in\n    tag_45:\n      swap3\n      dup4\n      mstore\n      returndatasize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4074  target.delegatecall(data) */\n      0x00\n      0x20\n        /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n      dup6\n      add\n      returndatacopy\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n      tag_7\n      jump\t// in\n    tag_42:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3900:4153  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n    tag_43:\n      0x60\n      swap2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4421:5003  function verifyCallResultFromTarget(... */\n    tag_7:\n      swap1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4593:4601  !success */\n      tag_48\n      jumpi\n      pop\n        /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5674:5695  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5674:5691  returndata.length */\n      tag_50\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5799:5957  assembly (\"memory-safe\") {... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5670:6024  if (returndata.length > 0) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5994:6013  Errors.FailedCall() */\n      shl(0xe0, 0xd6bda275)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5694:5695  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5994:6013  Errors.FailedCall() */\n      mstore\n      0x04\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5694:5695  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5994:6013  Errors.FailedCall() */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n    tag_48:\n        /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4863  returndata.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      tag_52\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4837:4956  if (returndata.length == 0 && target.code.length == 0) {... */\n      tag_54\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4969:4986  return returndata */\n      pop\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4837:4956  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_54:\n      shl(0xe0, 0x9996b315)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4862:4863  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n      swap1\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n      0x04\n        /* \"contracts/proxy/DmtpProxy.sol\":3842:6145  contract DmtpProxy is ERC1967Proxy {... */\n      mstore\n      0x24\n      swap1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\n    tag_52:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4867:4885  target.code.length */\n      pop\n      dup1\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4867:4890  target.code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\n      jump(tag_53)\n\n    auxdata: 0xa164736f6c634300081c000a\n}\n\nsub_1: assembly {\n        /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n      0x80\n      jumpi(tag_7, callvalue)\n      0x1f\n      bytecodeSize\n      codesize\n      dup2\n      swap1\n      sub\n      swap2\n      dup3\n      add\n      not(0x1f)\n      and\n      dup4\n      add\n      swap2\n      sub(shl(0x40, 0x01), 0x01)\n      dup4\n      gt\n      dup5\n      dup5\n      lt\n      or\n      tag_3\n      jumpi\n      dup1\n      dup5\n      swap3\n      0x20\n      swap5\n      0x40\n      mstore\n      dup4\n      codecopy\n      dup2\n      add\n      sub\n      slt\n      tag_7\n      jumpi\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      swap1\n      dup2\n      swap1\n      sub\n      tag_7\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n      dup1\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n      tag_9\n      jumpi\n      0x00\n        /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup2\n      and\n      dup4\n      or\n      dup3\n      sstore\n      mload(0x40)\n      swap3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n      dup1\n      log3\n        /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n      dataSize(sub_0)\n      swap1\n      dup2\n      dataOffset(sub_0)\n      dup3\n      codecopy\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n    tag_9:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n      mstore(0x00, shl(0xe0, 0x1e4fbdf7))\n      0x00\n      0x04\n        /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n      mstore\n      0x24\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n      revert\n        /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n    tag_7:\n      0x00\n      dup1\n      revert\n    tag_3:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    stop\n\n    sub_0: assembly {\n            /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n          0x80\n          dup1\n          0x40\n          mstore\n          jumpi(tag_6, iszero(lt(calldatasize, 0x04)))\n          0x00\n          dup1\n          revert\n        tag_6:\n          0x00\n          swap1\n          dup2\n          calldataload\n          0xe0\n          shr\n          swap1\n          dup2\n          0x05f38c71\n          eq\n          tag_8\n          jumpi\n          pop\n          dup1\n          0x715018a6\n          eq\n          tag_10\n          jumpi\n          dup1\n          0x8da5cb5b\n          eq\n          tag_12\n          jumpi\n          dup1\n          0x9623609d\n          eq\n          tag_14\n          jumpi\n          dup1\n          0xad3cb1cc\n          eq\n          tag_16\n          jumpi\n          0xf2fde38b\n          eq\n          tag_18\n          jumpi\n          0x00\n          dup1\n          revert\n        tag_18:\n          jumpi(tag_22, callvalue)\n          jumpi(tag_22, slt(add(not(0x03), calldatasize), 0x20))\n          tag_24\n          tag_1\n          jump\t// in\n        tag_24:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n          tag_25\n          tag_5\n          jump\t// in\n        tag_25:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n          and\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n          dup1\n          iszero\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n          tag_26\n          jumpi\n            /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n          dup2\n          sload\n          not(sub(shl(0xa0, 0x01), 0x01))\n          dup2\n          and\n          dup3\n          or\n          dup4\n          sstore\n          sub(shl(0xa0, 0x01), 0x01)\n          and\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n          0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n            /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n          dup4\n          dup1\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n          log3\n            /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n          dup1\n          return\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n        tag_26:\n          shl(0xe0, 0x1e4fbdf7)\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n          dup3\n          mstore\n            /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n          0x04\n          dup3\n          swap1\n          mstore\n          0x24\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n          dup3\n          revert\n            /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n        tag_22:\n          dup1\n          revert\n        tag_16:\n          pop\n          jumpi(tag_22, callvalue)\n          dup1\n          add(calldatasize, not(0x03))\n          slt\n          tag_22\n          jumpi\n          pop\n          tag_32\n          mload(0x40)\n          tag_33\n          0x40\n          dup3\n          tag_2\n          jump\t// in\n        tag_33:\n          0x05\n          dup2\n          mstore\n          shl(0xdc, 0x0352e302e3)\n          0x20\n          dup3\n          add\n          mstore\n          mload(0x40)\n          swap2\n          dup3\n          swap2\n          0x20\n          dup4\n          mstore\n          0x20\n          dup4\n          add\n          swap1\n          tag_4\n          jump\t// in\n        tag_32:\n          sub\n          swap1\n          return\n        tag_14:\n          pop\n          jumpi(tag_22, slt(add(not(0x03), calldatasize), 0x60))\n          calldataload(0x04)\n          sub(shl(0xa0, 0x01), 0x01)\n          dup2\n          and\n          swap1\n          dup2\n          swap1\n          sub\n          tag_38\n          jumpi\n          dup2\n          calldataload(0x24)\n          sub(shl(0xa0, 0x01), 0x01)\n          dup2\n          and\n          swap1\n          dup2\n          swap1\n          sub\n          tag_38\n          jumpi\n          calldataload(0x44)\n          0xffffffffffffffff\n          dup2\n          gt\n          tag_49\n          jumpi\n          calldatasize\n          0x23\n          dup3\n          add\n          slt\n          iszero\n          tag_49\n          jumpi\n          dup1\n          0x04\n          add\n          calldataload\n          tag_44\n          dup2\n          tag_3\n          jump\t// in\n        tag_44:\n          swap2\n          tag_45\n          mload(0x40)\n          swap4\n          dup5\n          tag_2\n          jump\t// in\n        tag_45:\n          dup2\n          dup4\n          mstore\n          calldatasize\n          0x24\n          dup4\n          dup4\n          add\n          add\n          gt\n          tag_46\n          jumpi\n          dup2\n          dup6\n          swap3\n          0x24\n          0x20\n          swap4\n          add\n          dup4\n          dup7\n          add\n          calldatacopy\n          dup4\n          add\n          add\n          mstore\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n          tag_48\n          tag_5\n          jump\t// in\n        tag_48:\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1893:1955  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n          dup4\n          extcodesize\n          iszero\n          tag_49\n          jumpi\n            /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n          tag_51\n          swap4\n          dup4\n          swap3\n          mload(0x40)\n          dup1\n          swap7\n          dup2\n          swap5\n          dup3\n          swap4\n          shl(0xe1, 0x278f7943)\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1893:1955  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n          dup5\n          mstore\n            /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n          0x04\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1893:1955  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n          dup5\n          add\n            /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n          mstore\n          0x40\n          0x24\n          dup5\n          add\n          mstore\n          0x44\n          dup4\n          add\n          swap1\n          tag_4\n          jump\t// in\n        tag_51:\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1893:1955  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n          sub\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1923:1932  msg.value */\n          swap2\n          callvalue\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1893:1955  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n          swap1\n          gas\n          call\n          dup1\n          iszero\n          tag_52\n          jumpi\n          tag_54\n          jumpi\n            /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n          dup1\n          return\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1893:1955  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n        tag_54:\n          tag_56\n          swap2\n          tag_2\n          jump\t// in\n        tag_56:\n          codesize\n          dup2\n            /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n          dup1\n          return\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1893:1955  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n        tag_52:\n            /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n          pop\n          mload(0x40)\n          swap1\n          returndatasize\n          swap1\n          dup3\n          returndatacopy\n          returndatasize\n          swap1\n          revert\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1893:1955  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n        tag_49:\n            /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n          dup3\n          dup1\n          revert\n        tag_46:\n          dup5\n          dup1\n          revert\n        tag_38:\n          pop\n          dup1\n          revert\n        tag_12:\n          pop\n          jumpi(tag_22, callvalue)\n          dup1\n          add(calldatasize, not(0x03))\n          slt\n          tag_22\n          jumpi\n          sload\n          mload(0x40)\n          sub(shl(0xa0, 0x01), 0x01)\n          swap1\n          swap2\n          and\n          dup2\n          mstore\n          0x20\n          swap1\n          return\n        tag_10:\n          pop\n          jumpi(tag_22, callvalue)\n          dup1\n          add(calldatasize, not(0x03))\n          slt\n          tag_22\n          jumpi\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n          tag_65\n          tag_5\n          jump\t// in\n        tag_65:\n            /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n          dup1\n          sload\n          not(sub(shl(0xa0, 0x01), 0x01))\n          dup2\n          and\n          dup3\n          sstore\n          dup2\n          swap1\n          sub(shl(0xa0, 0x01), 0x01)\n          and\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n          0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n            /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n          dup3\n          dup1\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n          log3\n            /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n          dup1\n          return\n        tag_8:\n          swap1\n          pop\n          jumpi(tag_38, callvalue)\n          jumpi(tag_38, slt(add(not(0x03), calldatasize), 0x20))\n          swap1\n          dup1\n          dup1\n          0x04\n          0x20\n          swap5\n          tag_70\n          tag_1\n          jump\t// in\n        tag_70:\n          shl(0xe0, 0x5c60da1b)\n          dup3\n          mstore\n            /* \"contracts/proxy/DmtpProxyAdmin.sol\":487:527  address(proxy).staticcall(hex\"5c60da1b\") */\n          gas\n          staticcall\n          swap1\n            /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n          jumpi(tag_71, iszero(returndatasize))\n          returndatasize\n          swap1\n          tag_73\n          dup3\n          tag_3\n          jump\t// in\n        tag_73:\n          swap2\n          tag_74\n          mload(0x40)\n          swap4\n          dup5\n          tag_2\n          jump\t// in\n        tag_74:\n          dup3\n          mstore\n          dup4\n          returndatasize\n          swap3\n          add\n          returndatacopy\n        tag_75:\n          mload(0x40)\n          swap1\n          iszero\n          iszero\n          dup2\n          mstore\n          return\n        tag_71:\n          pop\n          jump(tag_75)\n        tag_1:\n          calldataload(0x04)\n          swap1\n          sub(shl(0xa0, 0x01), 0x01)\n          dup3\n          and\n          dup3\n          sub\n          tag_76\n          jumpi\n          jump\t// out\n        tag_76:\n          0x00\n          dup1\n          revert\n        tag_2:\n          swap1\n          0x1f\n          dup1\n          not\n          swap2\n          add\n          and\n          dup2\n          add\n          swap1\n          dup2\n          lt\n          0xffffffffffffffff\n          dup3\n          gt\n          or\n          tag_78\n          jumpi\n          0x40\n          mstore\n          jump\t// out\n        tag_78:\n          mstore(0x00, shl(0xe0, 0x4e487b71))\n          mstore(0x04, 0x41)\n          revert(0x00, 0x24)\n        tag_3:\n          0xffffffffffffffff\n          dup2\n          gt\n          tag_78\n          jumpi\n          0x1f\n          add\n          not(0x1f)\n          and\n          0x20\n          add\n          swap1\n          jump\t// out\n        tag_4:\n          swap2\n          swap1\n          dup3\n          mload\n          swap3\n          dup4\n          dup3\n          mstore\n          0x00\n        tag_82:\n          dup5\n          dup2\n          lt\n          tag_83\n          jumpi\n          pop\n          pop\n          dup3\n          0x00\n          0x20\n          dup1\n          swap5\n          swap6\n          dup5\n          add\n          add\n          mstore\n          0x1f\n          dup1\n          not\n          swap2\n          add\n          and\n          add\n          add\n          swap1\n          jump\t// out\n        tag_83:\n          dup1\n          0x20\n          dup1\n          swap3\n          dup5\n          add\n          add\n          mload\n          dup3\n          dup3\n          dup7\n          add\n          add\n          mstore\n          add\n          jump(tag_82)\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n        tag_5:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n          0x00\n            /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n          sload\n          sub(shl(0xa0, 0x01), 0x01)\n          and\n            /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n          caller\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n          sub\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n          tag_85\n          jumpi\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n          jump\t// out\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n        tag_85:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n          shl(0xe0, 0x118cdaa7)\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n          0x00\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n          mstore\n            /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n          caller\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n          0x04\n            /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n          mstore\n          0x24\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n          0x00\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n          revert\n\n        auxdata: 0xa164736f6c634300081c000a\n    }\n}\n","bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":628,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":591,"id":null,"parameterSlots":1,"returnSlots":1},"fun_verifyCallResultFromTarget":{"entryPoint":648,"id":946,"parameterSlots":3,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60a0604052610af5604081380391826100178161024f565b93849283398101031261024a57610039602061003283610274565b9201610274565b6020916100458361024f565b60008152813b15610228577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0384169081179091557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a280511561020f57600081858293519101845af43d15610202573d906001600160401b0382116101ec57610100926100f1601f8401601f1916870161024f565b9283523d60008785013e610288565b505b604051906104e78083016001600160401b038111848210176101ec57849284926105ee84396001600160a01b031681520301906000f080156101e05760018060a01b031690816080527f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6040600080516020610ad583398151915254928482519160018060a01b0386168352820152a181156101ca576001600160a01b03191617600080516020610ad58339815191525560405161030490816102ea82396080518160070152f35b633173bdd160e11b600052600060045260246000fd5b6040513d6000823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b9061010091606091610288565b505034156101025763b398979f60e01b60005260046000fd5b50634c9c8ce360e01b60009081526001600160a01b0391909116600452602490fd5b600080fd5b6040519190601f01601f191682016001600160401b038111838210176101ec57604052565b51906001600160a01b038216820361024a57565b906102ae575080511561029d57805190602001fd5b63d6bda27560e01b60005260046000fd5b815115806102e0575b6102bf575090565b639996b31560e01b60009081526001600160a01b0391909116600452602490fd5b50803b156102b756fe6080604052337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031603610069576000356001600160e01b03191663278f794360e11b1461005f576334ad5dbb60e21b60005260046000fd5b610067610113565b005b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5460009081906001600160a01b0316368280378136915af43d6000803e156100b1573d6000f35b3d6000fd5b634e487b7160e01b600052604160045260246000fd5b6040519190601f01601f1916820167ffffffffffffffff8111838210176100f257604052565b6100b6565b67ffffffffffffffff81116100f257601f01601f191660200190565b3660041161019d57604036600319011261019d576004356001600160a01b0381169081900361019d576024359067ffffffffffffffff821161019d573660238301121561019d5781600401359061017161016c836100f7565b6100cc565b91808352366024828601011161019d57602081600092602461019b970183870137840101526101a2565b565b600080fd5b90813b15610239577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0384169081179091557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a280511561021f5761021c9161025b565b50565b50503461022857565b63b398979f60e01b60005260046000fd5b50634c9c8ce360e01b60009081526001600160a01b0391909116600452602490fd5b60008061028f93602081519101845af43d15610292573d9161027f61016c846100f7565b9283523d6000602085013e610296565b90565b6060915b906102bc57508051156102ab57805190602001fd5b63d6bda27560e01b60005260046000fd5b815115806102ee575b6102cd575090565b639996b31560e01b60009081526001600160a01b0391909116600452602490fd5b50803b156102c556fea164736f6c634300081c000a60803460bc57601f6104e738819003918201601f19168301916001600160401b0383118484101760c15780849260209460405283398101031260bc57516001600160a01b0381169081900360bc57801560a657600080546001600160a01b031981168317825560405192916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a361040f90816100d88239f35b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b600090813560e01c90816305f38c71146102c257508063715018a6146102685780638da5cb5b146102415780639623609d14610138578063ad3cb1cc146100eb5763f2fde38b1461006357600080fd5b346100e85760203660031901126100e85761007c610329565b6100846103d9565b6001600160a01b031680156100d45781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b80fd5b50346100e857806003193601126100e8575061013460405161010e604082610344565b60058152640352e302e360dc1b6020820152604051918291602083526020830190610398565b0390f35b5060603660031901126100e8576004356001600160a01b0381169081900361023d57816024356001600160a01b0381169081900361023d5760443567ffffffffffffffff8111610235573660238201121561023557806004013561019b8161037c565b916101a96040519384610344565b81835236602483830101116102395781859260246020930183860137830101526101d16103d9565b833b156102355761020793839260405180968194829363278f794360e11b84526004840152604060248401526044830190610398565b039134905af180156102285761021a5780f35b61022391610344565b388180f35b50604051903d90823e3d90fd5b8280fd5b8480fd5b5080fd5b50346100e857806003193601126100e857546040516001600160a01b039091168152602090f35b50346100e857806003193601126100e8576102816103d9565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b90503461023d57602036600319011261023d5790808060046020946102e5610329565b635c60da1b60e01b82525afa903d15610323573d906103038261037c565b916103116040519384610344565b8252833d92013e5b6040519015158152f35b50610319565b600435906001600160a01b038216820361033f57565b600080fd5b90601f8019910116810190811067ffffffffffffffff82111761036657604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161036657601f01601f191660200190565b919082519283825260005b8481106103c4575050826000602080949584010152601f8019910116010190565b806020809284010151828286010152016103a3565b6000546001600160a01b031633036103ed57565b63118cdaa760e01b6000523360045260246000fdfea164736f6c634300081c000ab53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH2 0xAF5 PUSH1 0x40 DUP2 CODESIZE SUB SWAP2 DUP3 PUSH2 0x17 DUP2 PUSH2 0x24F JUMP JUMPDEST SWAP4 DUP5 SWAP3 DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x24A JUMPI PUSH2 0x39 PUSH1 0x20 PUSH2 0x32 DUP4 PUSH2 0x274 JUMP JUMPDEST SWAP3 ADD PUSH2 0x274 JUMP JUMPDEST PUSH1 0x20 SWAP2 PUSH2 0x45 DUP4 PUSH2 0x24F JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE DUP2 EXTCODESIZE ISZERO PUSH2 0x228 JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x20F JUMPI PUSH1 0x0 DUP2 DUP6 DUP3 SWAP4 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0x202 JUMPI RETURNDATASIZE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1EC JUMPI PUSH2 0x100 SWAP3 PUSH2 0xF1 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND DUP8 ADD PUSH2 0x24F JUMP JUMPDEST SWAP3 DUP4 MSTORE RETURNDATASIZE PUSH1 0x0 DUP8 DUP6 ADD RETURNDATACOPY PUSH2 0x288 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x4E7 DUP1 DUP4 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP5 DUP3 LT OR PUSH2 0x1EC JUMPI DUP5 SWAP3 DUP5 SWAP3 PUSH2 0x5EE DUP5 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE SUB ADD SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x80 MSTORE PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH1 0x40 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xAD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP3 DUP5 DUP3 MLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP7 AND DUP4 MSTORE DUP3 ADD MSTORE LOG1 DUP2 ISZERO PUSH2 0x1CA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xAD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH1 0x40 MLOAD PUSH2 0x304 SWAP1 DUP2 PUSH2 0x2EA DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH1 0x7 ADD MSTORE RETURN JUMPDEST PUSH4 0x3173BDD1 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x100 SWAP2 PUSH1 0x60 SWAP2 PUSH2 0x288 JUMP JUMPDEST POP POP CALLVALUE ISZERO PUSH2 0x102 JUMPI PUSH4 0xB398979F PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST POP PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x1EC JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x24A JUMPI JUMP JUMPDEST SWAP1 PUSH2 0x2AE JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x29D JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xD6BDA275 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x2E0 JUMPI JUMPDEST PUSH2 0x2BF JUMPI POP SWAP1 JUMP JUMPDEST PUSH4 0x9996B315 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x2B7 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x69 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x278F7943 PUSH1 0xE1 SHL EQ PUSH2 0x5F JUMPI PUSH4 0x34AD5DBB PUSH1 0xE2 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x67 PUSH2 0x113 JUMP JUMPDEST STOP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY ISZERO PUSH2 0xB1 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP4 DUP3 LT OR PUSH2 0xF2 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xB6 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xF2 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x19D JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19D JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x19D JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x19D JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x19D JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH2 0x171 PUSH2 0x16C DUP4 PUSH2 0xF7 JUMP JUMPDEST PUSH2 0xCC JUMP JUMPDEST SWAP2 DUP1 DUP4 MSTORE CALLDATASIZE PUSH1 0x24 DUP3 DUP7 ADD ADD GT PUSH2 0x19D JUMPI PUSH1 0x20 DUP2 PUSH1 0x0 SWAP3 PUSH1 0x24 PUSH2 0x19B SWAP8 ADD DUP4 DUP8 ADD CALLDATACOPY DUP5 ADD ADD MSTORE PUSH2 0x1A2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x239 JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x21F JUMPI PUSH2 0x21C SWAP2 PUSH2 0x25B JUMP JUMPDEST POP JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x228 JUMPI JUMP JUMPDEST PUSH4 0xB398979F PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST POP PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x28F SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0x292 JUMPI RETURNDATASIZE SWAP2 PUSH2 0x27F PUSH2 0x16C DUP5 PUSH2 0xF7 JUMP JUMPDEST SWAP3 DUP4 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP6 ADD RETURNDATACOPY PUSH2 0x296 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 SWAP2 JUMPDEST SWAP1 PUSH2 0x2BC JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x2AB JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xD6BDA275 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x2EE JUMPI JUMPDEST PUSH2 0x2CD JUMPI POP SWAP1 JUMP JUMPDEST PUSH4 0x9996B315 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x2C5 JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP PUSH1 0x80 CALLVALUE PUSH1 0xBC JUMPI PUSH1 0x1F PUSH2 0x4E7 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH1 0xC1 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH1 0xBC JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH1 0xBC JUMPI DUP1 ISZERO PUSH1 0xA6 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH2 0x40F SWAP1 DUP2 PUSH2 0xD8 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x5F38C71 EQ PUSH2 0x2C2 JUMPI POP DUP1 PUSH4 0x715018A6 EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x9623609D EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0xEB JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE8 JUMPI PUSH2 0x7C PUSH2 0x329 JUMP JUMPDEST PUSH2 0x84 PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xD4 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 OR DUP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE8 JUMPI POP PUSH2 0x134 PUSH1 0x40 MLOAD PUSH2 0x10E PUSH1 0x40 DUP3 PUSH2 0x344 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x352E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x398 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE8 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x23D JUMPI DUP2 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x23D JUMPI PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x235 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x235 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x19B DUP2 PUSH2 0x37C JUMP JUMPDEST SWAP2 PUSH2 0x1A9 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x344 JUMP JUMPDEST DUP2 DUP4 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x239 JUMPI DUP2 DUP6 SWAP3 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH2 0x1D1 PUSH2 0x3D9 JUMP JUMPDEST DUP4 EXTCODESIZE ISZERO PUSH2 0x235 JUMPI PUSH2 0x207 SWAP4 DUP4 SWAP3 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP5 DUP3 SWAP4 PUSH4 0x278F7943 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP1 PUSH2 0x398 JUMP JUMPDEST SUB SWAP2 CALLVALUE SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x228 JUMPI PUSH2 0x21A JUMPI DUP1 RETURN JUMPDEST PUSH2 0x223 SWAP2 PUSH2 0x344 JUMP JUMPDEST CODESIZE DUP2 DUP1 RETURN JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE8 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0xE8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE8 JUMPI PUSH2 0x281 PUSH2 0x3D9 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI SWAP1 DUP1 DUP1 PUSH1 0x4 PUSH1 0x20 SWAP5 PUSH2 0x2E5 PUSH2 0x329 JUMP JUMPDEST PUSH4 0x5C60DA1B PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x323 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x303 DUP3 PUSH2 0x37C JUMP JUMPDEST SWAP2 PUSH2 0x311 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x344 JUMP JUMPDEST DUP3 MSTORE DUP4 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP PUSH2 0x319 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x33F JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x366 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x366 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x3C4 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x3ED JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP 0xB5 BALANCE 0x27 PUSH9 0x4A568B3173AE13B9F8 0xA6 ADD PUSH15 0x243E63B6E8EE1178D6A717850B5D61 SUB ","sourceMap":"3842:2303:12:-:0;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;:::i;:::-;-1:-1:-1;3842:2303:12;;1748:29:3;;:34;1744:119;;811:66;3842:2303:12;;-1:-1:-1;;;;;;3842:2303:12;-1:-1:-1;;;;;3842:2303:12;;;;;;;;2407:36:3;-1:-1:-1;;2407:36:3;3842:2303:12;;2458:15:3;:11;;-1:-1:-1;4049:25:8;;;;;;;;;;3842:2303:12;;;;;;-1:-1:-1;;;;;3842:2303:12;;;;4091:55:8;;3842:2303:12;;;;-1:-1:-1;;3842:2303:12;;;;:::i;:::-;;;;;-1:-1:-1;3842:2303:12;;;;4091:55:8;:::i;:::-;;2454:148:3;3842:2303:12;;;4806:32;;;;-1:-1:-1;;;;;4806:32:12;;;;;;;;;;;;;;;-1:-1:-1;;;;;3842:2303:12;;;4806:32;;;-1:-1:-1;4806:32:12;;;;;3842:2303;;;;;;4789:50;;;;3890:43:3;3842:2303:12;-1:-1:-1;;;;;;;;;;;2868:66:3;3842:2303:12;;;;;;;;;;;;;;;;;3890:43:3;3549:22;;3545:91;;-1:-1:-1;;;;;;3842:2303:12;;-1:-1:-1;;;;;;;;;;;3842:2303:12;;;;;;;;;4789:50;3842:2303;;;;;;3545:91:3;3594:31;;;-1:-1:-1;3594:31:3;-1:-1:-1;3594:31:3;3842:2303:12;;-1:-1:-1;3594:31:3;4806:32:12;3842:2303;;;-1:-1:-1;3842:2303:12;;;;;4806:32;3842:2303;;;-1:-1:-1;3842:2303:12;;;;;-1:-1:-1;3842:2303:12;;;4091:55:8;3842:2303:12;;;4091:55:8;:::i;2454:148:3:-;6163:9;;;6159:70;2454:148;6159:70;6199:19;;;-1:-1:-1;6199:19:3;;-1:-1:-1;6199:19:3;1744:119;-1:-1:-1;;;;;1805:47:3;;;-1:-1:-1;;;;;3842:2303:12;;;;1805:47:3;3842:2303:12;;;1805:47:3;3842:2303:12;-1:-1:-1;3842:2303:12;;;;;;;;;-1:-1:-1;;3842:2303:12;;;-1:-1:-1;;;;;3842:2303:12;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;3842:2303:12;;;;;;:::o;4421:582:8:-;;4593:8;;-1:-1:-1;3842:2303:12;;5674:21:8;:17;;5799:158;;;;;;5670:354;5994:19;;;5694:1;5994:19;;5694:1;5994:19;4589:408;3842:2303:12;;4841:22:8;:49;;;4589:408;4837:119;;4969:17;;:::o;4837:119::-;-1:-1:-1;;;4862:1:8;4917:24;;;-1:-1:-1;;;;;3842:2303:12;;;;4917:24:8;3842:2303:12;;;4917:24:8;4841:49;4867:18;;;:23;4841:49;"},"deployedBytecode":{"functionDebugData":{"allocate_memory":{"entryPoint":204,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":247,"id":null,"parameterSlots":1,"returnSlots":1},"fun_dispatchUpgradeToAndCall":{"entryPoint":275,"id":1290,"parameterSlots":0,"returnSlots":0},"fun_functionDelegateCall":{"entryPoint":603,"id":906,"parameterSlots":2,"returnSlots":1},"fun_upgradeToAndCall":{"entryPoint":418,"id":315,"parameterSlots":2,"returnSlots":0},"fun_verifyCallResultFromTarget":{"entryPoint":662,"id":946,"parameterSlots":3,"returnSlots":1},"panic_error_0x41":{"entryPoint":182,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"1181":[{"length":32,"start":7}]},"linkReferences":{},"object":"6080604052337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031603610069576000356001600160e01b03191663278f794360e11b1461005f576334ad5dbb60e21b60005260046000fd5b610067610113565b005b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5460009081906001600160a01b0316368280378136915af43d6000803e156100b1573d6000f35b3d6000fd5b634e487b7160e01b600052604160045260246000fd5b6040519190601f01601f1916820167ffffffffffffffff8111838210176100f257604052565b6100b6565b67ffffffffffffffff81116100f257601f01601f191660200190565b3660041161019d57604036600319011261019d576004356001600160a01b0381169081900361019d576024359067ffffffffffffffff821161019d573660238301121561019d5781600401359061017161016c836100f7565b6100cc565b91808352366024828601011161019d57602081600092602461019b970183870137840101526101a2565b565b600080fd5b90813b15610239577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0384169081179091557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a280511561021f5761021c9161025b565b50565b50503461022857565b63b398979f60e01b60005260046000fd5b50634c9c8ce360e01b60009081526001600160a01b0391909116600452602490fd5b60008061028f93602081519101845af43d15610292573d9161027f61016c846100f7565b9283523d6000602085013e610296565b90565b6060915b906102bc57508051156102ab57805190602001fd5b63d6bda27560e01b60005260046000fd5b815115806102ee575b6102cd575090565b639996b31560e01b60009081526001600160a01b0391909116600452602490fd5b50803b156102c556fea164736f6c634300081c000a","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x69 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x278F7943 PUSH1 0xE1 SHL EQ PUSH2 0x5F JUMPI PUSH4 0x34AD5DBB PUSH1 0xE2 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x67 PUSH2 0x113 JUMP JUMPDEST STOP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY ISZERO PUSH2 0xB1 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP4 DUP3 LT OR PUSH2 0xF2 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xB6 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xF2 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x19D JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19D JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x19D JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x19D JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x19D JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH2 0x171 PUSH2 0x16C DUP4 PUSH2 0xF7 JUMP JUMPDEST PUSH2 0xCC JUMP JUMPDEST SWAP2 DUP1 DUP4 MSTORE CALLDATASIZE PUSH1 0x24 DUP3 DUP7 ADD ADD GT PUSH2 0x19D JUMPI PUSH1 0x20 DUP2 PUSH1 0x0 SWAP3 PUSH1 0x24 PUSH2 0x19B SWAP8 ADD DUP4 DUP8 ADD CALLDATACOPY DUP5 ADD ADD MSTORE PUSH2 0x1A2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x239 JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x21F JUMPI PUSH2 0x21C SWAP2 PUSH2 0x25B JUMP JUMPDEST POP JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x228 JUMPI JUMP JUMPDEST PUSH4 0xB398979F PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST POP PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x28F SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0x292 JUMPI RETURNDATASIZE SWAP2 PUSH2 0x27F PUSH2 0x16C DUP5 PUSH2 0xF7 JUMP JUMPDEST SWAP3 DUP4 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP6 ADD RETURNDATACOPY PUSH2 0x296 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 SWAP2 JUMPDEST SWAP1 PUSH2 0x2BC JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x2AB JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xD6BDA275 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x2EE JUMPI JUMPDEST PUSH2 0x2CD JUMPI POP SWAP1 JUMP JUMPDEST PUSH4 0x9996B315 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x2C5 JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP ","sourceMap":"3842:2303:12:-:0;;;5336:10;5120:6;-1:-1:-1;;;;;3842:2303:12;5336:27;3842:2303;;5400:7;;-1:-1:-1;;;;;;5400:7:12;-1:-1:-1;;;5400:81:12;5427:54;;5521:24;;;5400:7;5521:24;;5400:7;5521:24;5379:247;;;:::i;:::-;3842:2303;5332:352;811:66:3;;-1:-1:-1;;;;;;;;;3842:2303:12;1019:819:4;-1:-1:-1;;1019:819:4;;;;;;;-1:-1:-1;1019:819:4;;;;;;-1:-1:-1;1019:819:4;;;-1:-1:-1;1019:819:4;3842:2303:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3842:2303:12;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;-1:-1:-1;;3842:2303:12;;;;:::o;5892:251::-;6020:8;6029:1;3842:2303;;;;6020:8;-1:-1:-1;;3842:2303:12;;;;6029:1;3842:2303;-1:-1:-1;;;;;3842:2303:12;;;;;;;;;;;;;;;;6020:8;3842:2303;;;;;;;;6029:1;3842:2303;;;;;;;:::i;:::-;;:::i;:::-;;;;;6020:8;3842:2303;;;;;;;;;;6020:8;3842:2303;;6131:4;3842:2303;;;;;;;;;;6131:4;:::i;:::-;5892:251::o;3842:2303::-;6020:8;3842:2303;;2264:344:3;;1748:29;;:34;1744:119;;811:66;3842:2303:12;;-1:-1:-1;;;;;;3842:2303:12;-1:-1:-1;;;;;3842:2303:12;;;;;;;;2407:36:3;-1:-1:-1;;2407:36:3;3842:2303:12;;2458:15:3;:11;;2489:53;;;:::i;:::-;;2264:344::o;2454:148::-;6163:9;;;6159:70;;2264:344::o;6159:70::-;6199:19;;;1781:1;6199:19;;1781:1;6199:19;1744:119;-1:-1:-1;;;;1781:1:3;1805:47;;;-1:-1:-1;;;;;3842:2303:12;;;;1805:47:3;3842:2303:12;;;1805:47:3;3900:253:8;4049:25;3900:253;4091:55;3900:253;4049:25;;;;;;;;3842:2303:12;;;;;;;;;;:::i;:::-;;;;;4049:25:8;;3842:2303:12;;;4091:55:8;:::i;:::-;3900:253;:::o;3842:2303:12:-;;;4421:582:8;;4593:8;;-1:-1:-1;3842:2303:12;;5674:21:8;:17;;5799:158;;;;;;5670:354;5994:19;;;5694:1;5994:19;;5694:1;5994:19;4589:408;3842:2303:12;;4841:22:8;:49;;;4589:408;4837:119;;4969:17;;:::o;4837:119::-;-1:-1:-1;;;4862:1:8;4917:24;;;-1:-1:-1;;;;;3842:2303:12;;;;4917:24:8;3842:2303:12;;;4917:24:8;4841:49;4867:18;;;:23;4841:49;"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 2:\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\", 3:\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\", 4:\"@openzeppelin/contracts/proxy/Proxy.sol\", 8:\"@openzeppelin/contracts/utils/Address.sol\", 11:\"@openzeppelin/contracts/utils/StorageSlot.sol\", 12:\"contracts/proxy/DmtpProxy.sol\"\nobject \"DmtpProxy_1291\" {\n    code {\n        {\n            /// @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\"\n            mstore(64, memoryguard(0xa0))\n            let programSize := datasize(\"DmtpProxy_1291\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            if slt(sub(add(memoryDataOffset, argSize), memoryDataOffset), 64)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\"\n            let value0 := abi_decode_address_fromMemory(memoryDataOffset)\n            let value1 := abi_decode_address_fromMemory(add(memoryDataOffset, 32))\n            let size := /** @src -1:-1:-1 */ 0\n            /// @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\"\n            let length := /** @src -1:-1:-1 */ size\n            /// @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\"\n            length := /** @src -1:-1:-1 */ size\n            /// @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\"\n            size := 32\n            let memPtr := allocate_memory(size)\n            mstore(memPtr, /** @src -1:-1:-1 */ 0)\n            /// @src 3:1744:1863  \"if (newImplementation.code.length == 0) {...\"\n            if /** @src 3:1748:1782  \"newImplementation.code.length == 0\" */ iszero(/** @src 3:1748:1777  \"newImplementation.code.length\" */ extcodesize(value0))\n            /// @src 3:1744:1863  \"if (newImplementation.code.length == 0) {...\"\n            {\n                /// @src 3:1805:1852  \"ERC1967InvalidImplementation(newImplementation)\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 3:1805:1852  \"ERC1967InvalidImplementation(newImplementation)\" */ shl(224, 0x4c9c8ce3))\n                /// @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\"\n                mstore(/** @src 3:1805:1852  \"ERC1967InvalidImplementation(newImplementation)\" */ 4, /** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ and(value0, sub(shl(160, 1), 1)))\n                /// @src 3:1805:1852  \"ERC1967InvalidImplementation(newImplementation)\"\n                revert(/** @src -1:-1:-1 */ 0, /** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ 36)\n            }\n            let _1 := and(value0, sub(shl(160, 1), 1))\n            sstore(/** @src 3:811:877  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc, /** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ or(and(sload(/** @src 3:811:877  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc), /** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ not(sub(shl(160, 1), 1))), _1))\n            /// @src 3:2407:2443  \"IERC1967.Upgraded(newImplementation)\"\n            log2(/** @src -1:-1:-1 */ 0, 0, /** @src 3:2407:2443  \"IERC1967.Upgraded(newImplementation)\" */ 0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b, _1)\n            /// @src 3:2454:2602  \"if (data.length > 0) {...\"\n            switch /** @src 3:2458:2473  \"data.length > 0\" */ iszero(iszero(/** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ mload(/** @src 3:2458:2469  \"data.length\" */ memPtr)))\n            case /** @src 3:2454:2602  \"if (data.length > 0) {...\" */ 0 {\n                /// @src 3:6159:6229  \"if (msg.value > 0) {...\"\n                if /** @src 3:6163:6176  \"msg.value > 0\" */ iszero(iszero(/** @src 3:6163:6172  \"msg.value\" */ callvalue()))\n                /// @src 3:6159:6229  \"if (msg.value > 0) {...\"\n                {\n                    /// @src 3:6199:6218  \"ERC1967NonPayable()\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 3:6199:6218  \"ERC1967NonPayable()\" */ shl(224, 0xb398979f))\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 3:6199:6218  \"ERC1967NonPayable()\" */ 4)\n                }\n            }\n            default /// @src 3:2454:2602  \"if (data.length > 0) {...\"\n            {\n                /// @src 8:4049:4074  \"target.delegatecall(data)\"\n                let expr_component := delegatecall(gas(), value0, add(memPtr, /** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ size), /** @src 8:4049:4074  \"target.delegatecall(data)\" */ mload(memPtr), /** @src -1:-1:-1 */ 0, 0)\n                /// @src 8:4049:4074  \"target.delegatecall(data)\"\n                let data := /** @src -1:-1:-1 */ 0\n                /// @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\"\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _2 := returndatasize()\n                    let size_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\"\n                    if gt(_2, sub(shl(64, 1), 1))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ 0x24)\n                    }\n                    size_1 := add(and(add(_2, 31), not(31)), size)\n                    let memPtr_1 := allocate_memory(size_1)\n                    mstore(memPtr_1, _2)\n                    data := memPtr_1\n                    returndatacopy(add(memPtr_1, size), /** @src -1:-1:-1 */ 0, /** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ returndatasize())\n                }\n                /// @src 8:4091:4146  \"verifyCallResultFromTarget(target, success, returndata)\"\n                pop(fun_verifyCallResultFromTarget(value0, expr_component, /** @src 8:4049:4074  \"target.delegatecall(data)\" */ data))\n            }\n            /// @src 12:4806:4838  \"new DmtpProxyAdmin(initialOwner)\"\n            let _3 := /** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ mload(64)\n            /// @src 12:4806:4838  \"new DmtpProxyAdmin(initialOwner)\"\n            let _4 := datasize(\"DmtpProxyAdmin_1326\")\n            let _5 := add(_3, _4)\n            if or(gt(_5, /** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ sub(shl(64, 1), 1)), /** @src 12:4806:4838  \"new DmtpProxyAdmin(initialOwner)\" */ lt(_5, _3))\n            {\n                /// @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ 0x24)\n            }\n            /// @src 12:4806:4838  \"new DmtpProxyAdmin(initialOwner)\"\n            datacopy(_3, dataoffset(\"DmtpProxyAdmin_1326\"), _4)\n            /// @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\"\n            mstore(_5, and(value1, sub(shl(160, 1), 1)))\n            /// @src 12:4806:4838  \"new DmtpProxyAdmin(initialOwner)\"\n            let expr_address := create(/** @src -1:-1:-1 */ 0, /** @src 12:4806:4838  \"new DmtpProxyAdmin(initialOwner)\" */ _3, add(sub(/** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ _5, /** @src 12:4806:4838  \"new DmtpProxyAdmin(initialOwner)\" */ _3), /** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ size))\n            /// @src 12:4806:4838  \"new DmtpProxyAdmin(initialOwner)\"\n            if iszero(expr_address)\n            {\n                /// @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\"\n                let pos := mload(64)\n                returndatacopy(pos, /** @src -1:-1:-1 */ 0, /** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ returndatasize())\n                revert(pos, returndatasize())\n            }\n            let _6 := and(/** @src 12:4798:4839  \"address(new DmtpProxyAdmin(initialOwner))\" */ expr_address, /** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ sub(shl(160, 1), 1))\n            /// @src 12:4789:4839  \"_admin = address(new DmtpProxyAdmin(initialOwner))\"\n            mstore(128, /** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ _6)\n            /// @src 3:2868:2934  \"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\"\n            let _7 := sload(0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103)\n            /// @src 3:3890:3933  \"IERC1967.AdminChanged(getAdmin(), newAdmin)\"\n            let _8 := /** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ mload(64)\n            mstore(_8, and(_7, sub(shl(160, 1), 1)))\n            mstore(add(_8, size), _6)\n            /// @src 3:3890:3933  \"IERC1967.AdminChanged(getAdmin(), newAdmin)\"\n            log1(_8, /** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ 64, /** @src 3:3890:3933  \"IERC1967.AdminChanged(getAdmin(), newAdmin)\" */ 0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f)\n            /// @src 3:3545:3636  \"if (newAdmin == address(0)) {...\"\n            if /** @src 3:3549:3571  \"newAdmin == address(0)\" */ iszero(/** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ _6)\n            /// @src 3:3545:3636  \"if (newAdmin == address(0)) {...\"\n            {\n                /// @src 3:3594:3625  \"ERC1967InvalidAdmin(address(0))\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 3:3594:3625  \"ERC1967InvalidAdmin(address(0))\" */ shl(225, 0x3173bdd1))\n                /// @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\"\n                mstore(/** @src 3:3594:3625  \"ERC1967InvalidAdmin(address(0))\" */ 4, /** @src -1:-1:-1 */ 0)\n                /// @src 3:3594:3625  \"ERC1967InvalidAdmin(address(0))\"\n                revert(/** @src -1:-1:-1 */ 0, /** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ 36)\n            }\n            sstore(/** @src 3:2868:2934  \"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\" */ 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103, /** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ or(and(_7, not(sub(shl(160, 1), 1))), _6))\n            let _9 := mload(64)\n            let _10 := datasize(\"DmtpProxy_1291_deployed\")\n            codecopy(_9, dataoffset(\"DmtpProxy_1291_deployed\"), _10)\n            setimmutable(_9, \"1181\", mload(/** @src 12:4789:4839  \"_admin = address(new DmtpProxyAdmin(initialOwner))\" */ 128))\n            /// @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\"\n            return(_9, _10)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        function abi_decode_address_fromMemory(offset) -> value\n        {\n            value := mload(offset)\n            if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        }\n        /// @ast-id 946 @src 8:4421:5003  \"function verifyCallResultFromTarget(...\"\n        function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos) -> var_mpos\n        {\n            /// @src 8:4565:4577  \"bytes memory\"\n            var_mpos := /** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ 96\n            /// @src 8:4589:4997  \"if (!success) {...\"\n            switch /** @src 8:4593:4601  \"!success\" */ iszero(var_success)\n            case /** @src 8:4589:4997  \"if (!success) {...\" */ 0 {\n                /// @src 8:4841:4890  \"returndata.length == 0 && target.code.length == 0\"\n                let expr := /** @src 8:4841:4863  \"returndata.length == 0\" */ iszero(/** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ mload(/** @src 8:4841:4858  \"returndata.length\" */ var_returndata_mpos))\n                /// @src 8:4841:4890  \"returndata.length == 0 && target.code.length == 0\"\n                if expr\n                {\n                    expr := /** @src 8:4867:4890  \"target.code.length == 0\" */ iszero(/** @src 8:4867:4885  \"target.code.length\" */ extcodesize(var_target))\n                }\n                /// @src 8:4837:4956  \"if (returndata.length == 0 && target.code.length == 0) {...\"\n                if expr\n                {\n                    /// @src 8:4917:4941  \"AddressEmptyCode(target)\"\n                    mstore(/** @src 8:4862:4863  \"0\" */ 0x00, /** @src 8:4917:4941  \"AddressEmptyCode(target)\" */ shl(224, 0x9996b315))\n                    /// @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\"\n                    mstore(/** @src 8:4917:4941  \"AddressEmptyCode(target)\" */ 4, /** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ and(var_target, sub(shl(160, 1), 1)))\n                    /// @src 8:4917:4941  \"AddressEmptyCode(target)\"\n                    revert(/** @src 8:4862:4863  \"0\" */ 0x00, /** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ 36)\n                }\n                /// @src 8:4969:4986  \"return returndata\"\n                var_mpos := var_returndata_mpos\n                leave\n            }\n            default /// @src 8:4589:4997  \"if (!success) {...\"\n            {\n                /// @src 8:5670:6024  \"if (returndata.length > 0) {...\"\n                switch /** @src 8:5674:5695  \"returndata.length > 0\" */ iszero(iszero(/** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ mload(/** @src 8:5674:5691  \"returndata.length\" */ var_returndata_mpos)))\n                case /** @src 8:5670:6024  \"if (returndata.length > 0) {...\" */ 0 {\n                    /// @src 8:5994:6013  \"Errors.FailedCall()\"\n                    mstore(/** @src 8:5694:5695  \"0\" */ 0x00, /** @src 8:5994:6013  \"Errors.FailedCall()\" */ shl(224, 0xd6bda275))\n                    revert(/** @src 8:5694:5695  \"0\" */ 0x00, /** @src 8:5994:6013  \"Errors.FailedCall()\" */ 4)\n                }\n                default /// @src 8:5670:6024  \"if (returndata.length > 0) {...\"\n                {\n                    /// @src 8:5799:5957  \"assembly (\\\"memory-safe\\\") {...\"\n                    revert(add(32, var_returndata_mpos), mload(var_returndata_mpos))\n                }\n            }\n        }\n    }\n    /// @use-src 2:\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\", 3:\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\", 4:\"@openzeppelin/contracts/proxy/Proxy.sol\", 8:\"@openzeppelin/contracts/utils/Address.sol\", 11:\"@openzeppelin/contracts/utils/StorageSlot.sol\", 12:\"contracts/proxy/DmtpProxy.sol\"\n    object \"DmtpProxy_1291_deployed\" {\n        code {\n            {\n                /// @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\"\n                mstore(64, 128)\n                /// @src 12:5332:5684  \"if (msg.sender == _proxyAdmin()) {...\"\n                switch /** @src 12:5336:5363  \"msg.sender == _proxyAdmin()\" */ eq(/** @src 12:5336:5346  \"msg.sender\" */ caller(), /** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ and(/** @src 12:5120:5126  \"_admin\" */ loadimmutable(\"1181\"), /** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ sub(shl(160, 1), 1)))\n                case /** @src 12:5332:5684  \"if (msg.sender == _proxyAdmin()) {...\" */ 0 {\n                    /// @src 3:811:877  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\"\n                    let value := /** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ and(/** @src 3:811:877  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ sload(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc), /** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ sub(shl(160, 1), 1))\n                    /// @src 4:1019:1838  \"assembly {...\"\n                    calldatacopy(/** @src -1:-1:-1 */ 0, 0, /** @src 4:1019:1838  \"assembly {...\" */ calldatasize())\n                    let usr$result := delegatecall(gas(), value, /** @src -1:-1:-1 */ 0, /** @src 4:1019:1838  \"assembly {...\" */ calldatasize(), /** @src -1:-1:-1 */ 0, 0)\n                    /// @src 4:1019:1838  \"assembly {...\"\n                    returndatacopy(/** @src -1:-1:-1 */ 0, 0, /** @src 4:1019:1838  \"assembly {...\" */ returndatasize())\n                    switch usr$result\n                    case 0 {\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 4:1019:1838  \"assembly {...\" */ returndatasize())\n                    }\n                    default {\n                        return(/** @src -1:-1:-1 */ 0, /** @src 4:1019:1838  \"assembly {...\" */ returndatasize())\n                    }\n                }\n                default /// @src 12:5332:5684  \"if (msg.sender == _proxyAdmin()) {...\"\n                {\n                    /// @src 12:5379:5626  \"if (...\"\n                    switch /** @src 12:5400:5481  \"msg.sig !=...\" */ iszero(eq(/** @src 12:5400:5407  \"msg.sig\" */ and(calldataload(0), shl(224, 0xffffffff)), /** @src 12:5427:5481  \"ITransparentUpgradeableProxy.upgradeToAndCall.selector\" */ shl(225, 0x278f7943)))\n                    case /** @src 12:5379:5626  \"if (...\" */ 0 {\n                        fun_dispatchUpgradeToAndCall()\n                    }\n                    default {\n                        /// @src 12:5521:5545  \"ProxyDeniedAdminAccess()\"\n                        mstore(/** @src 12:5400:5407  \"msg.sig\" */ 0, /** @src 12:5521:5545  \"ProxyDeniedAdminAccess()\" */ shl(226, 0x34ad5dbb))\n                        revert(/** @src 12:5400:5407  \"msg.sig\" */ 0, /** @src 12:5521:5545  \"ProxyDeniedAdminAccess()\" */ 4)\n                    }\n                }\n                /// @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\"\n                stop()\n            }\n            function panic_error_0x41()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            function allocate_memory(size) -> memPtr\n            {\n                memPtr := mload(64)\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function array_allocation_size_bytes(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                size := add(and(add(length, 31), not(31)), 0x20)\n            }\n            /// @ast-id 1290 @src 12:5892:6143  \"function _dispatchUpgradeToAndCall() private {...\"\n            function fun_dispatchUpgradeToAndCall()\n            {\n                /// @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\"\n                if gt(/** @src 12:6029:6030  \"4\" */ 0x04, /** @src 12:6020:6028  \"msg.data\" */ calldatasize())\n                /// @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\"\n                {\n                    revert(/** @src 12:6020:6028  \"msg.data\" */ 0, 0)\n                }\n                /// @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\"\n                if slt(add(/** @src 12:6020:6028  \"msg.data\" */ calldatasize(), /** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ not(3)), 64)\n                {\n                    revert(/** @src 12:6020:6028  \"msg.data\" */ 0, 0)\n                }\n                /// @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\"\n                let value := calldataload(/** @src 12:6029:6030  \"4\" */ 0x04)\n                /// @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\"\n                let _1 := and(value, sub(shl(160, 1), 1))\n                if iszero(eq(value, _1))\n                {\n                    revert(/** @src 12:6020:6028  \"msg.data\" */ 0, 0)\n                }\n                /// @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\"\n                let offset := calldataload(36)\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert(/** @src 12:6020:6028  \"msg.data\" */ 0, 0)\n                }\n                /// @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\"\n                if iszero(slt(add(offset, 35), /** @src 12:6020:6028  \"msg.data\" */ calldatasize()))\n                /// @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\"\n                {\n                    revert(/** @src 12:6020:6028  \"msg.data\" */ 0, 0)\n                }\n                /// @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\"\n                let length := calldataload(add(/** @src 12:6029:6030  \"4\" */ 0x04, /** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ offset))\n                let array := allocate_memory(array_allocation_size_bytes(length))\n                mstore(array, length)\n                if gt(add(add(offset, length), 36), /** @src 12:6020:6028  \"msg.data\" */ calldatasize())\n                /// @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\"\n                {\n                    revert(/** @src 12:6020:6028  \"msg.data\" */ 0, 0)\n                }\n                /// @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\"\n                calldatacopy(add(array, 32), add(offset, 36), length)\n                mstore(add(add(array, length), 32), /** @src 12:6020:6028  \"msg.data\" */ 0)\n                /// @src 12:6131:6135  \"data\"\n                fun_upgradeToAndCall(/** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ _1, /** @src 12:6131:6135  \"data\" */ array)\n            }\n            /// @ast-id 315 @src 3:2264:2608  \"function upgradeToAndCall(address newImplementation, bytes memory data) internal {...\"\n            function fun_upgradeToAndCall(var_newImplementation, var_data_284_mpos)\n            {\n                /// @src 3:1744:1863  \"if (newImplementation.code.length == 0) {...\"\n                if /** @src 3:1748:1782  \"newImplementation.code.length == 0\" */ iszero(/** @src 3:1748:1777  \"newImplementation.code.length\" */ extcodesize(var_newImplementation))\n                /// @src 3:1744:1863  \"if (newImplementation.code.length == 0) {...\"\n                {\n                    /// @src 3:1805:1852  \"ERC1967InvalidImplementation(newImplementation)\"\n                    mstore(/** @src 3:1781:1782  \"0\" */ 0x00, /** @src 3:1805:1852  \"ERC1967InvalidImplementation(newImplementation)\" */ shl(224, 0x4c9c8ce3))\n                    /// @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\"\n                    mstore(/** @src 3:1805:1852  \"ERC1967InvalidImplementation(newImplementation)\" */ 4, /** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ and(var_newImplementation, sub(shl(160, 1), 1)))\n                    /// @src 3:1805:1852  \"ERC1967InvalidImplementation(newImplementation)\"\n                    revert(/** @src 3:1781:1782  \"0\" */ 0x00, /** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ 36)\n                }\n                let _1 := and(var_newImplementation, sub(shl(160, 1), 1))\n                sstore(/** @src 3:811:877  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc, /** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ or(and(sload(/** @src 3:811:877  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc), /** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ shl(160, 0xffffffffffffffffffffffff)), _1))\n                /// @src 3:2407:2443  \"IERC1967.Upgraded(newImplementation)\"\n                log2(/** @src 3:1781:1782  \"0\" */ 0x00, 0x00, /** @src 3:2407:2443  \"IERC1967.Upgraded(newImplementation)\" */ 0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b, _1)\n                /// @src 3:2454:2602  \"if (data.length > 0) {...\"\n                switch /** @src 3:2458:2473  \"data.length > 0\" */ iszero(iszero(/** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ mload(/** @src 3:2458:2469  \"data.length\" */ var_data_284_mpos)))\n                case /** @src 3:2454:2602  \"if (data.length > 0) {...\" */ 0 {\n                    /// @src 3:6159:6229  \"if (msg.value > 0) {...\"\n                    if /** @src 3:6163:6176  \"msg.value > 0\" */ iszero(iszero(/** @src 3:6163:6172  \"msg.value\" */ callvalue()))\n                    /// @src 3:6159:6229  \"if (msg.value > 0) {...\"\n                    {\n                        /// @src 3:6199:6218  \"ERC1967NonPayable()\"\n                        mstore(/** @src 3:1781:1782  \"0\" */ 0x00, /** @src 3:6199:6218  \"ERC1967NonPayable()\" */ shl(224, 0xb398979f))\n                        revert(/** @src 3:1781:1782  \"0\" */ 0x00, /** @src 3:6199:6218  \"ERC1967NonPayable()\" */ 4)\n                    }\n                }\n                default /// @src 3:2454:2602  \"if (data.length > 0) {...\"\n                {\n                    /// @src 3:2489:2542  \"Address.functionDelegateCall(newImplementation, data)\"\n                    pop(fun_functionDelegateCall(var_newImplementation, var_data_284_mpos))\n                }\n            }\n            /// @ast-id 906 @src 8:3900:4153  \"function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {...\"\n            function fun_functionDelegateCall(var_target, var_data_mpos) -> var_mpos\n            {\n                /// @src 8:4049:4074  \"target.delegatecall(data)\"\n                let expr_component := delegatecall(gas(), var_target, add(var_data_mpos, 0x20), mload(var_data_mpos), 0, 0)\n                let data := 0\n                /// @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\"\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _1 := returndatasize()\n                    let memPtr := allocate_memory(array_allocation_size_bytes(_1))\n                    mstore(memPtr, _1)\n                    data := memPtr\n                    returndatacopy(add(memPtr, /** @src 8:4049:4074  \"target.delegatecall(data)\" */ 0x20), 0, /** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ returndatasize())\n                }\n                /// @src 8:4084:4146  \"return verifyCallResultFromTarget(target, success, returndata)\"\n                var_mpos := /** @src 8:4091:4146  \"verifyCallResultFromTarget(target, success, returndata)\" */ fun_verifyCallResultFromTarget(var_target, expr_component, /** @src 8:4049:4074  \"target.delegatecall(data)\" */ data)\n            }\n            /// @ast-id 946 @src 8:4421:5003  \"function verifyCallResultFromTarget(...\"\n            function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos) -> var__mpos\n            {\n                /// @src 8:4565:4577  \"bytes memory\"\n                var__mpos := /** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ 96\n                /// @src 8:4589:4997  \"if (!success) {...\"\n                switch /** @src 8:4593:4601  \"!success\" */ iszero(var_success)\n                case /** @src 8:4589:4997  \"if (!success) {...\" */ 0 {\n                    /// @src 8:4841:4890  \"returndata.length == 0 && target.code.length == 0\"\n                    let expr := /** @src 8:4841:4863  \"returndata.length == 0\" */ iszero(/** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ mload(/** @src 8:4841:4858  \"returndata.length\" */ var_returndata_mpos))\n                    /// @src 8:4841:4890  \"returndata.length == 0 && target.code.length == 0\"\n                    if expr\n                    {\n                        expr := /** @src 8:4867:4890  \"target.code.length == 0\" */ iszero(/** @src 8:4867:4885  \"target.code.length\" */ extcodesize(var_target))\n                    }\n                    /// @src 8:4837:4956  \"if (returndata.length == 0 && target.code.length == 0) {...\"\n                    if expr\n                    {\n                        /// @src 8:4917:4941  \"AddressEmptyCode(target)\"\n                        mstore(/** @src 8:4862:4863  \"0\" */ 0x00, /** @src 8:4917:4941  \"AddressEmptyCode(target)\" */ shl(224, 0x9996b315))\n                        /// @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\"\n                        mstore(/** @src 8:4917:4941  \"AddressEmptyCode(target)\" */ 4, /** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ and(var_target, sub(shl(160, 1), 1)))\n                        /// @src 8:4917:4941  \"AddressEmptyCode(target)\"\n                        revert(/** @src 8:4862:4863  \"0\" */ 0x00, /** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ 36)\n                    }\n                    /// @src 8:4969:4986  \"return returndata\"\n                    var__mpos := var_returndata_mpos\n                    leave\n                }\n                default /// @src 8:4589:4997  \"if (!success) {...\"\n                {\n                    /// @src 8:5670:6024  \"if (returndata.length > 0) {...\"\n                    switch /** @src 8:5674:5695  \"returndata.length > 0\" */ iszero(iszero(/** @src 12:3842:6145  \"contract DmtpProxy is ERC1967Proxy {...\" */ mload(/** @src 8:5674:5691  \"returndata.length\" */ var_returndata_mpos)))\n                    case /** @src 8:5670:6024  \"if (returndata.length > 0) {...\" */ 0 {\n                        /// @src 8:5994:6013  \"Errors.FailedCall()\"\n                        mstore(/** @src 8:5694:5695  \"0\" */ 0x00, /** @src 8:5994:6013  \"Errors.FailedCall()\" */ shl(224, 0xd6bda275))\n                        revert(/** @src 8:5694:5695  \"0\" */ 0x00, /** @src 8:5994:6013  \"Errors.FailedCall()\" */ 4)\n                    }\n                    default /// @src 8:5670:6024  \"if (returndata.length > 0) {...\"\n                    {\n                        /// @src 8:5799:5957  \"assembly (\\\"memory-safe\\\") {...\"\n                        revert(add(32, var_returndata_mpos), mload(var_returndata_mpos))\n                    }\n                }\n            }\n        }\n        data \".metadata\" hex\"a164736f6c634300081c000a\"\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 6:\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\", 9:\"@openzeppelin/contracts/utils/Context.sol\", 13:\"contracts/proxy/DmtpProxyAdmin.sol\"\n    object \"DmtpProxyAdmin_1326\" {\n        code {\n            {\n                /// @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\"\n                let _1 := memoryguard(0x80)\n                if callvalue() { revert(0, 0) }\n                let programSize := datasize(\"DmtpProxyAdmin_1326\")\n                let argSize := sub(codesize(), programSize)\n                let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n                if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n                codecopy(_1, programSize, argSize)\n                if slt(sub(add(_1, argSize), _1), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\"\n                let value := mload(_1)\n                let _2 := and(value, sub(shl(160, 1), 1))\n                if iszero(eq(value, _2))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:1269:1364  \"if (initialOwner == address(0)) {...\"\n                if /** @src 0:1273:1299  \"initialOwner == address(0)\" */ iszero(/** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ _2)\n                /// @src 0:1269:1364  \"if (initialOwner == address(0)) {...\"\n                {\n                    /// @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\" */ shl(224, 0x1e4fbdf7))\n                    /// @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\"\n                    mstore(/** @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\" */ 4, /** @src -1:-1:-1 */ 0)\n                    /// @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ 36)\n                }\n                let _3 := sload(/** @src -1:-1:-1 */ 0)\n                /// @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\"\n                sstore(/** @src -1:-1:-1 */ 0, /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ or(and(_3, not(sub(shl(160, 1), 1))), _2))\n                /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                let _4 := /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ mload(64)\n                /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                log3(/** @src -1:-1:-1 */ 0, 0, /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ and(_3, sub(shl(160, 1), 1)), /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ _2)\n                /// @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\"\n                let _5 := datasize(\"DmtpProxyAdmin_1326_deployed\")\n                codecopy(_4, dataoffset(\"DmtpProxyAdmin_1326_deployed\"), _5)\n                return(_4, _5)\n            }\n        }\n        /// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 6:\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\", 9:\"@openzeppelin/contracts/utils/Context.sol\", 13:\"contracts/proxy/DmtpProxyAdmin.sol\"\n        object \"DmtpProxyAdmin_1326_deployed\" {\n            code {\n                {\n                    /// @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\"\n                    let _1 := memoryguard(0x80)\n                    mstore(64, _1)\n                    if iszero(lt(calldatasize(), 4))\n                    {\n                        let _2 := 0\n                        switch shr(224, calldataload(_2))\n                        case 0x05f38c71 {\n                            if callvalue() { revert(_2, _2) }\n                            if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                            let value0 := abi_decode_address()\n                            mstore(_1, shl(224, 0x5c60da1b))\n                            /// @src 13:487:527  \"address(proxy).staticcall(hex\\\"5c60da1b\\\")\"\n                            let expr_component := staticcall(gas(), value0, _1, /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ 4, _2, _2)\n                            /// @src 13:487:527  \"address(proxy).staticcall(hex\\\"5c60da1b\\\")\"\n                            let data := /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ _2\n                            switch returndatasize()\n                            case 0 { data := 96 }\n                            default {\n                                let _3 := returndatasize()\n                                let _4 := array_allocation_size_bytes(_3)\n                                let memPtr := mload(64)\n                                finalize_allocation(memPtr, _4)\n                                mstore(memPtr, _3)\n                                data := memPtr\n                                returndatacopy(add(memPtr, 32), _2, returndatasize())\n                            }\n                            let memPos := mload(64)\n                            mstore(memPos, iszero(iszero(expr_component)))\n                            return(memPos, 32)\n                        }\n                        case 0x715018a6 {\n                            if callvalue() { revert(_2, _2) }\n                            if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                            /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                            fun_checkOwner()\n                            /// @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\"\n                            let _5 := sload(_2)\n                            sstore(_2, and(_5, shl(160, 0xffffffffffffffffffffffff)))\n                            /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                            log3(/** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ _2, _2, /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ and(_5, sub(shl(160, 1), 1)), _2)\n                            return(_2, _2)\n                        }\n                        case 0x8da5cb5b {\n                            if callvalue() { revert(_2, _2) }\n                            if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                            let value := and(sload(_2), sub(shl(160, 1), 1))\n                            let memPos_1 := mload(64)\n                            mstore(memPos_1, value)\n                            return(memPos_1, 32)\n                        }\n                        case 0x9623609d {\n                            if slt(add(calldatasize(), not(3)), 96) { revert(_2, _2) }\n                            let value_1 := calldataload(4)\n                            let _6 := and(value_1, sub(shl(160, 1), 1))\n                            if iszero(eq(value_1, _6)) { revert(_2, _2) }\n                            let value_2 := _2\n                            value_2 := calldataload(36)\n                            let _7 := and(value_2, sub(shl(160, 1), 1))\n                            if iszero(eq(value_2, _7)) { revert(_2, _2) }\n                            let offset := calldataload(68)\n                            if gt(offset, 0xffffffffffffffff) { revert(_2, _2) }\n                            if iszero(slt(add(offset, 35), calldatasize())) { revert(_2, _2) }\n                            let length := calldataload(add(4, offset))\n                            let _8 := array_allocation_size_bytes(length)\n                            let memPtr_1 := mload(64)\n                            finalize_allocation(memPtr_1, _8)\n                            mstore(memPtr_1, length)\n                            if gt(add(add(offset, length), 36), calldatasize()) { revert(_2, _2) }\n                            calldatacopy(add(memPtr_1, 32), add(offset, 36), length)\n                            mstore(add(add(memPtr_1, length), 32), _2)\n                            /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                            fun_checkOwner()\n                            /// @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\"\n                            if iszero(extcodesize(_6))\n                            {\n                                /// @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\"\n                                revert(_2, _2)\n                            }\n                            /// @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\"\n                            let _9 := /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ mload(64)\n                            /// @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\"\n                            mstore(_9, /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ shl(225, 0x278f7943))\n                            mstore(/** @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\" */ add(_9, /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ 4), _7)\n                            mstore(add(/** @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\" */ _9, /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ 36), 64)\n                            /// @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\"\n                            let _10 := call(gas(), _6, /** @src 6:1923:1932  \"msg.value\" */ callvalue(), /** @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\" */ _9, sub(/** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ abi_encode_string(memPtr_1, add(/** @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\" */ _9, /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ 68)), /** @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\" */ _9), _9, /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ _2)\n                            /// @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\"\n                            if iszero(_10)\n                            {\n                                /// @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\"\n                                let pos := mload(64)\n                                returndatacopy(pos, _2, returndatasize())\n                                revert(pos, returndatasize())\n                            }\n                            /// @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\"\n                            if _10\n                            {\n                                finalize_allocation(_9, /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ _2)\n                                _2 := _2\n                            }\n                            return(_2, _2)\n                        }\n                        case 0xad3cb1cc {\n                            if callvalue() { revert(_2, _2) }\n                            if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                            let size := /** @src -1:-1:-1 */ _2\n                            /// @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\"\n                            let _11 := _2\n                            _11 := /** @src -1:-1:-1 */ _2\n                            /// @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\"\n                            size := 64\n                            let memPtr_2 := mload(64)\n                            finalize_allocation(memPtr_2, 64)\n                            mstore(memPtr_2, 5)\n                            mstore(add(memPtr_2, 32), \"5.0.0\")\n                            let memPos_2 := mload(64)\n                            mstore(memPos_2, 32)\n                            return(memPos_2, sub(abi_encode_string(memPtr_2, add(memPos_2, 32)), memPos_2))\n                        }\n                        case 0xf2fde38b {\n                            if callvalue() { revert(_2, _2) }\n                            if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                            let value0_1 := abi_decode_address()\n                            /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                            fun_checkOwner()\n                            /// @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\"\n                            let _12 := and(/** @src 0:2627:2649  \"newOwner == address(0)\" */ value0_1, /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ sub(shl(160, 1), 1))\n                            /// @src 0:2623:2714  \"if (newOwner == address(0)) {...\"\n                            if /** @src 0:2627:2649  \"newOwner == address(0)\" */ iszero(/** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ _12)\n                            /// @src 0:2623:2714  \"if (newOwner == address(0)) {...\"\n                            {\n                                /// @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                mstore(/** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ _2, /** @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\" */ shl(224, 0x1e4fbdf7))\n                                /// @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\"\n                                mstore(4, _2)\n                                /// @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                revert(/** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ _2, 36)\n                            }\n                            let _13 := sload(/** @src 0:3004:3010  \"_owner\" */ _2)\n                            /// @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\"\n                            sstore(/** @src 0:3004:3010  \"_owner\" */ _2, /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ or(and(_13, shl(160, 0xffffffffffffffffffffffff)), _12))\n                            /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                            log3(/** @src 0:3004:3010  \"_owner\" */ _2, _2, /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ and(_13, sub(shl(160, 1), 1)), /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ _12)\n                            /// @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\"\n                            return(_2, _2)\n                        }\n                    }\n                    revert(0, 0)\n                }\n                function abi_decode_address() -> value\n                {\n                    value := calldataload(4)\n                    if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                }\n                function finalize_allocation(memPtr, size)\n                {\n                    let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                    if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                }\n                function array_allocation_size_bytes(length) -> size\n                {\n                    if gt(length, 0xffffffffffffffff)\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    size := add(and(add(length, 31), not(31)), 0x20)\n                }\n                function abi_encode_string(value, pos) -> end\n                {\n                    let length := mload(value)\n                    mstore(pos, length)\n                    let i := 0\n                    for { } lt(i, length) { i := add(i, 0x20) }\n                    {\n                        mstore(add(add(pos, i), 0x20), mload(add(add(value, i), 0x20)))\n                    }\n                    mstore(add(add(pos, length), 0x20), 0)\n                    end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n                }\n                /// @ast-id 84 @src 0:1796:1958  \"function _checkOwner() internal view virtual {...\"\n                function fun_checkOwner()\n                {\n                    /// @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\"\n                    let value := and(sload(/** @src 0:1710:1716  \"_owner\" */ 0x00), /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ sub(shl(160, 1), 1))\n                    /// @src 0:1851:1952  \"if (owner() != _msgSender()) {...\"\n                    if /** @src 0:1855:1878  \"owner() != _msgSender()\" */ iszero(eq(/** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ value, /** @src 9:735:745  \"msg.sender\" */ caller()))\n                    /// @src 0:1851:1952  \"if (owner() != _msgSender()) {...\"\n                    {\n                        /// @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                        mstore(/** @src 0:1710:1716  \"_owner\" */ 0x00, /** @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ shl(224, 0x118cdaa7))\n                        /// @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\"\n                        mstore(/** @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ 4, /** @src 9:735:745  \"msg.sender\" */ caller())\n                        /// @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                        revert(/** @src 0:1710:1716  \"_owner\" */ 0x00, /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ 36)\n                    }\n                }\n            }\n            data \".metadata\" hex\"a164736f6c634300081c000a\"\n        }\n    }\n}\n","metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProxyDeniedAdminAccess\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that is upgradeable through an associated {ProxyAdmin} instance. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches the {ITransparentUpgradeableProxy-upgradeToAndCall} function exposed by the proxy itself. 2. If the admin calls the proxy, it can call the `upgradeToAndCall` function but any other call won't be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error indicating the proxy admin cannot fallback to the target implementation. These properties mean that the admin account can only be used for upgrading the proxy, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. For this reason, the proxy deploys an instance of {ProxyAdmin} and allows upgrades only if they come through it. You should think of the `ProxyAdmin` instance as the administrative interface of the proxy, including the ability to change who can trigger upgrades by transferring ownership. NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not inherit from that interface, and instead `upgradeToAndCall` is implicitly implemented using a custom dispatch mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to fully implement transparency without decoding reverts caused by selector clashes between the proxy and the implementation. NOTE: This proxy does not inherit from {Context} deliberately. The {ProxyAdmin} of this contract won't send a meta-transaction in any way, and any other meta-transaction setup should be made in the implementation contract. IMPORTANT: This contract avoids unnecessary storage reads by setting the admin only during construction as an immutable variable, preventing any changes thereafter. However, the admin slot defined in ERC-1967 can still be overwritten by the implementation logic pointed to by this proxy. In such cases, the contract may end up in an undesirable state where the admin slot is different from the actual admin. Relying on the value of the admin slot is generally fine if the implementation is trusted. WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the compiler will not check that there are no selector conflicts, due to the note above. A selector clash between any new function and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This could render the `upgradeToAndCall` function inaccessible, preventing upgradeability and compromising transparency.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"ProxyDeniedAdminAccess()\":[{\"details\":\"The proxy caller is the current admin, and can't fallback to the proxy target.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes an upgradeable proxy managed by an instance of a {ProxyAdmin} with an `initialOwner`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/proxy/DmtpProxy.sol\":\"DmtpProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0x0a8a5b994d4c4da9f61d128945cc8c9e60dcbc72bf532f72ae42a48ea90eed9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e63ae15b6b1079b9d3c73913424d4278139f9e9c9658316675b9c48d5883a50d\",\"dweb:/ipfs/QmWLxBYfp8j1YjNMabWgv75ELTaK2eEYEEGx7qsJbxVZZq\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":{\"keccak256\":\"0xeb19221d51578ea190f0b7d807c5f196db6ff4eca90fee396f45ce9669080ba0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e4ca4196dab20274d1276d902d17034065f014aeebf496f20e39e760899650b0\",\"dweb:/ipfs/QmXFoF93GmZgZHbUvSqLjBGnQ3MY429Bnvk7SvLKEUsEAN\"]},\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x724b755843cff10a8e1503d374b857c9e7648be24e7acf1e5bee0584f1b0505c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740ad3ba1c12e426ea32cf234f445431a13efa8dbed38b53c869237e31fc8347\",\"dweb:/ipfs/QmQ3UKUnBQn4gjxjDNGuDLQWuQqcxWzyj1HzwjFgjAJBqh\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"contracts/proxy/DmtpProxy.sol\":{\"keccak256\":\"0x8e106d5d8f5802d81c4351e62f9dd75db951569b63a7938daf5a3f035cc3711d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0cbd3b157c0836bc88ebb3288173bd11324120c97f130937c8a2aa62d8617786\",\"dweb:/ipfs/QmTdLE7KBDjtPZvJtQ1kV9vU4P2pEbS9afb5gnYxRucn2r\"]},\"contracts/proxy/DmtpProxyAdmin.sol\":{\"keccak256\":\"0x0755200a6be852370bb7996b2ad3901221fb70ff5a9b315f5fd2cc41e58d6977\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df9455213208435ec433a9aef31fcd0c0d632d0e72d49edf42aafac4ef871875\",\"dweb:/ipfs/QmTu4oAh4XaGhHQSr98dfNW1DwfpZyYPVtPqZdG4Z3TJSj\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/proxy/DmtpProxyAdmin.sol":{"DmtpProxyAdmin":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"proxy","type":"address"}],"name":"isAdminOf","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract ITransparentUpgradeableProxy","name":"proxy","type":"address"},{"internalType":"address","name":"implementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"errors":{"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"upgradeAndCall(address,address,bytes)":{"details":"Upgrades `proxy` to `implementation` and calls a function on the new implementation. See {TransparentUpgradeableProxy-_dispatchUpgradeToAndCall}. Requirements: - This contract must be the admin of `proxy`. - If `data` is empty, `msg.value` must be zero."}},"version":1},"evm":{"assembly":"    /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n  0x80\n  jumpi(tag_7, callvalue)\n  0x1f\n  bytecodeSize\n  codesize\n  dup2\n  swap1\n  sub\n  swap2\n  dup3\n  add\n  not(0x1f)\n  and\n  dup4\n  add\n  swap2\n  sub(shl(0x40, 0x01), 0x01)\n  dup4\n  gt\n  dup5\n  dup5\n  lt\n  or\n  tag_3\n  jumpi\n  dup1\n  dup5\n  swap3\n  0x20\n  swap5\n  0x40\n  mstore\n  dup4\n  codecopy\n  dup2\n  add\n  sub\n  slt\n  tag_7\n  jumpi\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n  dup2\n  and\n  swap1\n  dup2\n  swap1\n  sub\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup1\n  iszero\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n  0x00\n    /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup2\n  and\n  dup4\n  or\n  dup3\n  sstore\n  mload(0x40)\n  swap3\n  swap2\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap2\n  and\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n  dup1\n  log3\n    /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mstore(0x00, shl(0xe0, 0x1e4fbdf7))\n  0x00\n  0x04\n    /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n  mstore\n  0x24\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  revert\n    /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\ntag_7:\n  0x00\n  dup1\n  revert\ntag_3:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n  revert(0x00, 0x24)\nstop\n\nsub_0: assembly {\n        /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_6, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_6:\n      0x00\n      swap1\n      dup2\n      calldataload\n      0xe0\n      shr\n      swap1\n      dup2\n      0x05f38c71\n      eq\n      tag_8\n      jumpi\n      pop\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x9623609d\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xad3cb1cc\n      eq\n      tag_16\n      jumpi\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      jumpi(tag_22, callvalue)\n      jumpi(tag_22, slt(add(not(0x03), calldatasize), 0x20))\n      tag_24\n      tag_1\n      jump\t// in\n    tag_24:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_25\n      tag_5\n      jump\t// in\n    tag_25:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup1\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_26\n      jumpi\n        /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n      dup2\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup2\n      and\n      dup3\n      or\n      dup4\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n        /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n      dup4\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n      dup1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_26:\n      shl(0xe0, 0x1e4fbdf7)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      dup3\n      mstore\n        /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n      0x04\n      dup3\n      swap1\n      mstore\n      0x24\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      dup3\n      revert\n        /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n    tag_22:\n      dup1\n      revert\n    tag_16:\n      pop\n      jumpi(tag_22, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_22\n      jumpi\n      pop\n      tag_32\n      mload(0x40)\n      tag_33\n      0x40\n      dup3\n      tag_2\n      jump\t// in\n    tag_33:\n      0x05\n      dup2\n      mstore\n      shl(0xdc, 0x0352e302e3)\n      0x20\n      dup3\n      add\n      mstore\n      mload(0x40)\n      swap2\n      dup3\n      swap2\n      0x20\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      swap1\n      tag_4\n      jump\t// in\n    tag_32:\n      sub\n      swap1\n      return\n    tag_14:\n      pop\n      jumpi(tag_22, slt(add(not(0x03), calldatasize), 0x60))\n      calldataload(0x04)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      swap1\n      dup2\n      swap1\n      sub\n      tag_38\n      jumpi\n      dup2\n      calldataload(0x24)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      swap1\n      dup2\n      swap1\n      sub\n      tag_38\n      jumpi\n      calldataload(0x44)\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_49\n      jumpi\n      calldatasize\n      0x23\n      dup3\n      add\n      slt\n      iszero\n      tag_49\n      jumpi\n      dup1\n      0x04\n      add\n      calldataload\n      tag_44\n      dup2\n      tag_3\n      jump\t// in\n    tag_44:\n      swap2\n      tag_45\n      mload(0x40)\n      swap4\n      dup5\n      tag_2\n      jump\t// in\n    tag_45:\n      dup2\n      dup4\n      mstore\n      calldatasize\n      0x24\n      dup4\n      dup4\n      add\n      add\n      gt\n      tag_46\n      jumpi\n      dup2\n      dup6\n      swap3\n      0x24\n      0x20\n      swap4\n      add\n      dup4\n      dup7\n      add\n      calldatacopy\n      dup4\n      add\n      add\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_48\n      tag_5\n      jump\t// in\n    tag_48:\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1893:1955  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n      dup4\n      extcodesize\n      iszero\n      tag_49\n      jumpi\n        /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n      tag_51\n      swap4\n      dup4\n      swap3\n      mload(0x40)\n      dup1\n      swap7\n      dup2\n      swap5\n      dup3\n      swap4\n      shl(0xe1, 0x278f7943)\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1893:1955  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n      dup5\n      mstore\n        /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n      0x04\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1893:1955  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n      dup5\n      add\n        /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n      mstore\n      0x40\n      0x24\n      dup5\n      add\n      mstore\n      0x44\n      dup4\n      add\n      swap1\n      tag_4\n      jump\t// in\n    tag_51:\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1893:1955  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n      sub\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1923:1932  msg.value */\n      swap2\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1893:1955  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n      swap1\n      gas\n      call\n      dup1\n      iszero\n      tag_52\n      jumpi\n      tag_54\n      jumpi\n        /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n      dup1\n      return\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1893:1955  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n    tag_54:\n      tag_56\n      swap2\n      tag_2\n      jump\t// in\n    tag_56:\n      codesize\n      dup2\n        /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n      dup1\n      return\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1893:1955  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n    tag_52:\n        /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n      pop\n      mload(0x40)\n      swap1\n      returndatasize\n      swap1\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1893:1955  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n    tag_49:\n        /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n      dup3\n      dup1\n      revert\n    tag_46:\n      dup5\n      dup1\n      revert\n    tag_38:\n      pop\n      dup1\n      revert\n    tag_12:\n      pop\n      jumpi(tag_22, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_22\n      jumpi\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_10:\n      pop\n      jumpi(tag_22, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_22\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_65\n      tag_5\n      jump\t// in\n    tag_65:\n        /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup2\n      and\n      dup3\n      sstore\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n        /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n      dup3\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n      dup1\n      return\n    tag_8:\n      swap1\n      pop\n      jumpi(tag_38, callvalue)\n      jumpi(tag_38, slt(add(not(0x03), calldatasize), 0x20))\n      swap1\n      dup1\n      dup1\n      0x04\n      0x20\n      swap5\n      tag_70\n      tag_1\n      jump\t// in\n    tag_70:\n      shl(0xe0, 0x5c60da1b)\n      dup3\n      mstore\n        /* \"contracts/proxy/DmtpProxyAdmin.sol\":487:527  address(proxy).staticcall(hex\"5c60da1b\") */\n      gas\n      staticcall\n      swap1\n        /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n      jumpi(tag_71, iszero(returndatasize))\n      returndatasize\n      swap1\n      tag_73\n      dup3\n      tag_3\n      jump\t// in\n    tag_73:\n      swap2\n      tag_74\n      mload(0x40)\n      swap4\n      dup5\n      tag_2\n      jump\t// in\n    tag_74:\n      dup3\n      mstore\n      dup4\n      returndatasize\n      swap3\n      add\n      returndatacopy\n    tag_75:\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_71:\n      pop\n      jump(tag_75)\n    tag_1:\n      calldataload(0x04)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_76\n      jumpi\n      jump\t// out\n    tag_76:\n      0x00\n      dup1\n      revert\n    tag_2:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_78\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_78:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_3:\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_78\n      jumpi\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      swap1\n      jump\t// out\n    tag_4:\n      swap2\n      swap1\n      dup3\n      mload\n      swap3\n      dup4\n      dup3\n      mstore\n      0x00\n    tag_82:\n      dup5\n      dup2\n      lt\n      tag_83\n      jumpi\n      pop\n      pop\n      dup3\n      0x00\n      0x20\n      dup1\n      swap5\n      swap6\n      dup5\n      add\n      add\n      mstore\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      add\n      add\n      swap1\n      jump\t// out\n    tag_83:\n      dup1\n      0x20\n      dup1\n      swap3\n      dup5\n      add\n      add\n      mload\n      dup3\n      dup3\n      dup7\n      add\n      add\n      mstore\n      add\n      jump(tag_82)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n        /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_85\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      shl(0xe0, 0x118cdaa7)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n        /* \"contracts/proxy/DmtpProxyAdmin.sol\":127:560  contract DmtpProxyAdmin is ProxyAdmin {... */\n      mstore\n      0x24\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      revert\n\n    auxdata: 0xa164736f6c634300081c000a\n}\n","bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60803460bc57601f6104e738819003918201601f19168301916001600160401b0383118484101760c15780849260209460405283398101031260bc57516001600160a01b0381169081900360bc57801560a657600080546001600160a01b031981168317825560405192916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a361040f90816100d88239f35b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b600090813560e01c90816305f38c71146102c257508063715018a6146102685780638da5cb5b146102415780639623609d14610138578063ad3cb1cc146100eb5763f2fde38b1461006357600080fd5b346100e85760203660031901126100e85761007c610329565b6100846103d9565b6001600160a01b031680156100d45781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b80fd5b50346100e857806003193601126100e8575061013460405161010e604082610344565b60058152640352e302e360dc1b6020820152604051918291602083526020830190610398565b0390f35b5060603660031901126100e8576004356001600160a01b0381169081900361023d57816024356001600160a01b0381169081900361023d5760443567ffffffffffffffff8111610235573660238201121561023557806004013561019b8161037c565b916101a96040519384610344565b81835236602483830101116102395781859260246020930183860137830101526101d16103d9565b833b156102355761020793839260405180968194829363278f794360e11b84526004840152604060248401526044830190610398565b039134905af180156102285761021a5780f35b61022391610344565b388180f35b50604051903d90823e3d90fd5b8280fd5b8480fd5b5080fd5b50346100e857806003193601126100e857546040516001600160a01b039091168152602090f35b50346100e857806003193601126100e8576102816103d9565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b90503461023d57602036600319011261023d5790808060046020946102e5610329565b635c60da1b60e01b82525afa903d15610323573d906103038261037c565b916103116040519384610344565b8252833d92013e5b6040519015158152f35b50610319565b600435906001600160a01b038216820361033f57565b600080fd5b90601f8019910116810190811067ffffffffffffffff82111761036657604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161036657601f01601f191660200190565b919082519283825260005b8481106103c4575050826000602080949584010152601f8019910116010190565b806020809284010151828286010152016103a3565b6000546001600160a01b031633036103ed57565b63118cdaa760e01b6000523360045260246000fdfea164736f6c634300081c000a","opcodes":"PUSH1 0x80 CALLVALUE PUSH1 0xBC JUMPI PUSH1 0x1F PUSH2 0x4E7 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH1 0xC1 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH1 0xBC JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH1 0xBC JUMPI DUP1 ISZERO PUSH1 0xA6 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH2 0x40F SWAP1 DUP2 PUSH2 0xD8 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x5F38C71 EQ PUSH2 0x2C2 JUMPI POP DUP1 PUSH4 0x715018A6 EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x9623609D EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0xEB JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE8 JUMPI PUSH2 0x7C PUSH2 0x329 JUMP JUMPDEST PUSH2 0x84 PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xD4 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 OR DUP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE8 JUMPI POP PUSH2 0x134 PUSH1 0x40 MLOAD PUSH2 0x10E PUSH1 0x40 DUP3 PUSH2 0x344 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x352E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x398 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE8 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x23D JUMPI DUP2 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x23D JUMPI PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x235 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x235 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x19B DUP2 PUSH2 0x37C JUMP JUMPDEST SWAP2 PUSH2 0x1A9 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x344 JUMP JUMPDEST DUP2 DUP4 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x239 JUMPI DUP2 DUP6 SWAP3 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH2 0x1D1 PUSH2 0x3D9 JUMP JUMPDEST DUP4 EXTCODESIZE ISZERO PUSH2 0x235 JUMPI PUSH2 0x207 SWAP4 DUP4 SWAP3 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP5 DUP3 SWAP4 PUSH4 0x278F7943 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP1 PUSH2 0x398 JUMP JUMPDEST SUB SWAP2 CALLVALUE SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x228 JUMPI PUSH2 0x21A JUMPI DUP1 RETURN JUMPDEST PUSH2 0x223 SWAP2 PUSH2 0x344 JUMP JUMPDEST CODESIZE DUP2 DUP1 RETURN JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE8 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0xE8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE8 JUMPI PUSH2 0x281 PUSH2 0x3D9 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI SWAP1 DUP1 DUP1 PUSH1 0x4 PUSH1 0x20 SWAP5 PUSH2 0x2E5 PUSH2 0x329 JUMP JUMPDEST PUSH4 0x5C60DA1B PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x323 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x303 DUP3 PUSH2 0x37C JUMP JUMPDEST SWAP2 PUSH2 0x311 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x344 JUMP JUMPDEST DUP3 MSTORE DUP4 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP PUSH2 0x319 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x33F JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x366 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x366 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x3C4 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x3ED JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP ","sourceMap":"127:433:13:-:0;;;;;;;;;;;;;-1:-1:-1;;127:433:13;;;;-1:-1:-1;;;;;127:433:13;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;127:433:13;;;;;;;;1273:26:0;;1269:95;;-1:-1:-1;127:433:13;;-1:-1:-1;;;;;;127:433:13;;;;;;;;;;-1:-1:-1;;;;;127:433:13;;;;3052:40:0;;-1:-1:-1;3052:40:0;127:433:13;;;;;;;1269:95:0;1322:31;;;-1:-1:-1;1322:31:0;-1:-1:-1;1322:31:0;127:433:13;;-1:-1:-1;1322:31:0;127:433:13;-1:-1:-1;127:433:13;;;;;;-1:-1:-1;127:433:13;;;;;-1:-1:-1;127:433:13"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":809,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_string":{"entryPoint":920,"id":null,"parameterSlots":2,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":892,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":836,"id":null,"parameterSlots":2,"returnSlots":0},"fun_checkOwner":{"entryPoint":985,"id":84,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b600090813560e01c90816305f38c71146102c257508063715018a6146102685780638da5cb5b146102415780639623609d14610138578063ad3cb1cc146100eb5763f2fde38b1461006357600080fd5b346100e85760203660031901126100e85761007c610329565b6100846103d9565b6001600160a01b031680156100d45781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b80fd5b50346100e857806003193601126100e8575061013460405161010e604082610344565b60058152640352e302e360dc1b6020820152604051918291602083526020830190610398565b0390f35b5060603660031901126100e8576004356001600160a01b0381169081900361023d57816024356001600160a01b0381169081900361023d5760443567ffffffffffffffff8111610235573660238201121561023557806004013561019b8161037c565b916101a96040519384610344565b81835236602483830101116102395781859260246020930183860137830101526101d16103d9565b833b156102355761020793839260405180968194829363278f794360e11b84526004840152604060248401526044830190610398565b039134905af180156102285761021a5780f35b61022391610344565b388180f35b50604051903d90823e3d90fd5b8280fd5b8480fd5b5080fd5b50346100e857806003193601126100e857546040516001600160a01b039091168152602090f35b50346100e857806003193601126100e8576102816103d9565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b90503461023d57602036600319011261023d5790808060046020946102e5610329565b635c60da1b60e01b82525afa903d15610323573d906103038261037c565b916103116040519384610344565b8252833d92013e5b6040519015158152f35b50610319565b600435906001600160a01b038216820361033f57565b600080fd5b90601f8019910116810190811067ffffffffffffffff82111761036657604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161036657601f01601f191660200190565b919082519283825260005b8481106103c4575050826000602080949584010152601f8019910116010190565b806020809284010151828286010152016103a3565b6000546001600160a01b031633036103ed57565b63118cdaa760e01b6000523360045260246000fdfea164736f6c634300081c000a","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x5F38C71 EQ PUSH2 0x2C2 JUMPI POP DUP1 PUSH4 0x715018A6 EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x9623609D EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0xEB JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE8 JUMPI PUSH2 0x7C PUSH2 0x329 JUMP JUMPDEST PUSH2 0x84 PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xD4 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 OR DUP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE8 JUMPI POP PUSH2 0x134 PUSH1 0x40 MLOAD PUSH2 0x10E PUSH1 0x40 DUP3 PUSH2 0x344 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x352E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x398 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE8 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x23D JUMPI DUP2 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x23D JUMPI PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x235 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x235 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x19B DUP2 PUSH2 0x37C JUMP JUMPDEST SWAP2 PUSH2 0x1A9 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x344 JUMP JUMPDEST DUP2 DUP4 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x239 JUMPI DUP2 DUP6 SWAP3 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH2 0x1D1 PUSH2 0x3D9 JUMP JUMPDEST DUP4 EXTCODESIZE ISZERO PUSH2 0x235 JUMPI PUSH2 0x207 SWAP4 DUP4 SWAP3 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP5 DUP3 SWAP4 PUSH4 0x278F7943 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP1 PUSH2 0x398 JUMP JUMPDEST SUB SWAP2 CALLVALUE SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x228 JUMPI PUSH2 0x21A JUMPI DUP1 RETURN JUMPDEST PUSH2 0x223 SWAP2 PUSH2 0x344 JUMP JUMPDEST CODESIZE DUP2 DUP1 RETURN JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE8 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0xE8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE8 JUMPI PUSH2 0x281 PUSH2 0x3D9 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x23D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23D JUMPI SWAP1 DUP1 DUP1 PUSH1 0x4 PUSH1 0x20 SWAP5 PUSH2 0x2E5 PUSH2 0x329 JUMP JUMPDEST PUSH4 0x5C60DA1B PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x323 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x303 DUP3 PUSH2 0x37C JUMP JUMPDEST SWAP2 PUSH2 0x311 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x344 JUMP JUMPDEST DUP3 MSTORE DUP4 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP PUSH2 0x319 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x33F JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x366 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x366 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x3C4 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x3ED JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP ","sourceMap":"127:433:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;127:433:13;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;127:433:13;2627:22:0;;2623:91;;127:433:13;;-1:-1:-1;;;;;;127:433:13;;;;;;-1:-1:-1;;;;;127:433:13;3052:40:0;127:433:13;;3052:40:0;127:433:13;;2623:91:0;-1:-1:-1;;;2672:31:0;;127:433:13;;;;;2672:31:0;;127:433:13;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;127:433:13;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;127:433:13;;-1:-1:-1;;127:433:13;;;;;;-1:-1:-1;;;;;127:433:13;;;;;;;;;;;-1:-1:-1;;;;;127:433:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;1893::6;;;;;127:433:13;;;;;;;;;;;;;;;1893:62:6;;127:433:13;1893:62:6;;127:433:13;;;;;;;;;;;:::i;:::-;1893:62:6;1923:9;;1893:62;;;;;;;;;127:433:13;;1893:62:6;;;;:::i;:::-;;;127:433:13;;1893:62:6;127:433:13;;;;;;;;;;;1893:62:6;127:433:13;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;127:433:13;;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;127:433:13;;-1:-1:-1;;;;;;127:433:13;;;;;;-1:-1:-1;;;;;127:433:13;3052:40:0;127:433:13;;3052:40:0;127:433:13;;;;;;;;;;-1:-1:-1;;127:433:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;127:433:13;;487:40;;;127:433;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;127:433:13;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;127:433:13;;;;;-1:-1:-1;127:433:13;;;;;;;;;-1:-1:-1;;127:433:13;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;1796:162:0;1710:6;127:433:13;-1:-1:-1;;;;;127:433:13;735:10:9;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;;;1710:6;1901:40;735:10:9;1901:40:0;127:433:13;;1710:6:0;1901:40"},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","isAdminOf(address)":"05f38c71","owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","upgradeAndCall(address,address,bytes)":"9623609d"}},"irOptimized":"/// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 6:\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\", 9:\"@openzeppelin/contracts/utils/Context.sol\", 13:\"contracts/proxy/DmtpProxyAdmin.sol\"\nobject \"DmtpProxyAdmin_1326\" {\n    code {\n        {\n            /// @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\"\n            let _1 := memoryguard(0x80)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"DmtpProxyAdmin_1326\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 32)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\"\n            let value := mload(_1)\n            let _2 := and(value, sub(shl(160, 1), 1))\n            if iszero(eq(value, _2))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:1269:1364  \"if (initialOwner == address(0)) {...\"\n            if /** @src 0:1273:1299  \"initialOwner == address(0)\" */ iszero(/** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ _2)\n            /// @src 0:1269:1364  \"if (initialOwner == address(0)) {...\"\n            {\n                /// @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\" */ shl(224, 0x1e4fbdf7))\n                /// @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\"\n                mstore(/** @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\" */ 4, /** @src -1:-1:-1 */ 0)\n                /// @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                revert(/** @src -1:-1:-1 */ 0, /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ 36)\n            }\n            let _3 := sload(/** @src -1:-1:-1 */ 0)\n            /// @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\"\n            sstore(/** @src -1:-1:-1 */ 0, /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ or(and(_3, not(sub(shl(160, 1), 1))), _2))\n            /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n            let _4 := /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ mload(64)\n            /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n            log3(/** @src -1:-1:-1 */ 0, 0, /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ and(_3, sub(shl(160, 1), 1)), /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ _2)\n            /// @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\"\n            let _5 := datasize(\"DmtpProxyAdmin_1326_deployed\")\n            codecopy(_4, dataoffset(\"DmtpProxyAdmin_1326_deployed\"), _5)\n            return(_4, _5)\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 6:\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\", 9:\"@openzeppelin/contracts/utils/Context.sol\", 13:\"contracts/proxy/DmtpProxyAdmin.sol\"\n    object \"DmtpProxyAdmin_1326_deployed\" {\n        code {\n            {\n                /// @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    switch shr(224, calldataload(_2))\n                    case 0x05f38c71 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        let value0 := abi_decode_address()\n                        mstore(_1, shl(224, 0x5c60da1b))\n                        /// @src 13:487:527  \"address(proxy).staticcall(hex\\\"5c60da1b\\\")\"\n                        let expr_component := staticcall(gas(), value0, _1, /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ 4, _2, _2)\n                        /// @src 13:487:527  \"address(proxy).staticcall(hex\\\"5c60da1b\\\")\"\n                        let data := /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ _2\n                        switch returndatasize()\n                        case 0 { data := 96 }\n                        default {\n                            let _3 := returndatasize()\n                            let _4 := array_allocation_size_bytes(_3)\n                            let memPtr := mload(64)\n                            finalize_allocation(memPtr, _4)\n                            mstore(memPtr, _3)\n                            data := memPtr\n                            returndatacopy(add(memPtr, 32), _2, returndatasize())\n                        }\n                        let memPos := mload(64)\n                        mstore(memPos, iszero(iszero(expr_component)))\n                        return(memPos, 32)\n                    }\n                    case 0x715018a6 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\"\n                        let _5 := sload(_2)\n                        sstore(_2, and(_5, shl(160, 0xffffffffffffffffffffffff)))\n                        /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ _2, _2, /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ and(_5, sub(shl(160, 1), 1)), _2)\n                        return(_2, _2)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let value := and(sload(_2), sub(shl(160, 1), 1))\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, value)\n                        return(memPos_1, 32)\n                    }\n                    case 0x9623609d {\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_2, _2) }\n                        let value_1 := calldataload(4)\n                        let _6 := and(value_1, sub(shl(160, 1), 1))\n                        if iszero(eq(value_1, _6)) { revert(_2, _2) }\n                        let value_2 := _2\n                        value_2 := calldataload(36)\n                        let _7 := and(value_2, sub(shl(160, 1), 1))\n                        if iszero(eq(value_2, _7)) { revert(_2, _2) }\n                        let offset := calldataload(68)\n                        if gt(offset, 0xffffffffffffffff) { revert(_2, _2) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(_2, _2) }\n                        let length := calldataload(add(4, offset))\n                        let _8 := array_allocation_size_bytes(length)\n                        let memPtr_1 := mload(64)\n                        finalize_allocation(memPtr_1, _8)\n                        mstore(memPtr_1, length)\n                        if gt(add(add(offset, length), 36), calldatasize()) { revert(_2, _2) }\n                        calldatacopy(add(memPtr_1, 32), add(offset, 36), length)\n                        mstore(add(add(memPtr_1, length), 32), _2)\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\"\n                        if iszero(extcodesize(_6))\n                        {\n                            /// @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\"\n                            revert(_2, _2)\n                        }\n                        /// @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\"\n                        let _9 := /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ mload(64)\n                        /// @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\"\n                        mstore(_9, /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ shl(225, 0x278f7943))\n                        mstore(/** @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\" */ add(_9, /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ 4), _7)\n                        mstore(add(/** @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\" */ _9, /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ 36), 64)\n                        /// @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\"\n                        let _10 := call(gas(), _6, /** @src 6:1923:1932  \"msg.value\" */ callvalue(), /** @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\" */ _9, sub(/** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ abi_encode_string(memPtr_1, add(/** @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\" */ _9, /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ 68)), /** @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\" */ _9), _9, /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ _2)\n                        /// @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\"\n                        if iszero(_10)\n                        {\n                            /// @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, _2, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 6:1893:1955  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\"\n                        if _10\n                        {\n                            finalize_allocation(_9, /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ _2)\n                            _2 := _2\n                        }\n                        return(_2, _2)\n                    }\n                    case 0xad3cb1cc {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let size := /** @src -1:-1:-1 */ _2\n                        /// @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\"\n                        let _11 := _2\n                        _11 := /** @src -1:-1:-1 */ _2\n                        /// @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\"\n                        size := 64\n                        let memPtr_2 := mload(64)\n                        finalize_allocation(memPtr_2, 64)\n                        mstore(memPtr_2, 5)\n                        mstore(add(memPtr_2, 32), \"5.0.0\")\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, 32)\n                        return(memPos_2, sub(abi_encode_string(memPtr_2, add(memPos_2, 32)), memPos_2))\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        let value0_1 := abi_decode_address()\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\"\n                        let _12 := and(/** @src 0:2627:2649  \"newOwner == address(0)\" */ value0_1, /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ sub(shl(160, 1), 1))\n                        /// @src 0:2623:2714  \"if (newOwner == address(0)) {...\"\n                        if /** @src 0:2627:2649  \"newOwner == address(0)\" */ iszero(/** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ _12)\n                        /// @src 0:2623:2714  \"if (newOwner == address(0)) {...\"\n                        {\n                            /// @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                            mstore(/** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ _2, /** @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\" */ shl(224, 0x1e4fbdf7))\n                            /// @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\"\n                            mstore(4, _2)\n                            /// @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                            revert(/** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ _2, 36)\n                        }\n                        let _13 := sload(/** @src 0:3004:3010  \"_owner\" */ _2)\n                        /// @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\"\n                        sstore(/** @src 0:3004:3010  \"_owner\" */ _2, /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ or(and(_13, shl(160, 0xffffffffffffffffffffffff)), _12))\n                        /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 0:3004:3010  \"_owner\" */ _2, _2, /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ and(_13, sub(shl(160, 1), 1)), /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ _12)\n                        /// @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\"\n                        return(_2, _2)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function array_allocation_size_bytes(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(and(add(length, 31), not(31)), 0x20)\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 0x20) }\n                {\n                    mstore(add(add(pos, i), 0x20), mload(add(add(value, i), 0x20)))\n                }\n                mstore(add(add(pos, length), 0x20), 0)\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            /// @ast-id 84 @src 0:1796:1958  \"function _checkOwner() internal view virtual {...\"\n            function fun_checkOwner()\n            {\n                /// @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\"\n                let value := and(sload(/** @src 0:1710:1716  \"_owner\" */ 0x00), /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ sub(shl(160, 1), 1))\n                /// @src 0:1851:1952  \"if (owner() != _msgSender()) {...\"\n                if /** @src 0:1855:1878  \"owner() != _msgSender()\" */ iszero(eq(/** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ value, /** @src 9:735:745  \"msg.sender\" */ caller()))\n                /// @src 0:1851:1952  \"if (owner() != _msgSender()) {...\"\n                {\n                    /// @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                    mstore(/** @src 0:1710:1716  \"_owner\" */ 0x00, /** @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ shl(224, 0x118cdaa7))\n                    /// @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\"\n                    mstore(/** @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ 4, /** @src 9:735:745  \"msg.sender\" */ caller())\n                    /// @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                    revert(/** @src 0:1710:1716  \"_owner\" */ 0x00, /** @src 13:127:560  \"contract DmtpProxyAdmin is ProxyAdmin {...\" */ 36)\n                }\n            }\n        }\n        data \".metadata\" hex\"a164736f6c634300081c000a\"\n    }\n}\n","metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"}],\"name\":\"isAdminOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeAndCall(address,address,bytes)\":{\"details\":\"Upgrades `proxy` to `implementation` and calls a function on the new implementation. See {TransparentUpgradeableProxy-_dispatchUpgradeToAndCall}. Requirements: - This contract must be the admin of `proxy`. - If `data` is empty, `msg.value` must be zero.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/proxy/DmtpProxyAdmin.sol\":\"DmtpProxyAdmin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0x0a8a5b994d4c4da9f61d128945cc8c9e60dcbc72bf532f72ae42a48ea90eed9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e63ae15b6b1079b9d3c73913424d4278139f9e9c9658316675b9c48d5883a50d\",\"dweb:/ipfs/QmWLxBYfp8j1YjNMabWgv75ELTaK2eEYEEGx7qsJbxVZZq\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":{\"keccak256\":\"0xeb19221d51578ea190f0b7d807c5f196db6ff4eca90fee396f45ce9669080ba0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e4ca4196dab20274d1276d902d17034065f014aeebf496f20e39e760899650b0\",\"dweb:/ipfs/QmXFoF93GmZgZHbUvSqLjBGnQ3MY429Bnvk7SvLKEUsEAN\"]},\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x724b755843cff10a8e1503d374b857c9e7648be24e7acf1e5bee0584f1b0505c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740ad3ba1c12e426ea32cf234f445431a13efa8dbed38b53c869237e31fc8347\",\"dweb:/ipfs/QmQ3UKUnBQn4gjxjDNGuDLQWuQqcxWzyj1HzwjFgjAJBqh\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"contracts/proxy/DmtpProxyAdmin.sol\":{\"keccak256\":\"0x0755200a6be852370bb7996b2ad3901221fb70ff5a9b315f5fd2cc41e58d6977\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df9455213208435ec433a9aef31fcd0c0d632d0e72d49edf42aafac4ef871875\",\"dweb:/ipfs/QmTu4oAh4XaGhHQSr98dfNW1DwfpZyYPVtPqZdG4Z3TJSj\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":8,"contract":"contracts/proxy/DmtpProxyAdmin.sol:DmtpProxyAdmin","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}}}}}}}